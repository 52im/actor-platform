//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/math/ec/custom/sec/SecP256R1FieldElement.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/math/ec/ECFieldElement.h"
#include "org/bouncycastle/math/ec/custom/sec/SecP256R1Curve.h"
#include "org/bouncycastle/math/ec/custom/sec/SecP256R1Field.h"
#include "org/bouncycastle/math/ec/custom/sec/SecP256R1FieldElement.h"
#include "org/bouncycastle/math/raw/Mod.h"
#include "org/bouncycastle/math/raw/Nat256.h"
#include "org/bouncycastle/util/Arrays.h"

BOOL OrgBouncycastleMathEcCustomSecSecP256R1FieldElement_initialized = NO;

@implementation OrgBouncycastleMathEcCustomSecSecP256R1FieldElement

JavaMathBigInteger * OrgBouncycastleMathEcCustomSecSecP256R1FieldElement_Q_;

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)x {
  if (self = [super init]) {
    if (x == nil || [x signum] < 0 || [x compareToWithId:OrgBouncycastleMathEcCustomSecSecP256R1FieldElement_Q_] >= 0) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"x value invalid for SecP256R1FieldElement"];
    }
    self->x_ = OrgBouncycastleMathEcCustomSecSecP256R1Field_fromBigIntegerWithJavaMathBigInteger_(x);
  }
  return self;
}

- (instancetype)init {
  if (self = [super init]) {
    self->x_ = OrgBouncycastleMathRawNat256_create();
  }
  return self;
}

- (instancetype)initWithIntArray:(IOSIntArray *)x {
  if (self = [super init]) {
    self->x_ = x;
  }
  return self;
}

- (jboolean)isZero {
  return OrgBouncycastleMathRawNat256_isZeroWithIntArray_(x_);
}

- (jboolean)isOne {
  return OrgBouncycastleMathRawNat256_isOneWithIntArray_(x_);
}

- (jboolean)testBitZero {
  return OrgBouncycastleMathRawNat256_getBitWithIntArray_withInt_(x_, 0) == 1;
}

- (JavaMathBigInteger *)toBigInteger {
  return OrgBouncycastleMathRawNat256_toBigIntegerWithIntArray_(x_);
}

- (NSString *)getFieldName {
  return @"SecP256R1Field";
}

- (jint)getFieldSize {
  return [((JavaMathBigInteger *) nil_chk(OrgBouncycastleMathEcCustomSecSecP256R1FieldElement_Q_)) bitLength];
}

- (OrgBouncycastleMathEcECFieldElement *)addWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b {
  IOSIntArray *z = OrgBouncycastleMathRawNat256_create();
  OrgBouncycastleMathEcCustomSecSecP256R1Field_addWithIntArray_withIntArray_withIntArray_(x_, ((OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *) nil_chk(((OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *) check_class_cast(b, [OrgBouncycastleMathEcCustomSecSecP256R1FieldElement class]))))->x_, z);
  return [[OrgBouncycastleMathEcCustomSecSecP256R1FieldElement alloc] initWithIntArray:z];
}

- (OrgBouncycastleMathEcECFieldElement *)addOne {
  IOSIntArray *z = OrgBouncycastleMathRawNat256_create();
  OrgBouncycastleMathEcCustomSecSecP256R1Field_addOneWithIntArray_withIntArray_(x_, z);
  return [[OrgBouncycastleMathEcCustomSecSecP256R1FieldElement alloc] initWithIntArray:z];
}

- (OrgBouncycastleMathEcECFieldElement *)subtractWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b {
  IOSIntArray *z = OrgBouncycastleMathRawNat256_create();
  OrgBouncycastleMathEcCustomSecSecP256R1Field_subtractWithIntArray_withIntArray_withIntArray_(x_, ((OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *) nil_chk(((OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *) check_class_cast(b, [OrgBouncycastleMathEcCustomSecSecP256R1FieldElement class]))))->x_, z);
  return [[OrgBouncycastleMathEcCustomSecSecP256R1FieldElement alloc] initWithIntArray:z];
}

- (OrgBouncycastleMathEcECFieldElement *)multiplyWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b {
  IOSIntArray *z = OrgBouncycastleMathRawNat256_create();
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x_, ((OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *) nil_chk(((OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *) check_class_cast(b, [OrgBouncycastleMathEcCustomSecSecP256R1FieldElement class]))))->x_, z);
  return [[OrgBouncycastleMathEcCustomSecSecP256R1FieldElement alloc] initWithIntArray:z];
}

- (OrgBouncycastleMathEcECFieldElement *)divideWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b {
  IOSIntArray *z = OrgBouncycastleMathRawNat256_create();
  OrgBouncycastleMathRawMod_invertWithIntArray_withIntArray_withIntArray_(OrgBouncycastleMathEcCustomSecSecP256R1Field_get_P_(), ((OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *) nil_chk(((OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *) check_class_cast(b, [OrgBouncycastleMathEcCustomSecSecP256R1FieldElement class]))))->x_, z);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_(z, x_, z);
  return [[OrgBouncycastleMathEcCustomSecSecP256R1FieldElement alloc] initWithIntArray:z];
}

- (OrgBouncycastleMathEcECFieldElement *)negate {
  IOSIntArray *z = OrgBouncycastleMathRawNat256_create();
  OrgBouncycastleMathEcCustomSecSecP256R1Field_negateWithIntArray_withIntArray_(x_, z);
  return [[OrgBouncycastleMathEcCustomSecSecP256R1FieldElement alloc] initWithIntArray:z];
}

- (OrgBouncycastleMathEcECFieldElement *)square {
  IOSIntArray *z = OrgBouncycastleMathRawNat256_create();
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareWithIntArray_withIntArray_(x_, z);
  return [[OrgBouncycastleMathEcCustomSecSecP256R1FieldElement alloc] initWithIntArray:z];
}

- (OrgBouncycastleMathEcECFieldElement *)invert {
  IOSIntArray *z = OrgBouncycastleMathRawNat256_create();
  OrgBouncycastleMathRawMod_invertWithIntArray_withIntArray_withIntArray_(OrgBouncycastleMathEcCustomSecSecP256R1Field_get_P_(), x_, z);
  return [[OrgBouncycastleMathEcCustomSecSecP256R1FieldElement alloc] initWithIntArray:z];
}

- (OrgBouncycastleMathEcECFieldElement *)sqrt {
  IOSIntArray *x1 = self->x_;
  if (OrgBouncycastleMathRawNat256_isZeroWithIntArray_(x1) || OrgBouncycastleMathRawNat256_isOneWithIntArray_(x1)) {
    return self;
  }
  IOSIntArray *t1 = OrgBouncycastleMathRawNat256_create();
  IOSIntArray *t2 = OrgBouncycastleMathRawNat256_create();
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareWithIntArray_withIntArray_(x1, t1);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_(t1, x1, t1);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareNWithIntArray_withInt_withIntArray_(t1, 2, t2);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_(t2, t1, t2);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareNWithIntArray_withInt_withIntArray_(t2, 4, t1);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_(t1, t2, t1);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareNWithIntArray_withInt_withIntArray_(t1, 8, t2);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_(t2, t1, t2);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareNWithIntArray_withInt_withIntArray_(t2, 16, t1);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_(t1, t2, t1);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareNWithIntArray_withInt_withIntArray_(t1, 32, t1);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_(t1, x1, t1);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareNWithIntArray_withInt_withIntArray_(t1, 96, t1);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_(t1, x1, t1);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareNWithIntArray_withInt_withIntArray_(t1, 94, t1);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareWithIntArray_withIntArray_(t1, t2);
  return OrgBouncycastleMathRawNat256_eqWithIntArray_withIntArray_(x1, t2) ? [[OrgBouncycastleMathEcCustomSecSecP256R1FieldElement alloc] initWithIntArray:t1] : nil;
}

- (jboolean)isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (!([other isKindOfClass:[OrgBouncycastleMathEcCustomSecSecP256R1FieldElement class]])) {
    return NO;
  }
  OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *o = (OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *) check_class_cast(other, [OrgBouncycastleMathEcCustomSecSecP256R1FieldElement class]);
  return OrgBouncycastleMathRawNat256_eqWithIntArray_withIntArray_(x_, ((OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *) nil_chk(o))->x_);
}

- (NSUInteger)hash {
  return ((jint) [((JavaMathBigInteger *) nil_chk(OrgBouncycastleMathEcCustomSecSecP256R1FieldElement_Q_)) hash]) ^ OrgBouncycastleUtilArrays_hashCodeWithIntArray_withInt_withInt_(x_, 0, 8);
}

- (void)copyAllFieldsTo:(OrgBouncycastleMathEcCustomSecSecP256R1FieldElement *)other {
  [super copyAllFieldsTo:other];
  other->x_ = x_;
}

+ (void)initialize {
  if (self == [OrgBouncycastleMathEcCustomSecSecP256R1FieldElement class]) {
    OrgBouncycastleMathEcCustomSecSecP256R1FieldElement_Q_ = OrgBouncycastleMathEcCustomSecSecP256R1Curve_get_q_();
    J2OBJC_SET_INITIALIZED(OrgBouncycastleMathEcCustomSecSecP256R1FieldElement)
  }
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathEcCustomSecSecP256R1FieldElement)
