//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/isismtt/ocsp/RequestedCertificate.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/DERTaggedObject.h"
#include "org/bouncycastle/asn1/isismtt/ocsp/RequestedCertificate.h"
#include "org/bouncycastle/asn1/x509/Certificate.h"

@interface OrgBouncycastleAsn1IsismttOcspRequestedCertificate () {
 @public
  OrgBouncycastleAsn1X509Certificate *cert_;
  IOSByteArray *publicKeyCert_;
  IOSByteArray *attributeCert_;
}
- (instancetype)initWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)tagged;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1IsismttOcspRequestedCertificate, cert_, OrgBouncycastleAsn1X509Certificate *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1IsismttOcspRequestedCertificate, publicKeyCert_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1IsismttOcspRequestedCertificate, attributeCert_, IOSByteArray *)

@implementation OrgBouncycastleAsn1IsismttOcspRequestedCertificate

+ (OrgBouncycastleAsn1IsismttOcspRequestedCertificate *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithId_(obj);
}

+ (OrgBouncycastleAsn1IsismttOcspRequestedCertificate *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                               withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

- (instancetype)initOrgBouncycastleAsn1IsismttOcspRequestedCertificateWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)tagged {
  if (self = [super init]) {
    if ([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo] == OrgBouncycastleAsn1IsismttOcspRequestedCertificate_publicKeyCertificate) {
      publicKeyCert_ = [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, YES))) getOctets];
    }
    else if ([tagged getTagNo] == OrgBouncycastleAsn1IsismttOcspRequestedCertificate_attributeCertificate) {
      attributeCert_ = [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, YES))) getOctets];
    }
    else {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"unknown tag number: ", [tagged getTagNo])];
    }
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)tagged {
  return [self initOrgBouncycastleAsn1IsismttOcspRequestedCertificateWithOrgBouncycastleAsn1ASN1TaggedObject:tagged];
}

- (instancetype)initWithOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)certificate {
  if (self = [super init]) {
    self->cert_ = certificate;
  }
  return self;
}

- (instancetype)initWithInt:(jint)type
              withByteArray:(IOSByteArray *)certificateOctets {
  return [self initOrgBouncycastleAsn1IsismttOcspRequestedCertificateWithOrgBouncycastleAsn1ASN1TaggedObject:[[OrgBouncycastleAsn1DERTaggedObject alloc] initWithInt:type withOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DEROctetString alloc] initWithByteArray:certificateOctets]]];
}

- (jint)getType {
  if (cert_ != nil) {
    return OrgBouncycastleAsn1IsismttOcspRequestedCertificate_certificate;
  }
  if (publicKeyCert_ != nil) {
    return OrgBouncycastleAsn1IsismttOcspRequestedCertificate_publicKeyCertificate;
  }
  return OrgBouncycastleAsn1IsismttOcspRequestedCertificate_attributeCertificate;
}

- (IOSByteArray *)getCertificateBytes {
  if (cert_ != nil) {
    @try {
      return [cert_ getEncoded];
    }
    @catch (JavaIoIOException *e) {
      @throw [[JavaLangIllegalStateException alloc] initWithNSString:JreStrcat("$@", @"can't decode certificate: ", e)];
    }
  }
  if (publicKeyCert_ != nil) {
    return publicKeyCert_;
  }
  return attributeCert_;
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  if (publicKeyCert_ != nil) {
    return [[OrgBouncycastleAsn1DERTaggedObject alloc] initWithInt:0 withOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DEROctetString alloc] initWithByteArray:publicKeyCert_]];
  }
  if (attributeCert_ != nil) {
    return [[OrgBouncycastleAsn1DERTaggedObject alloc] initWithInt:1 withOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DEROctetString alloc] initWithByteArray:attributeCert_]];
  }
  return [((OrgBouncycastleAsn1X509Certificate *) nil_chk(cert_)) toASN1Primitive];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1IsismttOcspRequestedCertificate *)other {
  [super copyAllFieldsTo:other];
  other->cert_ = cert_;
  other->publicKeyCert_ = publicKeyCert_;
  other->attributeCert_ = attributeCert_;
}

@end

OrgBouncycastleAsn1IsismttOcspRequestedCertificate *OrgBouncycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1IsismttOcspRequestedCertificate_init();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1IsismttOcspRequestedCertificate class]]) {
    return (OrgBouncycastleAsn1IsismttOcspRequestedCertificate *) check_class_cast(obj, [OrgBouncycastleAsn1IsismttOcspRequestedCertificate class]);
  }
  if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]]) {
    return [[OrgBouncycastleAsn1IsismttOcspRequestedCertificate alloc] initWithOrgBouncycastleAsn1X509Certificate:OrgBouncycastleAsn1X509Certificate_getInstanceWithId_(obj)];
  }
  if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]]) {
    return [[OrgBouncycastleAsn1IsismttOcspRequestedCertificate alloc] initWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *) check_class_cast(obj, [OrgBouncycastleAsn1ASN1TaggedObject class])];
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$$", @"illegal object in getInstance: ", [[nil_chk(obj) getClass] getName])];
}

OrgBouncycastleAsn1IsismttOcspRequestedCertificate *OrgBouncycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgBouncycastleAsn1IsismttOcspRequestedCertificate_init();
  if (!explicit_) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"choice item must be explicitly tagged"];
  }
  return OrgBouncycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithId_([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(obj)) getObject]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1IsismttOcspRequestedCertificate)
