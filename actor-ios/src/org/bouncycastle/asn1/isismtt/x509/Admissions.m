//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/isismtt/x509/Admissions.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/DERTaggedObject.h"
#include "org/bouncycastle/asn1/isismtt/x509/Admissions.h"
#include "org/bouncycastle/asn1/isismtt/x509/NamingAuthority.h"
#include "org/bouncycastle/asn1/isismtt/x509/ProfessionInfo.h"
#include "org/bouncycastle/asn1/x509/GeneralName.h"

@interface OrgBouncycastleAsn1IsismttX509Admissions () {
 @public
  OrgBouncycastleAsn1X509GeneralName *admissionAuthority_;
  OrgBouncycastleAsn1IsismttX509NamingAuthority *namingAuthority_;
  OrgBouncycastleAsn1ASN1Sequence *professionInfos_;
}
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1IsismttX509Admissions, admissionAuthority_, OrgBouncycastleAsn1X509GeneralName *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1IsismttX509Admissions, namingAuthority_, OrgBouncycastleAsn1IsismttX509NamingAuthority *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1IsismttX509Admissions, professionInfos_, OrgBouncycastleAsn1ASN1Sequence *)

@implementation OrgBouncycastleAsn1IsismttX509Admissions

+ (OrgBouncycastleAsn1IsismttX509Admissions *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1IsismttX509Admissions_getInstanceWithId_(obj);
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] > 3) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Bad sequence size: ", [seq size])];
    }
    id<JavaUtilEnumeration> e = [seq getObjects];
    id<OrgBouncycastleAsn1ASN1Encodable> o = (id<OrgBouncycastleAsn1ASN1Encodable>) check_protocol_cast([((id<JavaUtilEnumeration>) nil_chk(e)) nextElement], @protocol(OrgBouncycastleAsn1ASN1Encodable));
    if ([o isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]]) {
      switch ([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(((OrgBouncycastleAsn1ASN1TaggedObject *) check_class_cast(o, [OrgBouncycastleAsn1ASN1TaggedObject class])))) getTagNo]) {
        case 0:
        admissionAuthority_ = OrgBouncycastleAsn1X509GeneralName_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_((OrgBouncycastleAsn1ASN1TaggedObject *) check_class_cast(o, [OrgBouncycastleAsn1ASN1TaggedObject class]), YES);
        break;
        case 1:
        namingAuthority_ = OrgBouncycastleAsn1IsismttX509NamingAuthority_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_((OrgBouncycastleAsn1ASN1TaggedObject *) check_class_cast(o, [OrgBouncycastleAsn1ASN1TaggedObject class]), YES);
        break;
        default:
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Bad tag number: ", [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(((OrgBouncycastleAsn1ASN1TaggedObject *) check_class_cast(o, [OrgBouncycastleAsn1ASN1TaggedObject class])))) getTagNo])];
      }
      o = (id<OrgBouncycastleAsn1ASN1Encodable>) check_protocol_cast([e nextElement], @protocol(OrgBouncycastleAsn1ASN1Encodable));
    }
    if ([o isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]]) {
      switch ([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(((OrgBouncycastleAsn1ASN1TaggedObject *) check_class_cast(o, [OrgBouncycastleAsn1ASN1TaggedObject class])))) getTagNo]) {
        case 1:
        namingAuthority_ = OrgBouncycastleAsn1IsismttX509NamingAuthority_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_((OrgBouncycastleAsn1ASN1TaggedObject *) check_class_cast(o, [OrgBouncycastleAsn1ASN1TaggedObject class]), YES);
        break;
        default:
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Bad tag number: ", [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(((OrgBouncycastleAsn1ASN1TaggedObject *) check_class_cast(o, [OrgBouncycastleAsn1ASN1TaggedObject class])))) getTagNo])];
      }
      o = (id<OrgBouncycastleAsn1ASN1Encodable>) check_protocol_cast([e nextElement], @protocol(OrgBouncycastleAsn1ASN1Encodable));
    }
    professionInfos_ = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o);
    if ([e hasMoreElements]) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$@", @"Bad object encountered: ", [nil_chk([e nextElement]) getClass])];
    }
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1X509GeneralName:(OrgBouncycastleAsn1X509GeneralName *)admissionAuthority
         withOrgBouncycastleAsn1IsismttX509NamingAuthority:(OrgBouncycastleAsn1IsismttX509NamingAuthority *)namingAuthority
     withOrgBouncycastleAsn1IsismttX509ProfessionInfoArray:(IOSObjectArray *)professionInfos {
  if (self = [super init]) {
    self->admissionAuthority_ = admissionAuthority;
    self->namingAuthority_ = namingAuthority;
    self->professionInfos_ = [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableArray:professionInfos];
  }
  return self;
}

- (OrgBouncycastleAsn1X509GeneralName *)getAdmissionAuthority {
  return admissionAuthority_;
}

- (OrgBouncycastleAsn1IsismttX509NamingAuthority *)getNamingAuthority {
  return namingAuthority_;
}

- (IOSObjectArray *)getProfessionInfos {
  IOSObjectArray *infos = [IOSObjectArray newArrayWithLength:[((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(professionInfos_)) size] type:OrgBouncycastleAsn1IsismttX509ProfessionInfo_class_()];
  jint count = 0;
  for (id<JavaUtilEnumeration> e = [professionInfos_ getObjects]; [((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]; ) {
    IOSObjectArray_Set(infos, count++, OrgBouncycastleAsn1IsismttX509ProfessionInfo_getInstanceWithId_([e nextElement]));
  }
  return infos;
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgBouncycastleAsn1ASN1EncodableVector *vec = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  if (admissionAuthority_ != nil) {
    [vec addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DERTaggedObject alloc] initWithBoolean:YES withInt:0 withOrgBouncycastleAsn1ASN1Encodable:admissionAuthority_]];
  }
  if (namingAuthority_ != nil) {
    [vec addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DERTaggedObject alloc] initWithBoolean:YES withInt:1 withOrgBouncycastleAsn1ASN1Encodable:namingAuthority_]];
  }
  [vec addWithOrgBouncycastleAsn1ASN1Encodable:professionInfos_];
  return [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:vec];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1IsismttX509Admissions *)other {
  [super copyAllFieldsTo:other];
  other->admissionAuthority_ = admissionAuthority_;
  other->namingAuthority_ = namingAuthority_;
  other->professionInfos_ = professionInfos_;
}

@end

OrgBouncycastleAsn1IsismttX509Admissions *OrgBouncycastleAsn1IsismttX509Admissions_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1IsismttX509Admissions_init();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1IsismttX509Admissions class]]) {
    return (OrgBouncycastleAsn1IsismttX509Admissions *) check_class_cast(obj, [OrgBouncycastleAsn1IsismttX509Admissions class]);
  }
  if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]]) {
    return [[OrgBouncycastleAsn1IsismttX509Admissions alloc] initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *) check_class_cast(obj, [OrgBouncycastleAsn1ASN1Sequence class])];
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$$", @"illegal object in getInstance: ", [[nil_chk(obj) getClass] getName])];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1IsismttX509Admissions)
