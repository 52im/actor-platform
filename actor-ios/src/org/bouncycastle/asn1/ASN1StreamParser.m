//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/ASN1StreamParser.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Exception.h"
#include "org/bouncycastle/asn1/ASN1InputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1StreamParser.h"
#include "org/bouncycastle/asn1/BERApplicationSpecificParser.h"
#include "org/bouncycastle/asn1/BERFactory.h"
#include "org/bouncycastle/asn1/BEROctetStringParser.h"
#include "org/bouncycastle/asn1/BERSequence.h"
#include "org/bouncycastle/asn1/BERSequenceParser.h"
#include "org/bouncycastle/asn1/BERSetParser.h"
#include "org/bouncycastle/asn1/BERTaggedObject.h"
#include "org/bouncycastle/asn1/BERTaggedObjectParser.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DERApplicationSpecific.h"
#include "org/bouncycastle/asn1/DERExternalParser.h"
#include "org/bouncycastle/asn1/DERFactory.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/DEROctetStringParser.h"
#include "org/bouncycastle/asn1/DERSequenceParser.h"
#include "org/bouncycastle/asn1/DERSetParser.h"
#include "org/bouncycastle/asn1/DERTaggedObject.h"
#include "org/bouncycastle/asn1/DefiniteLengthInputStream.h"
#include "org/bouncycastle/asn1/InMemoryRepresentable.h"
#include "org/bouncycastle/asn1/IndefiniteLengthInputStream.h"
#include "org/bouncycastle/asn1/StreamUtil.h"

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1StreamParser_set00CheckWithBoolean_(OrgBouncycastleAsn1ASN1StreamParser *self, jboolean enabled);

@interface OrgBouncycastleAsn1ASN1StreamParser () {
 @public
  JavaIoInputStream *_in_;
  jint _limit_;
  IOSObjectArray *tmpBuffers_;
}

- (void)set00CheckWithBoolean:(jboolean)enabled;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1StreamParser, _in_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1StreamParser, tmpBuffers_, IOSObjectArray *)

@implementation OrgBouncycastleAsn1ASN1StreamParser

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return [self initOrgBouncycastleAsn1ASN1StreamParserWithJavaIoInputStream:inArg withInt:OrgBouncycastleAsn1StreamUtil_findLimitWithJavaIoInputStream_(inArg)];
}

- (instancetype)initOrgBouncycastleAsn1ASN1StreamParserWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                                                     withInt:(jint)limit {
  if (self = [super init]) {
    self->_in_ = inArg;
    self->_limit_ = limit;
    self->tmpBuffers_ = [IOSObjectArray newArrayWithLength:11 type:IOSClass_byteArray(1)];
  }
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                  withInt:(jint)limit {
  return [self initOrgBouncycastleAsn1ASN1StreamParserWithJavaIoInputStream:inArg withInt:limit];
}

- (instancetype)initWithByteArray:(IOSByteArray *)encoding {
  return [self initOrgBouncycastleAsn1ASN1StreamParserWithJavaIoInputStream:[[JavaIoByteArrayInputStream alloc] initWithByteArray:encoding] withInt:((IOSByteArray *) nil_chk(encoding))->size_];
}

- (id<OrgBouncycastleAsn1ASN1Encodable>)readIndefWithInt:(jint)tagValue {
  switch (tagValue) {
    case OrgBouncycastleAsn1BERTags_EXTERNAL:
    return [[OrgBouncycastleAsn1DERExternalParser alloc] initWithOrgBouncycastleAsn1ASN1StreamParser:self];
    case OrgBouncycastleAsn1BERTags_OCTET_STRING:
    return [[OrgBouncycastleAsn1BEROctetStringParser alloc] initWithOrgBouncycastleAsn1ASN1StreamParser:self];
    case OrgBouncycastleAsn1BERTags_SEQUENCE:
    return [[OrgBouncycastleAsn1BERSequenceParser alloc] initWithOrgBouncycastleAsn1ASN1StreamParser:self];
    case OrgBouncycastleAsn1BERTags_SET:
    return [[OrgBouncycastleAsn1BERSetParser alloc] initWithOrgBouncycastleAsn1ASN1StreamParser:self];
    default:
    @throw [[OrgBouncycastleAsn1ASN1Exception alloc] initWithNSString:JreStrcat("$$", @"unknown BER object encountered: 0x", JavaLangInteger_toHexStringWithInt_(tagValue))];
  }
}

- (id<OrgBouncycastleAsn1ASN1Encodable>)readImplicitWithBoolean:(jboolean)constructed
                                                        withInt:(jint)tag {
  if ([_in_ isKindOfClass:[OrgBouncycastleAsn1IndefiniteLengthInputStream class]]) {
    if (!constructed) {
      @throw [[JavaIoIOException alloc] initWithNSString:@"indefinite length primitive encoding encountered"];
    }
    return [self readIndefWithInt:tag];
  }
  if (constructed) {
    switch (tag) {
      case OrgBouncycastleAsn1BERTags_SET:
      return [[OrgBouncycastleAsn1DERSetParser alloc] initWithOrgBouncycastleAsn1ASN1StreamParser:self];
      case OrgBouncycastleAsn1BERTags_SEQUENCE:
      return [[OrgBouncycastleAsn1DERSequenceParser alloc] initWithOrgBouncycastleAsn1ASN1StreamParser:self];
      case OrgBouncycastleAsn1BERTags_OCTET_STRING:
      return [[OrgBouncycastleAsn1BEROctetStringParser alloc] initWithOrgBouncycastleAsn1ASN1StreamParser:self];
    }
  }
  else {
    switch (tag) {
      case OrgBouncycastleAsn1BERTags_SET:
      @throw [[OrgBouncycastleAsn1ASN1Exception alloc] initWithNSString:@"sequences must use constructed encoding (see X.690 8.9.1/8.10.1)"];
      case OrgBouncycastleAsn1BERTags_SEQUENCE:
      @throw [[OrgBouncycastleAsn1ASN1Exception alloc] initWithNSString:@"sets must use constructed encoding (see X.690 8.11.1/8.12.1)"];
      case OrgBouncycastleAsn1BERTags_OCTET_STRING:
      return [[OrgBouncycastleAsn1DEROctetStringParser alloc] initWithOrgBouncycastleAsn1DefiniteLengthInputStream:(OrgBouncycastleAsn1DefiniteLengthInputStream *) check_class_cast(_in_, [OrgBouncycastleAsn1DefiniteLengthInputStream class])];
    }
  }
  @throw [[JavaLangRuntimeException alloc] initWithNSString:@"implicit tagging not implemented"];
}

- (OrgBouncycastleAsn1ASN1Primitive *)readTaggedObjectWithBoolean:(jboolean)constructed
                                                          withInt:(jint)tag {
  if (!constructed) {
    OrgBouncycastleAsn1DefiniteLengthInputStream *defIn = (OrgBouncycastleAsn1DefiniteLengthInputStream *) check_class_cast(_in_, [OrgBouncycastleAsn1DefiniteLengthInputStream class]);
    return [[OrgBouncycastleAsn1DERTaggedObject alloc] initWithBoolean:NO withInt:tag withOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DEROctetString alloc] initWithByteArray:[((OrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]]];
  }
  OrgBouncycastleAsn1ASN1EncodableVector *v = [self readVector];
  if ([_in_ isKindOfClass:[OrgBouncycastleAsn1IndefiniteLengthInputStream class]]) {
    return [((OrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(v)) size] == 1 ? [[OrgBouncycastleAsn1BERTaggedObject alloc] initWithBoolean:YES withInt:tag withOrgBouncycastleAsn1ASN1Encodable:[v getWithInt:0]] : [[OrgBouncycastleAsn1BERTaggedObject alloc] initWithBoolean:NO withInt:tag withOrgBouncycastleAsn1ASN1Encodable:OrgBouncycastleAsn1BERFactory_createSequenceWithOrgBouncycastleAsn1ASN1EncodableVector_(v)];
  }
  return [((OrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(v)) size] == 1 ? [[OrgBouncycastleAsn1DERTaggedObject alloc] initWithBoolean:YES withInt:tag withOrgBouncycastleAsn1ASN1Encodable:[v getWithInt:0]] : [[OrgBouncycastleAsn1DERTaggedObject alloc] initWithBoolean:NO withInt:tag withOrgBouncycastleAsn1ASN1Encodable:OrgBouncycastleAsn1DERFactory_createSequenceWithOrgBouncycastleAsn1ASN1EncodableVector_(v)];
}

- (id<OrgBouncycastleAsn1ASN1Encodable>)readObject {
  jint tag = [((JavaIoInputStream *) nil_chk(_in_)) read];
  if (tag == -1) {
    return nil;
  }
  OrgBouncycastleAsn1ASN1StreamParser_set00CheckWithBoolean_(self, NO);
  jint tagNo = OrgBouncycastleAsn1ASN1InputStream_readTagNumberWithJavaIoInputStream_withInt_(_in_, tag);
  jboolean isConstructed = (tag & OrgBouncycastleAsn1BERTags_CONSTRUCTED) != 0;
  jint length = OrgBouncycastleAsn1ASN1InputStream_readLengthWithJavaIoInputStream_withInt_(_in_, _limit_);
  if (length < 0) {
    if (!isConstructed) {
      @throw [[JavaIoIOException alloc] initWithNSString:@"indefinite length primitive encoding encountered"];
    }
    OrgBouncycastleAsn1IndefiniteLengthInputStream *indIn = [[OrgBouncycastleAsn1IndefiniteLengthInputStream alloc] initWithJavaIoInputStream:_in_ withInt:_limit_];
    OrgBouncycastleAsn1ASN1StreamParser *sp = [[OrgBouncycastleAsn1ASN1StreamParser alloc] initWithJavaIoInputStream:indIn withInt:_limit_];
    if ((tag & OrgBouncycastleAsn1BERTags_APPLICATION) != 0) {
      return [[OrgBouncycastleAsn1BERApplicationSpecificParser alloc] initWithInt:tagNo withOrgBouncycastleAsn1ASN1StreamParser:sp];
    }
    if ((tag & OrgBouncycastleAsn1BERTags_TAGGED) != 0) {
      return [[OrgBouncycastleAsn1BERTaggedObjectParser alloc] initWithBoolean:YES withInt:tagNo withOrgBouncycastleAsn1ASN1StreamParser:sp];
    }
    return [sp readIndefWithInt:tagNo];
  }
  else {
    OrgBouncycastleAsn1DefiniteLengthInputStream *defIn = [[OrgBouncycastleAsn1DefiniteLengthInputStream alloc] initWithJavaIoInputStream:_in_ withInt:length];
    if ((tag & OrgBouncycastleAsn1BERTags_APPLICATION) != 0) {
      return [[OrgBouncycastleAsn1DERApplicationSpecific alloc] initWithBoolean:isConstructed withInt:tagNo withByteArray:[defIn toByteArray]];
    }
    if ((tag & OrgBouncycastleAsn1BERTags_TAGGED) != 0) {
      return [[OrgBouncycastleAsn1BERTaggedObjectParser alloc] initWithBoolean:isConstructed withInt:tagNo withOrgBouncycastleAsn1ASN1StreamParser:[[OrgBouncycastleAsn1ASN1StreamParser alloc] initWithJavaIoInputStream:defIn]];
    }
    if (isConstructed) {
      switch (tagNo) {
        case OrgBouncycastleAsn1BERTags_OCTET_STRING:
        return [[OrgBouncycastleAsn1BEROctetStringParser alloc] initWithOrgBouncycastleAsn1ASN1StreamParser:[[OrgBouncycastleAsn1ASN1StreamParser alloc] initWithJavaIoInputStream:defIn]];
        case OrgBouncycastleAsn1BERTags_SEQUENCE:
        return [[OrgBouncycastleAsn1DERSequenceParser alloc] initWithOrgBouncycastleAsn1ASN1StreamParser:[[OrgBouncycastleAsn1ASN1StreamParser alloc] initWithJavaIoInputStream:defIn]];
        case OrgBouncycastleAsn1BERTags_SET:
        return [[OrgBouncycastleAsn1DERSetParser alloc] initWithOrgBouncycastleAsn1ASN1StreamParser:[[OrgBouncycastleAsn1ASN1StreamParser alloc] initWithJavaIoInputStream:defIn]];
        case OrgBouncycastleAsn1BERTags_EXTERNAL:
        return [[OrgBouncycastleAsn1DERExternalParser alloc] initWithOrgBouncycastleAsn1ASN1StreamParser:[[OrgBouncycastleAsn1ASN1StreamParser alloc] initWithJavaIoInputStream:defIn]];
        default:
        @throw [[JavaIoIOException alloc] initWithNSString:JreStrcat("$I$", @"unknown tag ", tagNo, @" encountered")];
      }
    }
    switch (tagNo) {
      case OrgBouncycastleAsn1BERTags_OCTET_STRING:
      return [[OrgBouncycastleAsn1DEROctetStringParser alloc] initWithOrgBouncycastleAsn1DefiniteLengthInputStream:defIn];
    }
    @try {
      return OrgBouncycastleAsn1ASN1InputStream_createPrimitiveDERObjectWithInt_withOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(tagNo, defIn, tmpBuffers_);
    }
    @catch (JavaLangIllegalArgumentException *e) {
      @throw [[OrgBouncycastleAsn1ASN1Exception alloc] initWithNSString:@"corrupted stream detected" withJavaLangThrowable:e];
    }
  }
}

- (void)set00CheckWithBoolean:(jboolean)enabled {
  OrgBouncycastleAsn1ASN1StreamParser_set00CheckWithBoolean_(self, enabled);
}

- (OrgBouncycastleAsn1ASN1EncodableVector *)readVector {
  OrgBouncycastleAsn1ASN1EncodableVector *v = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  id<OrgBouncycastleAsn1ASN1Encodable> obj;
  while ((obj = [self readObject]) != nil) {
    if ([OrgBouncycastleAsn1InMemoryRepresentable_class_() isInstance:obj]) {
      [v addWithOrgBouncycastleAsn1ASN1Encodable:[((id<OrgBouncycastleAsn1InMemoryRepresentable>) nil_chk(((id<OrgBouncycastleAsn1InMemoryRepresentable>) check_protocol_cast(obj, @protocol(OrgBouncycastleAsn1InMemoryRepresentable))))) getLoadedObject]];
    }
    else {
      [v addWithOrgBouncycastleAsn1ASN1Encodable:[((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj)) toASN1Primitive]];
    }
  }
  return v;
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1ASN1StreamParser *)other {
  [super copyAllFieldsTo:other];
  other->_in_ = _in_;
  other->_limit_ = _limit_;
  other->tmpBuffers_ = tmpBuffers_;
}

@end

void OrgBouncycastleAsn1ASN1StreamParser_set00CheckWithBoolean_(OrgBouncycastleAsn1ASN1StreamParser *self, jboolean enabled) {
  if ([self->_in_ isKindOfClass:[OrgBouncycastleAsn1IndefiniteLengthInputStream class]]) {
    [((OrgBouncycastleAsn1IndefiniteLengthInputStream *) nil_chk(((OrgBouncycastleAsn1IndefiniteLengthInputStream *) check_class_cast(self->_in_, [OrgBouncycastleAsn1IndefiniteLengthInputStream class])))) setEofOn00WithBoolean:enabled];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1StreamParser)
