//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/x9/X9Curve.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DERBitString.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/x9/X9Curve.h"
#include "org/bouncycastle/asn1/x9/X9FieldElement.h"
#include "org/bouncycastle/asn1/x9/X9FieldID.h"
#include "org/bouncycastle/asn1/x9/X9ObjectIdentifiers.h"
#include "org/bouncycastle/math/ec/ECAlgorithms.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECFieldElement.h"

__attribute__((unused)) static void OrgBouncycastleAsn1X9X9Curve_setFieldIdentifier(OrgBouncycastleAsn1X9X9Curve *self);

@interface OrgBouncycastleAsn1X9X9Curve () {
 @public
  OrgBouncycastleMathEcECCurve *curve_;
  IOSByteArray *seed_;
  OrgBouncycastleAsn1ASN1ObjectIdentifier *fieldIdentifier_;
}

- (void)setFieldIdentifier;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9Curve, curve_, OrgBouncycastleMathEcECCurve *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9Curve, seed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9Curve, fieldIdentifier_, OrgBouncycastleAsn1ASN1ObjectIdentifier *)

@implementation OrgBouncycastleAsn1X9X9Curve

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve {
  if (self = [super init]) {
    fieldIdentifier_ = nil;
    self->curve_ = curve;
    self->seed_ = nil;
    OrgBouncycastleAsn1X9X9Curve_setFieldIdentifier(self);
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                                       withByteArray:(IOSByteArray *)seed {
  if (self = [super init]) {
    fieldIdentifier_ = nil;
    self->curve_ = curve;
    self->seed_ = seed;
    OrgBouncycastleAsn1X9X9Curve_setFieldIdentifier(self);
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1X9X9FieldID:(OrgBouncycastleAsn1X9X9FieldID *)fieldID
                   withOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    fieldIdentifier_ = nil;
    fieldIdentifier_ = [((OrgBouncycastleAsn1X9X9FieldID *) nil_chk(fieldID)) getIdentifier];
    if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(fieldIdentifier_)) isEqual:OrgBouncycastleAsn1X9X9ObjectIdentifiers_get_prime_field_()]) {
      JavaMathBigInteger *p = [((OrgBouncycastleAsn1ASN1Integer *) nil_chk(((OrgBouncycastleAsn1ASN1Integer *) check_class_cast([fieldID getParameters], [OrgBouncycastleAsn1ASN1Integer class])))) getValue];
      OrgBouncycastleAsn1X9X9FieldElement *x9A = [[OrgBouncycastleAsn1X9X9FieldElement alloc] initWithJavaMathBigInteger:p withOrgBouncycastleAsn1ASN1OctetString:(OrgBouncycastleAsn1ASN1OctetString *) check_class_cast([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0], [OrgBouncycastleAsn1ASN1OctetString class])];
      OrgBouncycastleAsn1X9X9FieldElement *x9B = [[OrgBouncycastleAsn1X9X9FieldElement alloc] initWithJavaMathBigInteger:p withOrgBouncycastleAsn1ASN1OctetString:(OrgBouncycastleAsn1ASN1OctetString *) check_class_cast([seq getObjectAtWithInt:1], [OrgBouncycastleAsn1ASN1OctetString class])];
      curve_ = [[OrgBouncycastleMathEcECCurve_Fp alloc] initWithJavaMathBigInteger:p withJavaMathBigInteger:[((OrgBouncycastleMathEcECFieldElement *) nil_chk([x9A getValue])) toBigInteger] withJavaMathBigInteger:[((OrgBouncycastleMathEcECFieldElement *) nil_chk([x9B getValue])) toBigInteger]];
    }
    else if ([fieldIdentifier_ isEqual:OrgBouncycastleAsn1X9X9ObjectIdentifiers_get_characteristic_two_field_()]) {
      OrgBouncycastleAsn1ASN1Sequence *parameters = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([fieldID getParameters]);
      jint m = [((JavaMathBigInteger *) nil_chk([((OrgBouncycastleAsn1ASN1Integer *) nil_chk(((OrgBouncycastleAsn1ASN1Integer *) check_class_cast([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(parameters)) getObjectAtWithInt:0], [OrgBouncycastleAsn1ASN1Integer class])))) getValue])) intValue];
      OrgBouncycastleAsn1ASN1ObjectIdentifier *representation = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) check_class_cast([parameters getObjectAtWithInt:1], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
      jint k1 = 0;
      jint k2 = 0;
      jint k3 = 0;
      if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(representation)) isEqual:OrgBouncycastleAsn1X9X9ObjectIdentifiers_get_tpBasis_()]) {
        k1 = [((JavaMathBigInteger *) nil_chk([((OrgBouncycastleAsn1ASN1Integer *) nil_chk(OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([parameters getObjectAtWithInt:2]))) getValue])) intValue];
      }
      else if ([representation isEqual:OrgBouncycastleAsn1X9X9ObjectIdentifiers_get_ppBasis_()]) {
        OrgBouncycastleAsn1ASN1Sequence *pentanomial = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([parameters getObjectAtWithInt:2]);
        k1 = [((JavaMathBigInteger *) nil_chk([((OrgBouncycastleAsn1ASN1Integer *) nil_chk(OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(pentanomial)) getObjectAtWithInt:0]))) getValue])) intValue];
        k2 = [((JavaMathBigInteger *) nil_chk([((OrgBouncycastleAsn1ASN1Integer *) nil_chk(OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([pentanomial getObjectAtWithInt:1]))) getValue])) intValue];
        k3 = [((JavaMathBigInteger *) nil_chk([((OrgBouncycastleAsn1ASN1Integer *) nil_chk(OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([pentanomial getObjectAtWithInt:2]))) getValue])) intValue];
      }
      else {
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"This type of EC basis is not implemented"];
      }
      OrgBouncycastleAsn1X9X9FieldElement *x9A = [[OrgBouncycastleAsn1X9X9FieldElement alloc] initWithInt:m withInt:k1 withInt:k2 withInt:k3 withOrgBouncycastleAsn1ASN1OctetString:(OrgBouncycastleAsn1ASN1OctetString *) check_class_cast([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0], [OrgBouncycastleAsn1ASN1OctetString class])];
      OrgBouncycastleAsn1X9X9FieldElement *x9B = [[OrgBouncycastleAsn1X9X9FieldElement alloc] initWithInt:m withInt:k1 withInt:k2 withInt:k3 withOrgBouncycastleAsn1ASN1OctetString:(OrgBouncycastleAsn1ASN1OctetString *) check_class_cast([seq getObjectAtWithInt:1], [OrgBouncycastleAsn1ASN1OctetString class])];
      curve_ = [[OrgBouncycastleMathEcECCurve_F2m alloc] initWithInt:m withInt:k1 withInt:k2 withInt:k3 withJavaMathBigInteger:[((OrgBouncycastleMathEcECFieldElement *) nil_chk([x9A getValue])) toBigInteger] withJavaMathBigInteger:[((OrgBouncycastleMathEcECFieldElement *) nil_chk([x9B getValue])) toBigInteger]];
    }
    else {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"This type of ECCurve is not implemented"];
    }
    if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] == 3) {
      seed_ = [((OrgBouncycastleAsn1DERBitString *) nil_chk(((OrgBouncycastleAsn1DERBitString *) check_class_cast([seq getObjectAtWithInt:2], [OrgBouncycastleAsn1DERBitString class])))) getBytes];
    }
  }
  return self;
}

- (void)setFieldIdentifier {
  OrgBouncycastleAsn1X9X9Curve_setFieldIdentifier(self);
}

- (OrgBouncycastleMathEcECCurve *)getCurve {
  return curve_;
}

- (IOSByteArray *)getSeed {
  return seed_;
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgBouncycastleAsn1ASN1EncodableVector *v = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(fieldIdentifier_)) isEqual:OrgBouncycastleAsn1X9X9ObjectIdentifiers_get_prime_field_()]) {
    [v addWithOrgBouncycastleAsn1ASN1Encodable:[((OrgBouncycastleAsn1X9X9FieldElement *) [[OrgBouncycastleAsn1X9X9FieldElement alloc] initWithOrgBouncycastleMathEcECFieldElement:[((OrgBouncycastleMathEcECCurve *) nil_chk(curve_)) getA]]) toASN1Primitive]];
    [v addWithOrgBouncycastleAsn1ASN1Encodable:[((OrgBouncycastleAsn1X9X9FieldElement *) [[OrgBouncycastleAsn1X9X9FieldElement alloc] initWithOrgBouncycastleMathEcECFieldElement:[curve_ getB]]) toASN1Primitive]];
  }
  else if ([fieldIdentifier_ isEqual:OrgBouncycastleAsn1X9X9ObjectIdentifiers_get_characteristic_two_field_()]) {
    [v addWithOrgBouncycastleAsn1ASN1Encodable:[((OrgBouncycastleAsn1X9X9FieldElement *) [[OrgBouncycastleAsn1X9X9FieldElement alloc] initWithOrgBouncycastleMathEcECFieldElement:[((OrgBouncycastleMathEcECCurve *) nil_chk(curve_)) getA]]) toASN1Primitive]];
    [v addWithOrgBouncycastleAsn1ASN1Encodable:[((OrgBouncycastleAsn1X9X9FieldElement *) [[OrgBouncycastleAsn1X9X9FieldElement alloc] initWithOrgBouncycastleMathEcECFieldElement:[curve_ getB]]) toASN1Primitive]];
  }
  if (seed_ != nil) {
    [v addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DERBitString alloc] initWithByteArray:seed_]];
  }
  return [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:v];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1X9X9Curve *)other {
  [super copyAllFieldsTo:other];
  other->curve_ = curve_;
  other->seed_ = seed_;
  other->fieldIdentifier_ = fieldIdentifier_;
}

@end

void OrgBouncycastleAsn1X9X9Curve_setFieldIdentifier(OrgBouncycastleAsn1X9X9Curve *self) {
  if (OrgBouncycastleMathEcECAlgorithms_isFpCurveWithOrgBouncycastleMathEcECCurve_(self->curve_)) {
    self->fieldIdentifier_ = OrgBouncycastleAsn1X9X9ObjectIdentifiers_get_prime_field_();
  }
  else if (OrgBouncycastleMathEcECAlgorithms_isF2mCurveWithOrgBouncycastleMathEcECCurve_(self->curve_)) {
    self->fieldIdentifier_ = OrgBouncycastleAsn1X9X9ObjectIdentifiers_get_characteristic_two_field_();
  }
  else {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"This type of ECCurve is not implemented"];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X9X9Curve)
