//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/DERGenerator.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DERGenerator.h"
#include "org/bouncycastle/util/io/Streams.h"

__attribute__((unused)) static void OrgBouncycastleAsn1DERGenerator_writeLengthWithJavaIoOutputStream_withInt_(OrgBouncycastleAsn1DERGenerator *self, JavaIoOutputStream *outArg, jint length);

@interface OrgBouncycastleAsn1DERGenerator () {
 @public
  jboolean _tagged_;
  jboolean _isExplicit_;
  jint _tagNo_;
}

- (void)writeLengthWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                  withInt:(jint)length;
@end

@implementation OrgBouncycastleAsn1DERGenerator

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  if (self = [super initWithJavaIoOutputStream:outArg]) {
    _tagged_ = NO;
  }
  return self;
}

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                   withInt:(jint)tagNo
                               withBoolean:(jboolean)isExplicit {
  if (self = [super initWithJavaIoOutputStream:outArg]) {
    _tagged_ = NO;
    _tagged_ = YES;
    _isExplicit_ = isExplicit;
    _tagNo_ = tagNo;
  }
  return self;
}

- (void)writeLengthWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                  withInt:(jint)length {
  OrgBouncycastleAsn1DERGenerator_writeLengthWithJavaIoOutputStream_withInt_(self, outArg, length);
}

- (void)writeDEREncodedWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                      withInt:(jint)tag
                                withByteArray:(IOSByteArray *)bytes {
  [((JavaIoOutputStream *) nil_chk(outArg)) writeWithInt:tag];
  OrgBouncycastleAsn1DERGenerator_writeLengthWithJavaIoOutputStream_withInt_(self, outArg, ((IOSByteArray *) nil_chk(bytes))->size_);
  [outArg writeWithByteArray:bytes];
}

- (void)writeDEREncodedWithInt:(jint)tag
                 withByteArray:(IOSByteArray *)bytes {
  if (_tagged_) {
    jint tagNum = _tagNo_ | OrgBouncycastleAsn1BERTags_TAGGED;
    if (_isExplicit_) {
      jint newTag = _tagNo_ | OrgBouncycastleAsn1BERTags_CONSTRUCTED | OrgBouncycastleAsn1BERTags_TAGGED;
      JavaIoByteArrayOutputStream *bOut = [[JavaIoByteArrayOutputStream alloc] init];
      [self writeDEREncodedWithJavaIoOutputStream:bOut withInt:tag withByteArray:bytes];
      [self writeDEREncodedWithJavaIoOutputStream:_out_ withInt:newTag withByteArray:[bOut toByteArray]];
    }
    else {
      if ((tag & OrgBouncycastleAsn1BERTags_CONSTRUCTED) != 0) {
        [self writeDEREncodedWithJavaIoOutputStream:_out_ withInt:tagNum | OrgBouncycastleAsn1BERTags_CONSTRUCTED withByteArray:bytes];
      }
      else {
        [self writeDEREncodedWithJavaIoOutputStream:_out_ withInt:tagNum withByteArray:bytes];
      }
    }
  }
  else {
    [self writeDEREncodedWithJavaIoOutputStream:_out_ withInt:tag withByteArray:bytes];
  }
}

- (void)writeDEREncodedWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                      withInt:(jint)tag
                        withJavaIoInputStream:(JavaIoInputStream *)inArg {
  [self writeDEREncodedWithJavaIoOutputStream:outArg withInt:tag withByteArray:OrgBouncycastleUtilIoStreams_readAllWithJavaIoInputStream_(inArg)];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1DERGenerator *)other {
  [super copyAllFieldsTo:other];
  other->_tagged_ = _tagged_;
  other->_isExplicit_ = _isExplicit_;
  other->_tagNo_ = _tagNo_;
}

@end

void OrgBouncycastleAsn1DERGenerator_writeLengthWithJavaIoOutputStream_withInt_(OrgBouncycastleAsn1DERGenerator *self, JavaIoOutputStream *outArg, jint length) {
  if (length > 127) {
    jint size = 1;
    jint val = length;
    while ((URShiftAssignInt(&val, 8)) != 0) {
      size++;
    }
    [((JavaIoOutputStream *) nil_chk(outArg)) writeWithInt:(jbyte) (size | (jint) 0x80)];
    for (jint i = (size - 1) * 8; i >= 0; i -= 8) {
      [outArg writeWithInt:(jbyte) (RShift32(length, i))];
    }
  }
  else {
    [((JavaIoOutputStream *) nil_chk(outArg)) writeWithInt:(jbyte) length];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1DERGenerator)
