//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/x509/CertificatePair.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/DERTaggedObject.h"
#include "org/bouncycastle/asn1/x509/Certificate.h"
#include "org/bouncycastle/asn1/x509/CertificatePair.h"

@interface OrgBouncycastleAsn1X509CertificatePair () {
 @public
  OrgBouncycastleAsn1X509Certificate *forward_;
  OrgBouncycastleAsn1X509Certificate *reverse_;
}
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509CertificatePair, forward_, OrgBouncycastleAsn1X509Certificate *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509CertificatePair, reverse_, OrgBouncycastleAsn1X509Certificate *)

@implementation OrgBouncycastleAsn1X509CertificatePair

+ (OrgBouncycastleAsn1X509CertificatePair *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1X509CertificatePair_getInstanceWithId_(obj);
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 1 && [seq size] != 2) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Bad sequence size: ", [seq size])];
    }
    id<JavaUtilEnumeration> e = [seq getObjects];
    while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      OrgBouncycastleAsn1ASN1TaggedObject *o = OrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_([e nextElement]);
      if ([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(o)) getTagNo] == 0) {
        forward_ = OrgBouncycastleAsn1X509Certificate_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(o, YES);
      }
      else if ([o getTagNo] == 1) {
        reverse_ = OrgBouncycastleAsn1X509Certificate_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(o, YES);
      }
      else {
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Bad tag number: ", [o getTagNo])];
      }
    }
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)forward
                    withOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)reverse {
  if (self = [super init]) {
    self->forward_ = forward;
    self->reverse_ = reverse;
  }
  return self;
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgBouncycastleAsn1ASN1EncodableVector *vec = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  if (forward_ != nil) {
    [vec addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DERTaggedObject alloc] initWithInt:0 withOrgBouncycastleAsn1ASN1Encodable:forward_]];
  }
  if (reverse_ != nil) {
    [vec addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DERTaggedObject alloc] initWithInt:1 withOrgBouncycastleAsn1ASN1Encodable:reverse_]];
  }
  return [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:vec];
}

- (OrgBouncycastleAsn1X509Certificate *)getForward {
  return forward_;
}

- (OrgBouncycastleAsn1X509Certificate *)getReverse {
  return reverse_;
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1X509CertificatePair *)other {
  [super copyAllFieldsTo:other];
  other->forward_ = forward_;
  other->reverse_ = reverse_;
}

@end

OrgBouncycastleAsn1X509CertificatePair *OrgBouncycastleAsn1X509CertificatePair_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1X509CertificatePair_init();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1X509CertificatePair class]]) {
    return (OrgBouncycastleAsn1X509CertificatePair *) check_class_cast(obj, [OrgBouncycastleAsn1X509CertificatePair class]);
  }
  if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]]) {
    return [[OrgBouncycastleAsn1X509CertificatePair alloc] initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *) check_class_cast(obj, [OrgBouncycastleAsn1ASN1Sequence class])];
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$$", @"illegal object in getInstance: ", [[nil_chk(obj) getClass] getName])];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509CertificatePair)
