//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/x509/DisplayText.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1String.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/DERBMPString.h"
#include "org/bouncycastle/asn1/DERIA5String.h"
#include "org/bouncycastle/asn1/DERUTF8String.h"
#include "org/bouncycastle/asn1/DERVisibleString.h"
#include "org/bouncycastle/asn1/x509/DisplayText.h"

@interface OrgBouncycastleAsn1X509DisplayText ()
- (instancetype)initWithOrgBouncycastleAsn1ASN1String:(id<OrgBouncycastleAsn1ASN1String>)de;
@end

@implementation OrgBouncycastleAsn1X509DisplayText

- (instancetype)initWithInt:(jint)type
               withNSString:(NSString *)text {
  if (self = [super init]) {
    if (((jint) [((NSString *) nil_chk(text)) length]) > OrgBouncycastleAsn1X509DisplayText_DISPLAY_TEXT_MAXIMUM_SIZE) {
      text = [text substring:0 endIndex:OrgBouncycastleAsn1X509DisplayText_DISPLAY_TEXT_MAXIMUM_SIZE];
    }
    contentType_ = type;
    switch (type) {
      case OrgBouncycastleAsn1X509DisplayText_CONTENT_TYPE_IA5STRING:
      contents_ = [[OrgBouncycastleAsn1DERIA5String alloc] initWithNSString:text];
      break;
      case OrgBouncycastleAsn1X509DisplayText_CONTENT_TYPE_UTF8STRING:
      contents_ = [[OrgBouncycastleAsn1DERUTF8String alloc] initWithNSString:text];
      break;
      case OrgBouncycastleAsn1X509DisplayText_CONTENT_TYPE_VISIBLESTRING:
      contents_ = [[OrgBouncycastleAsn1DERVisibleString alloc] initWithNSString:text];
      break;
      case OrgBouncycastleAsn1X509DisplayText_CONTENT_TYPE_BMPSTRING:
      contents_ = [[OrgBouncycastleAsn1DERBMPString alloc] initWithNSString:text];
      break;
      default:
      contents_ = [[OrgBouncycastleAsn1DERUTF8String alloc] initWithNSString:text];
      break;
    }
  }
  return self;
}

- (instancetype)initWithNSString:(NSString *)text {
  if (self = [super init]) {
    if (((jint) [((NSString *) nil_chk(text)) length]) > OrgBouncycastleAsn1X509DisplayText_DISPLAY_TEXT_MAXIMUM_SIZE) {
      text = [text substring:0 endIndex:OrgBouncycastleAsn1X509DisplayText_DISPLAY_TEXT_MAXIMUM_SIZE];
    }
    contentType_ = OrgBouncycastleAsn1X509DisplayText_CONTENT_TYPE_UTF8STRING;
    contents_ = [[OrgBouncycastleAsn1DERUTF8String alloc] initWithNSString:text];
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1String:(id<OrgBouncycastleAsn1ASN1String>)de {
  if (self = [super init]) {
    contents_ = de;
  }
  return self;
}

+ (OrgBouncycastleAsn1X509DisplayText *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1X509DisplayText_getInstanceWithId_(obj);
}

+ (OrgBouncycastleAsn1X509DisplayText *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                               withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1X509DisplayText_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  return (OrgBouncycastleAsn1ASN1Primitive *) check_class_cast(contents_, [OrgBouncycastleAsn1ASN1Primitive class]);
}

- (NSString *)getString {
  return [((id<OrgBouncycastleAsn1ASN1String>) nil_chk(contents_)) getString];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1X509DisplayText *)other {
  [super copyAllFieldsTo:other];
  other->contentType_ = contentType_;
  other->contents_ = contents_;
}

@end

OrgBouncycastleAsn1X509DisplayText *OrgBouncycastleAsn1X509DisplayText_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1X509DisplayText_init();
  if ([OrgBouncycastleAsn1ASN1String_class_() isInstance:obj]) {
    return [[OrgBouncycastleAsn1X509DisplayText alloc] initWithOrgBouncycastleAsn1ASN1String:(id<OrgBouncycastleAsn1ASN1String>) check_protocol_cast(obj, @protocol(OrgBouncycastleAsn1ASN1String))];
  }
  else if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1X509DisplayText class]]) {
    return (OrgBouncycastleAsn1X509DisplayText *) check_class_cast(obj, [OrgBouncycastleAsn1X509DisplayText class]);
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$$", @"illegal object in getInstance: ", [[nil_chk(obj) getClass] getName])];
}

OrgBouncycastleAsn1X509DisplayText *OrgBouncycastleAsn1X509DisplayText_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgBouncycastleAsn1X509DisplayText_init();
  return OrgBouncycastleAsn1X509DisplayText_getInstanceWithId_([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(obj)) getObject]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509DisplayText)
