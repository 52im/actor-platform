//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/x509/X509ExtensionsGenerator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Hashtable.h"
#include "java/util/Vector.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/x509/X509Extension.h"
#include "org/bouncycastle/asn1/x509/X509Extensions.h"
#include "org/bouncycastle/asn1/x509/X509ExtensionsGenerator.h"

@interface OrgBouncycastleAsn1X509X509ExtensionsGenerator () {
 @public
  JavaUtilHashtable *extensions_;
  JavaUtilVector *extOrdering_;
}
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509ExtensionsGenerator, extensions_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509ExtensionsGenerator, extOrdering_, JavaUtilVector *)

@implementation OrgBouncycastleAsn1X509X509ExtensionsGenerator

- (void)reset {
  extensions_ = [[JavaUtilHashtable alloc] init];
  extOrdering_ = [[JavaUtilVector alloc] init];
}

- (void)addExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                    withBoolean:(jboolean)critical
                           withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)value {
  @try {
    [self addExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid withBoolean:critical withByteArray:[((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(value)) toASN1Primitive])) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_get_DER_()]];
  }
  @catch (JavaIoIOException *e) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$@", @"error encoding value: ", e)];
  }
}

- (void)addExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                    withBoolean:(jboolean)critical
                                                  withByteArray:(IOSByteArray *)value {
  if ([((JavaUtilHashtable *) nil_chk(extensions_)) containsKeyWithId:oid]) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$@$", @"extension ", oid, @" already added")];
  }
  [((JavaUtilVector *) nil_chk(extOrdering_)) addElementWithId:oid];
  (void) [extensions_ putWithId:oid withId:[[OrgBouncycastleAsn1X509X509Extension alloc] initWithBoolean:critical withOrgBouncycastleAsn1ASN1OctetString:[[OrgBouncycastleAsn1DEROctetString alloc] initWithByteArray:value]]];
}

- (jboolean)isEmpty {
  return [((JavaUtilVector *) nil_chk(extOrdering_)) isEmpty];
}

- (OrgBouncycastleAsn1X509X509Extensions *)generate {
  return [[OrgBouncycastleAsn1X509X509Extensions alloc] initWithJavaUtilVector:extOrdering_ withJavaUtilHashtable:extensions_];
}

- (instancetype)init {
  if (self = [super init]) {
    extensions_ = [[JavaUtilHashtable alloc] init];
    extOrdering_ = [[JavaUtilVector alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1X509X509ExtensionsGenerator *)other {
  [super copyAllFieldsTo:other];
  other->extensions_ = extensions_;
  other->extOrdering_ = extOrdering_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509X509ExtensionsGenerator)
