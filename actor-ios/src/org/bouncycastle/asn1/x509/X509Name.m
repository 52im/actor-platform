//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/x509/X509Name.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "java/util/Vector.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/ASN1String.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/DERSet.h"
#include "org/bouncycastle/asn1/DERUniversalString.h"
#include "org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/bouncycastle/asn1/x500/X500Name.h"
#include "org/bouncycastle/asn1/x509/X509DefaultEntryConverter.h"
#include "org/bouncycastle/asn1/x509/X509Name.h"
#include "org/bouncycastle/asn1/x509/X509NameEntryConverter.h"
#include "org/bouncycastle/asn1/x509/X509NameTokenizer.h"
#include "org/bouncycastle/asn1/x509/X509ObjectIdentifiers.h"
#include "org/bouncycastle/util/Strings.h"
#include "org/bouncycastle/util/encoders/Hex.h"

__attribute__((unused)) static OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(OrgBouncycastleAsn1X509X509Name *self, NSString *name, JavaUtilHashtable *lookUp);
__attribute__((unused)) static NSString *OrgBouncycastleAsn1X509X509Name_unescapeWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *elt);
__attribute__((unused)) static void OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(OrgBouncycastleAsn1X509X509Name *self, JavaUtilHashtable *lookUp, NSString *token, JavaLangBoolean *isAdded);
__attribute__((unused)) static jboolean OrgBouncycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *s1, NSString *s2);
__attribute__((unused)) static NSString *OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *s);
__attribute__((unused)) static OrgBouncycastleAsn1ASN1Primitive *OrgBouncycastleAsn1X509X509Name_decodeObjectWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *oValue);
__attribute__((unused)) static NSString *OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *str);
__attribute__((unused)) static void OrgBouncycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgBouncycastleAsn1X509X509Name *self, JavaLangStringBuffer *buf, JavaUtilHashtable *oidSymbols, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *value);
__attribute__((unused)) static NSString *OrgBouncycastleAsn1X509X509Name_bytesToStringWithByteArray_(OrgBouncycastleAsn1X509X509Name *self, IOSByteArray *data);

@interface OrgBouncycastleAsn1X509X509Name () {
 @public
  OrgBouncycastleAsn1X509X509NameEntryConverter *converter_;
  JavaUtilVector *ordering_;
  JavaUtilVector *values_;
  JavaUtilVector *added_;
  OrgBouncycastleAsn1ASN1Sequence *seq_;
  jboolean isHashCodeCalculated_;
  jint hashCodeValue_;
}

- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)decodeOIDWithNSString:(NSString *)name
                                             withJavaUtilHashtable:(JavaUtilHashtable *)lookUp;

- (NSString *)unescapeWithNSString:(NSString *)elt;

- (void)addEntryWithJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                         withNSString:(NSString *)token
                  withJavaLangBoolean:(JavaLangBoolean *)isAdded;

- (jboolean)equivalentStringsWithNSString:(NSString *)s1
                             withNSString:(NSString *)s2;

- (NSString *)canonicalizeWithNSString:(NSString *)s;

- (OrgBouncycastleAsn1ASN1Primitive *)decodeObjectWithNSString:(NSString *)oValue;

- (NSString *)stripInternalSpacesWithNSString:(NSString *)str;

- (void)appendValueWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                      withJavaUtilHashtable:(JavaUtilHashtable *)oidSymbols
withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                               withNSString:(NSString *)value;

- (NSString *)bytesToStringWithByteArray:(IOSByteArray *)data;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509Name, converter_, OrgBouncycastleAsn1X509X509NameEntryConverter *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509Name, ordering_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509Name, values_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509Name, added_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509Name, seq_, OrgBouncycastleAsn1ASN1Sequence *)

BOOL OrgBouncycastleAsn1X509X509Name_initialized = NO;

@implementation OrgBouncycastleAsn1X509X509Name

OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_C_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_O_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_OU_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_T_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_CN_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_SN_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_STREET_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_SERIALNUMBER_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_L_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_ST_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_SURNAME_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_GIVENNAME_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_INITIALS_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_GENERATION_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_UNIQUE_IDENTIFIER_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_BUSINESS_CATEGORY_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_POSTAL_CODE_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_DN_QUALIFIER_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_PSEUDONYM_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_DATE_OF_BIRTH_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_PLACE_OF_BIRTH_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_GENDER_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_NAME_AT_BIRTH_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_POSTAL_ADDRESS_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_DMD_NAME_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_TELEPHONE_NUMBER_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_NAME_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_EmailAddress_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_UnstructuredName_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_UnstructuredAddress_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_E_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_DC_;
OrgBouncycastleAsn1ASN1ObjectIdentifier * OrgBouncycastleAsn1X509X509Name_UID_;
jboolean OrgBouncycastleAsn1X509X509Name_DefaultReverse_ = NO;
JavaUtilHashtable * OrgBouncycastleAsn1X509X509Name_DefaultSymbols_;
JavaUtilHashtable * OrgBouncycastleAsn1X509X509Name_RFC2253Symbols_;
JavaUtilHashtable * OrgBouncycastleAsn1X509X509Name_RFC1779Symbols_;
JavaUtilHashtable * OrgBouncycastleAsn1X509X509Name_DefaultLookUp_;
JavaUtilHashtable * OrgBouncycastleAsn1X509X509Name_OIDLookUp_;
JavaUtilHashtable * OrgBouncycastleAsn1X509X509Name_SymbolLookUp_;
JavaLangBoolean * OrgBouncycastleAsn1X509X509Name_TRUE__;
JavaLangBoolean * OrgBouncycastleAsn1X509X509Name_FALSE__;

+ (OrgBouncycastleAsn1X509X509Name *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                            withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1X509X509Name_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

+ (OrgBouncycastleAsn1X509X509Name *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1X509X509Name_getInstanceWithId_(obj);
}

- (instancetype)init {
  if (self = [super init]) {
    converter_ = nil;
    ordering_ = [[JavaUtilVector alloc] init];
    values_ = [[JavaUtilVector alloc] init];
    added_ = [[JavaUtilVector alloc] init];
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    converter_ = nil;
    ordering_ = [[JavaUtilVector alloc] init];
    values_ = [[JavaUtilVector alloc] init];
    added_ = [[JavaUtilVector alloc] init];
    self->seq_ = seq;
    id<JavaUtilEnumeration> e = [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
    while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      OrgBouncycastleAsn1ASN1Set *set = OrgBouncycastleAsn1ASN1Set_getInstanceWithId_([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(((id<OrgBouncycastleAsn1ASN1Encodable>) check_protocol_cast([e nextElement], @protocol(OrgBouncycastleAsn1ASN1Encodable))))) toASN1Primitive]);
      for (jint i = 0; i < [((OrgBouncycastleAsn1ASN1Set *) nil_chk(set)) size]; i++) {
        OrgBouncycastleAsn1ASN1Sequence *s = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk([set getObjectAtWithInt:i])) toASN1Primitive]);
        if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(s)) size] != 2) {
          @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"badly sized pair"];
        }
        [ordering_ addElementWithId:OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([s getObjectAtWithInt:0])];
        id<OrgBouncycastleAsn1ASN1Encodable> value = [s getObjectAtWithInt:1];
        if ([OrgBouncycastleAsn1ASN1String_class_() isInstance:value] && !([value isKindOfClass:[OrgBouncycastleAsn1DERUniversalString class]])) {
          NSString *v = [((id<OrgBouncycastleAsn1ASN1String>) nil_chk(((id<OrgBouncycastleAsn1ASN1String>) check_protocol_cast(value, @protocol(OrgBouncycastleAsn1ASN1String))))) getString];
          if (((jint) [((NSString *) nil_chk(v)) length]) > 0 && [v charAtWithInt:0] == '#') {
            [values_ addElementWithId:JreStrcat("C$", '\\', v)];
          }
          else {
            [values_ addElementWithId:v];
          }
        }
        else {
          @try {
            [values_ addElementWithId:JreStrcat("C$", '#', OrgBouncycastleAsn1X509X509Name_bytesToStringWithByteArray_(self, OrgBouncycastleUtilEncodersHex_encodeWithByteArray_([((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(value)) toASN1Primitive])) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_get_DER_()])))];
          }
          @catch (JavaIoIOException *e1) {
            @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"cannot encode value"];
          }
        }
        [added_ addElementWithId:(i != 0) ? OrgBouncycastleAsn1X509X509Name_TRUE__ : OrgBouncycastleAsn1X509X509Name_FALSE__];
      }
    }
  }
  return self;
}

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)attributes {
  return [self initOrgBouncycastleAsn1X509X509NameWithJavaUtilVector:nil withJavaUtilHashtable:attributes];
}

- (instancetype)initOrgBouncycastleAsn1X509X509NameWithJavaUtilVector:(JavaUtilVector *)ordering
                                                withJavaUtilHashtable:(JavaUtilHashtable *)attributes {
  return [self initOrgBouncycastleAsn1X509X509NameWithJavaUtilVector:ordering withJavaUtilHashtable:attributes withOrgBouncycastleAsn1X509X509NameEntryConverter:[[OrgBouncycastleAsn1X509X509DefaultEntryConverter alloc] init]];
}

- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)ordering
                 withJavaUtilHashtable:(JavaUtilHashtable *)attributes {
  return [self initOrgBouncycastleAsn1X509X509NameWithJavaUtilVector:ordering withJavaUtilHashtable:attributes];
}

- (instancetype)initOrgBouncycastleAsn1X509X509NameWithJavaUtilVector:(JavaUtilVector *)ordering
                                                withJavaUtilHashtable:(JavaUtilHashtable *)attributes
                    withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  if (self = [super init]) {
    converter_ = nil;
    ordering_ = [[JavaUtilVector alloc] init];
    values_ = [[JavaUtilVector alloc] init];
    added_ = [[JavaUtilVector alloc] init];
    self->converter_ = converter;
    if (ordering != nil) {
      for (jint i = 0; i != [ordering size]; i++) {
        [self->ordering_ addElementWithId:[ordering elementAtWithInt:i]];
        [self->added_ addElementWithId:OrgBouncycastleAsn1X509X509Name_FALSE__];
      }
    }
    else {
      id<JavaUtilEnumeration> e = [((JavaUtilHashtable *) nil_chk(attributes)) keys];
      while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
        [self->ordering_ addElementWithId:[e nextElement]];
        [self->added_ addElementWithId:OrgBouncycastleAsn1X509X509Name_FALSE__];
      }
    }
    for (jint i = 0; i != [self->ordering_ size]; i++) {
      OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) check_class_cast([self->ordering_ elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
      if ([((JavaUtilHashtable *) nil_chk(attributes)) getWithId:oid] == nil) {
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$$$", @"No attribute for object id - ", [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId], @" - passed to distinguished name")];
      }
      [self->values_ addElementWithId:[attributes getWithId:oid]];
    }
  }
  return self;
}

- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)ordering
                 withJavaUtilHashtable:(JavaUtilHashtable *)attributes
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  return [self initOrgBouncycastleAsn1X509X509NameWithJavaUtilVector:ordering withJavaUtilHashtable:attributes withOrgBouncycastleAsn1X509X509NameEntryConverter:converter];
}

- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)oids
                    withJavaUtilVector:(JavaUtilVector *)values {
  return [self initOrgBouncycastleAsn1X509X509NameWithJavaUtilVector:oids withJavaUtilVector:values withOrgBouncycastleAsn1X509X509NameEntryConverter:[[OrgBouncycastleAsn1X509X509DefaultEntryConverter alloc] init]];
}

- (instancetype)initOrgBouncycastleAsn1X509X509NameWithJavaUtilVector:(JavaUtilVector *)oids
                                                   withJavaUtilVector:(JavaUtilVector *)values
                    withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  if (self = [super init]) {
    converter_ = nil;
    ordering_ = [[JavaUtilVector alloc] init];
    values_ = [[JavaUtilVector alloc] init];
    added_ = [[JavaUtilVector alloc] init];
    self->converter_ = converter;
    if ([((JavaUtilVector *) nil_chk(oids)) size] != [((JavaUtilVector *) nil_chk(values)) size]) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"oids vector must be same length as values."];
    }
    for (jint i = 0; i < [oids size]; i++) {
      [self->ordering_ addElementWithId:[oids elementAtWithInt:i]];
      [self->values_ addElementWithId:[values elementAtWithInt:i]];
      [self->added_ addElementWithId:OrgBouncycastleAsn1X509X509Name_FALSE__];
    }
  }
  return self;
}

- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)oids
                    withJavaUtilVector:(JavaUtilVector *)values
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  return [self initOrgBouncycastleAsn1X509X509NameWithJavaUtilVector:oids withJavaUtilVector:values withOrgBouncycastleAsn1X509X509NameEntryConverter:converter];
}

- (instancetype)initWithNSString:(NSString *)dirName {
  return [self initOrgBouncycastleAsn1X509X509NameWithBoolean:OrgBouncycastleAsn1X509X509Name_DefaultReverse_ withJavaUtilHashtable:OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ withNSString:dirName];
}

- (instancetype)initWithNSString:(NSString *)dirName
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  return [self initOrgBouncycastleAsn1X509X509NameWithBoolean:OrgBouncycastleAsn1X509X509Name_DefaultReverse_ withJavaUtilHashtable:OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ withNSString:dirName withOrgBouncycastleAsn1X509X509NameEntryConverter:converter];
}

- (instancetype)initWithBoolean:(jboolean)reverse
                   withNSString:(NSString *)dirName {
  return [self initOrgBouncycastleAsn1X509X509NameWithBoolean:reverse withJavaUtilHashtable:OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ withNSString:dirName];
}

- (instancetype)initWithBoolean:(jboolean)reverse
                   withNSString:(NSString *)dirName
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  return [self initOrgBouncycastleAsn1X509X509NameWithBoolean:reverse withJavaUtilHashtable:OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ withNSString:dirName withOrgBouncycastleAsn1X509X509NameEntryConverter:converter];
}

- (instancetype)initOrgBouncycastleAsn1X509X509NameWithBoolean:(jboolean)reverse
                                         withJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                                                  withNSString:(NSString *)dirName {
  return [self initOrgBouncycastleAsn1X509X509NameWithBoolean:reverse withJavaUtilHashtable:lookUp withNSString:dirName withOrgBouncycastleAsn1X509X509NameEntryConverter:[[OrgBouncycastleAsn1X509X509DefaultEntryConverter alloc] init]];
}

- (instancetype)initWithBoolean:(jboolean)reverse
          withJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                   withNSString:(NSString *)dirName {
  return [self initOrgBouncycastleAsn1X509X509NameWithBoolean:reverse withJavaUtilHashtable:lookUp withNSString:dirName];
}

- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)decodeOIDWithNSString:(NSString *)name
                                             withJavaUtilHashtable:(JavaUtilHashtable *)lookUp {
  return OrgBouncycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(self, name, lookUp);
}

- (NSString *)unescapeWithNSString:(NSString *)elt {
  return OrgBouncycastleAsn1X509X509Name_unescapeWithNSString_(self, elt);
}

- (instancetype)initOrgBouncycastleAsn1X509X509NameWithBoolean:(jboolean)reverse
                                         withJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                                                  withNSString:(NSString *)dirName
             withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  if (self = [super init]) {
    converter_ = nil;
    ordering_ = [[JavaUtilVector alloc] init];
    values_ = [[JavaUtilVector alloc] init];
    added_ = [[JavaUtilVector alloc] init];
    self->converter_ = converter;
    OrgBouncycastleAsn1X509X509NameTokenizer *nTok = [[OrgBouncycastleAsn1X509X509NameTokenizer alloc] initWithNSString:dirName];
    while ([nTok hasMoreTokens]) {
      NSString *token = [nTok nextToken];
      if ([((NSString *) nil_chk(token)) indexOf:'+'] > 0) {
        OrgBouncycastleAsn1X509X509NameTokenizer *pTok = [[OrgBouncycastleAsn1X509X509NameTokenizer alloc] initWithNSString:token withChar:'+'];
        OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, [pTok nextToken], OrgBouncycastleAsn1X509X509Name_FALSE__);
        while ([pTok hasMoreTokens]) {
          OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, [pTok nextToken], OrgBouncycastleAsn1X509X509Name_TRUE__);
        }
      }
      else {
        OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, token, OrgBouncycastleAsn1X509X509Name_FALSE__);
      }
    }
    if (reverse) {
      JavaUtilVector *o = [[JavaUtilVector alloc] init];
      JavaUtilVector *v = [[JavaUtilVector alloc] init];
      JavaUtilVector *a = [[JavaUtilVector alloc] init];
      jint count = 1;
      for (jint i = 0; i < [self->ordering_ size]; i++) {
        if ([((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) check_class_cast([self->added_ elementAtWithInt:i], [JavaLangBoolean class])))) booleanValue]) {
          [o insertElementAtWithId:[self->ordering_ elementAtWithInt:i] withInt:count];
          [v insertElementAtWithId:[self->values_ elementAtWithInt:i] withInt:count];
          [a insertElementAtWithId:[self->added_ elementAtWithInt:i] withInt:count];
          count++;
        }
        else {
          [o insertElementAtWithId:[self->ordering_ elementAtWithInt:i] withInt:0];
          [v insertElementAtWithId:[self->values_ elementAtWithInt:i] withInt:0];
          [a insertElementAtWithId:[self->added_ elementAtWithInt:i] withInt:0];
          count = 1;
        }
      }
      self->ordering_ = o;
      self->values_ = v;
      self->added_ = a;
    }
  }
  return self;
}

- (instancetype)initWithBoolean:(jboolean)reverse
          withJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                   withNSString:(NSString *)dirName
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  return [self initOrgBouncycastleAsn1X509X509NameWithBoolean:reverse withJavaUtilHashtable:lookUp withNSString:dirName withOrgBouncycastleAsn1X509X509NameEntryConverter:converter];
}

- (void)addEntryWithJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                         withNSString:(NSString *)token
                  withJavaLangBoolean:(JavaLangBoolean *)isAdded {
  OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, token, isAdded);
}

- (JavaUtilVector *)getOIDs {
  JavaUtilVector *v = [[JavaUtilVector alloc] init];
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(ordering_)) size]; i++) {
    [v addElementWithId:[ordering_ elementAtWithInt:i]];
  }
  return v;
}

- (JavaUtilVector *)getValues {
  JavaUtilVector *v = [[JavaUtilVector alloc] init];
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(values_)) size]; i++) {
    [v addElementWithId:[values_ elementAtWithInt:i]];
  }
  return v;
}

- (JavaUtilVector *)getValuesWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  JavaUtilVector *v = [[JavaUtilVector alloc] init];
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(values_)) size]; i++) {
    if ([nil_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i]) isEqual:oid]) {
      NSString *val = (NSString *) check_class_cast([values_ elementAtWithInt:i], [NSString class]);
      if (((jint) [((NSString *) nil_chk(val)) length]) > 2 && [val charAtWithInt:0] == '\\' && [val charAtWithInt:1] == '#') {
        [v addElementWithId:[val substring:1]];
      }
      else {
        [v addElementWithId:val];
      }
    }
  }
  return v;
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  if (seq_ == nil) {
    OrgBouncycastleAsn1ASN1EncodableVector *vec = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
    OrgBouncycastleAsn1ASN1EncodableVector *sVec = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
    OrgBouncycastleAsn1ASN1ObjectIdentifier *lstOid = nil;
    for (jint i = 0; i != [((JavaUtilVector *) nil_chk(ordering_)) size]; i++) {
      OrgBouncycastleAsn1ASN1EncodableVector *v = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
      OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) check_class_cast([ordering_ elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
      [v addWithOrgBouncycastleAsn1ASN1Encodable:oid];
      NSString *str = (NSString *) check_class_cast([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
      [v addWithOrgBouncycastleAsn1ASN1Encodable:[((OrgBouncycastleAsn1X509X509NameEntryConverter *) nil_chk(converter_)) getConvertedValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid withNSString:str]];
      if (lstOid == nil || [((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) check_class_cast([((JavaUtilVector *) nil_chk(self->added_)) elementAtWithInt:i], [JavaLangBoolean class])))) booleanValue]) {
        [sVec addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:v]];
      }
      else {
        [vec addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DERSet alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:sVec]];
        sVec = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
        [sVec addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:v]];
      }
      lstOid = oid;
    }
    [vec addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DERSet alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:sVec]];
    seq_ = [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:vec];
  }
  return seq_;
}

- (jboolean)equalsWithId:(id)obj
             withBoolean:(jboolean)inOrder {
  if (!inOrder) {
    return [self isEqual:obj];
  }
  if (obj == self) {
    return YES;
  }
  if (!([obj isKindOfClass:[OrgBouncycastleAsn1X509X509Name class]] || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]])) {
    return NO;
  }
  OrgBouncycastleAsn1ASN1Primitive *derO = [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(((id<OrgBouncycastleAsn1ASN1Encodable>) check_protocol_cast(obj, @protocol(OrgBouncycastleAsn1ASN1Encodable))))) toASN1Primitive];
  if ([((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([self toASN1Primitive])) isEqual:derO]) {
    return YES;
  }
  OrgBouncycastleAsn1X509X509Name *other;
  @try {
    other = OrgBouncycastleAsn1X509X509Name_getInstanceWithId_(obj);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    return NO;
  }
  jint orderingSize = [((JavaUtilVector *) nil_chk(ordering_)) size];
  if (orderingSize != [((OrgBouncycastleAsn1X509X509Name *) nil_chk(other))->ordering_ size]) {
    return NO;
  }
  for (jint i = 0; i < orderingSize; i++) {
    OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) check_class_cast([ordering_ elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    OrgBouncycastleAsn1ASN1ObjectIdentifier *oOid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) check_class_cast([other->ordering_ elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) isEqual:oOid]) {
      NSString *value = (NSString *) check_class_cast([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
      NSString *oValue = (NSString *) check_class_cast([other->values_ elementAtWithInt:i], [NSString class]);
      if (!OrgBouncycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(self, value, oValue)) {
        return NO;
      }
    }
    else {
      return NO;
    }
  }
  return YES;
}

- (NSUInteger)hash {
  if (isHashCodeCalculated_) {
    return hashCodeValue_;
  }
  isHashCodeCalculated_ = YES;
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(ordering_)) size]; i += 1) {
    NSString *value = (NSString *) check_class_cast([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
    value = OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(self, value);
    value = OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, value);
    hashCodeValue_ ^= ((jint) [nil_chk([ordering_ elementAtWithInt:i]) hash]);
    hashCodeValue_ ^= ((jint) [((NSString *) nil_chk(value)) hash]);
  }
  return hashCodeValue_;
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if (!([obj isKindOfClass:[OrgBouncycastleAsn1X509X509Name class]] || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]])) {
    return NO;
  }
  OrgBouncycastleAsn1ASN1Primitive *derO = [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(((id<OrgBouncycastleAsn1ASN1Encodable>) check_protocol_cast(obj, @protocol(OrgBouncycastleAsn1ASN1Encodable))))) toASN1Primitive];
  if ([((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([self toASN1Primitive])) isEqual:derO]) {
    return YES;
  }
  OrgBouncycastleAsn1X509X509Name *other;
  @try {
    other = OrgBouncycastleAsn1X509X509Name_getInstanceWithId_(obj);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    return NO;
  }
  jint orderingSize = [((JavaUtilVector *) nil_chk(ordering_)) size];
  if (orderingSize != [((OrgBouncycastleAsn1X509X509Name *) nil_chk(other))->ordering_ size]) {
    return NO;
  }
  IOSBooleanArray *indexes = [IOSBooleanArray newArrayWithLength:orderingSize];
  jint start, end, delta;
  if ([nil_chk([ordering_ elementAtWithInt:0]) isEqual:[other->ordering_ elementAtWithInt:0]]) {
    start = 0;
    end = orderingSize;
    delta = 1;
  }
  else {
    start = orderingSize - 1;
    end = -1;
    delta = -1;
  }
  for (jint i = start; i != end; i += delta) {
    jboolean found = NO;
    OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) check_class_cast([ordering_ elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    NSString *value = (NSString *) check_class_cast([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
    for (jint j = 0; j < orderingSize; j++) {
      if (IOSBooleanArray_Get(indexes, j)) {
        continue;
      }
      OrgBouncycastleAsn1ASN1ObjectIdentifier *oOid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) check_class_cast([other->ordering_ elementAtWithInt:j], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
      if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) isEqual:oOid]) {
        NSString *oValue = (NSString *) check_class_cast([other->values_ elementAtWithInt:j], [NSString class]);
        if (OrgBouncycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(self, value, oValue)) {
          *IOSBooleanArray_GetRef(indexes, j) = YES;
          found = YES;
          break;
        }
      }
    }
    if (!found) {
      return NO;
    }
  }
  return YES;
}

- (jboolean)equivalentStringsWithNSString:(NSString *)s1
                             withNSString:(NSString *)s2 {
  return OrgBouncycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(self, s1, s2);
}

- (NSString *)canonicalizeWithNSString:(NSString *)s {
  return OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(self, s);
}

- (OrgBouncycastleAsn1ASN1Primitive *)decodeObjectWithNSString:(NSString *)oValue {
  return OrgBouncycastleAsn1X509X509Name_decodeObjectWithNSString_(self, oValue);
}

- (NSString *)stripInternalSpacesWithNSString:(NSString *)str {
  return OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, str);
}

- (void)appendValueWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                      withJavaUtilHashtable:(JavaUtilHashtable *)oidSymbols
withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                               withNSString:(NSString *)value {
  OrgBouncycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(self, buf, oidSymbols, oid, value);
}

- (NSString *)toStringWithBoolean:(jboolean)reverse
            withJavaUtilHashtable:(JavaUtilHashtable *)oidSymbols {
  JavaLangStringBuffer *buf = [[JavaLangStringBuffer alloc] init];
  JavaUtilVector *components = [[JavaUtilVector alloc] init];
  jboolean first = YES;
  JavaLangStringBuffer *ava = nil;
  for (jint i = 0; i < [((JavaUtilVector *) nil_chk(ordering_)) size]; i++) {
    if ([((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) check_class_cast([((JavaUtilVector *) nil_chk(added_)) elementAtWithInt:i], [JavaLangBoolean class])))) booleanValue]) {
      (void) [((JavaLangStringBuffer *) nil_chk(ava)) appendWithChar:'+'];
      OrgBouncycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(self, ava, oidSymbols, (OrgBouncycastleAsn1ASN1ObjectIdentifier *) check_class_cast([ordering_ elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]), (NSString *) check_class_cast([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]));
    }
    else {
      ava = [[JavaLangStringBuffer alloc] init];
      OrgBouncycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(self, ava, oidSymbols, (OrgBouncycastleAsn1ASN1ObjectIdentifier *) check_class_cast([ordering_ elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]), (NSString *) check_class_cast([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]));
      [components addElementWithId:ava];
    }
  }
  if (reverse) {
    for (jint i = [components size] - 1; i >= 0; i--) {
      if (first) {
        first = NO;
      }
      else {
        (void) [buf appendWithChar:','];
      }
      (void) [buf appendWithNSString:[nil_chk([components elementAtWithInt:i]) description]];
    }
  }
  else {
    for (jint i = 0; i < [components size]; i++) {
      if (first) {
        first = NO;
      }
      else {
        (void) [buf appendWithChar:','];
      }
      (void) [buf appendWithNSString:[nil_chk([components elementAtWithInt:i]) description]];
    }
  }
  return [buf description];
}

- (NSString *)bytesToStringWithByteArray:(IOSByteArray *)data {
  return OrgBouncycastleAsn1X509X509Name_bytesToStringWithByteArray_(self, data);
}

- (NSString *)description {
  return [self toStringWithBoolean:OrgBouncycastleAsn1X509X509Name_DefaultReverse_ withJavaUtilHashtable:OrgBouncycastleAsn1X509X509Name_DefaultSymbols_];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1X509X509Name *)other {
  [super copyAllFieldsTo:other];
  other->converter_ = converter_;
  other->ordering_ = ordering_;
  other->values_ = values_;
  other->added_ = added_;
  other->seq_ = seq_;
  other->isHashCodeCalculated_ = isHashCodeCalculated_;
  other->hashCodeValue_ = hashCodeValue_;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1X509X509Name class]) {
    OrgBouncycastleAsn1X509X509Name_C_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.6"];
    OrgBouncycastleAsn1X509X509Name_O_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.10"];
    OrgBouncycastleAsn1X509X509Name_OU_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.11"];
    OrgBouncycastleAsn1X509X509Name_T_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.12"];
    OrgBouncycastleAsn1X509X509Name_CN_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.3"];
    OrgBouncycastleAsn1X509X509Name_SN_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.5"];
    OrgBouncycastleAsn1X509X509Name_STREET_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.9"];
    OrgBouncycastleAsn1X509X509Name_SERIALNUMBER_ = OrgBouncycastleAsn1X509X509Name_SN_;
    OrgBouncycastleAsn1X509X509Name_L_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.7"];
    OrgBouncycastleAsn1X509X509Name_ST_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.8"];
    OrgBouncycastleAsn1X509X509Name_SURNAME_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.4"];
    OrgBouncycastleAsn1X509X509Name_GIVENNAME_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.42"];
    OrgBouncycastleAsn1X509X509Name_INITIALS_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.43"];
    OrgBouncycastleAsn1X509X509Name_GENERATION_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.44"];
    OrgBouncycastleAsn1X509X509Name_UNIQUE_IDENTIFIER_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.45"];
    OrgBouncycastleAsn1X509X509Name_BUSINESS_CATEGORY_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.15"];
    OrgBouncycastleAsn1X509X509Name_POSTAL_CODE_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.17"];
    OrgBouncycastleAsn1X509X509Name_DN_QUALIFIER_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.46"];
    OrgBouncycastleAsn1X509X509Name_PSEUDONYM_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.65"];
    OrgBouncycastleAsn1X509X509Name_DATE_OF_BIRTH_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"1.3.6.1.5.5.7.9.1"];
    OrgBouncycastleAsn1X509X509Name_PLACE_OF_BIRTH_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"1.3.6.1.5.5.7.9.2"];
    OrgBouncycastleAsn1X509X509Name_GENDER_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"1.3.6.1.5.5.7.9.3"];
    OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"1.3.6.1.5.5.7.9.4"];
    OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"1.3.6.1.5.5.7.9.5"];
    OrgBouncycastleAsn1X509X509Name_NAME_AT_BIRTH_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"1.3.36.8.3.14"];
    OrgBouncycastleAsn1X509X509Name_POSTAL_ADDRESS_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.16"];
    OrgBouncycastleAsn1X509X509Name_DMD_NAME_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"2.5.4.54"];
    OrgBouncycastleAsn1X509X509Name_TELEPHONE_NUMBER_ = OrgBouncycastleAsn1X509X509ObjectIdentifiers_get_id_at_telephoneNumber_();
    OrgBouncycastleAsn1X509X509Name_NAME_ = OrgBouncycastleAsn1X509X509ObjectIdentifiers_get_id_at_name_();
    OrgBouncycastleAsn1X509X509Name_EmailAddress_ = OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers_get_pkcs_9_at_emailAddress_();
    OrgBouncycastleAsn1X509X509Name_UnstructuredName_ = OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers_get_pkcs_9_at_unstructuredName_();
    OrgBouncycastleAsn1X509X509Name_UnstructuredAddress_ = OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers_get_pkcs_9_at_unstructuredAddress_();
    OrgBouncycastleAsn1X509X509Name_E_ = OrgBouncycastleAsn1X509X509Name_EmailAddress_;
    OrgBouncycastleAsn1X509X509Name_DC_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"0.9.2342.19200300.100.1.25"];
    OrgBouncycastleAsn1X509X509Name_UID_ = [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:@"0.9.2342.19200300.100.1.1"];
    OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ = [[JavaUtilHashtable alloc] init];
    OrgBouncycastleAsn1X509X509Name_RFC2253Symbols_ = [[JavaUtilHashtable alloc] init];
    OrgBouncycastleAsn1X509X509Name_RFC1779Symbols_ = [[JavaUtilHashtable alloc] init];
    OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ = [[JavaUtilHashtable alloc] init];
    OrgBouncycastleAsn1X509X509Name_OIDLookUp_ = OrgBouncycastleAsn1X509X509Name_DefaultSymbols_;
    OrgBouncycastleAsn1X509X509Name_SymbolLookUp_ = OrgBouncycastleAsn1X509X509Name_DefaultLookUp_;
    OrgBouncycastleAsn1X509X509Name_TRUE__ = [[JavaLangBoolean alloc] initWithBoolean:YES];
    OrgBouncycastleAsn1X509X509Name_FALSE__ = [[JavaLangBoolean alloc] initWithBoolean:NO];
    {
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_C_ withId:@"C"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_O_ withId:@"O"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_T_ withId:@"T"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_OU_ withId:@"OU"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_CN_ withId:@"CN"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_L_ withId:@"L"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_ST_ withId:@"ST"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_SN_ withId:@"SERIALNUMBER"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_EmailAddress_ withId:@"E"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_DC_ withId:@"DC"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_UID_ withId:@"UID"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_STREET_ withId:@"STREET"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_SURNAME_ withId:@"SURNAME"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_GIVENNAME_ withId:@"GIVENNAME"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_INITIALS_ withId:@"INITIALS"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_GENERATION_ withId:@"GENERATION"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_UnstructuredAddress_ withId:@"unstructuredAddress"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_UnstructuredName_ withId:@"unstructuredName"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_UNIQUE_IDENTIFIER_ withId:@"UniqueIdentifier"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_DN_QUALIFIER_ withId:@"DN"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_PSEUDONYM_ withId:@"Pseudonym"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_POSTAL_ADDRESS_ withId:@"PostalAddress"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_NAME_AT_BIRTH_ withId:@"NameAtBirth"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP_ withId:@"CountryOfCitizenship"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE_ withId:@"CountryOfResidence"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_GENDER_ withId:@"Gender"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_PLACE_OF_BIRTH_ withId:@"PlaceOfBirth"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_DATE_OF_BIRTH_ withId:@"DateOfBirth"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_POSTAL_CODE_ withId:@"PostalCode"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_BUSINESS_CATEGORY_ withId:@"BusinessCategory"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_TELEPHONE_NUMBER_ withId:@"TelephoneNumber"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols_ putWithId:OrgBouncycastleAsn1X509X509Name_NAME_ withId:@"Name"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_C_ withId:@"C"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_O_ withId:@"O"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_OU_ withId:@"OU"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_CN_ withId:@"CN"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_L_ withId:@"L"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_ST_ withId:@"ST"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_STREET_ withId:@"STREET"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_DC_ withId:@"DC"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_UID_ withId:@"UID"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_C_ withId:@"C"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_O_ withId:@"O"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_OU_ withId:@"OU"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_CN_ withId:@"CN"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_L_ withId:@"L"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_ST_ withId:@"ST"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols_ putWithId:OrgBouncycastleAsn1X509X509Name_STREET_ withId:@"STREET"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"c" withId:OrgBouncycastleAsn1X509X509Name_C_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"o" withId:OrgBouncycastleAsn1X509X509Name_O_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"t" withId:OrgBouncycastleAsn1X509X509Name_T_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"ou" withId:OrgBouncycastleAsn1X509X509Name_OU_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"cn" withId:OrgBouncycastleAsn1X509X509Name_CN_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"l" withId:OrgBouncycastleAsn1X509X509Name_L_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"st" withId:OrgBouncycastleAsn1X509X509Name_ST_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"sn" withId:OrgBouncycastleAsn1X509X509Name_SN_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"serialnumber" withId:OrgBouncycastleAsn1X509X509Name_SN_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"street" withId:OrgBouncycastleAsn1X509X509Name_STREET_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"emailaddress" withId:OrgBouncycastleAsn1X509X509Name_E_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"dc" withId:OrgBouncycastleAsn1X509X509Name_DC_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"e" withId:OrgBouncycastleAsn1X509X509Name_E_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"uid" withId:OrgBouncycastleAsn1X509X509Name_UID_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"surname" withId:OrgBouncycastleAsn1X509X509Name_SURNAME_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"givenname" withId:OrgBouncycastleAsn1X509X509Name_GIVENNAME_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"initials" withId:OrgBouncycastleAsn1X509X509Name_INITIALS_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"generation" withId:OrgBouncycastleAsn1X509X509Name_GENERATION_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"unstructuredaddress" withId:OrgBouncycastleAsn1X509X509Name_UnstructuredAddress_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"unstructuredname" withId:OrgBouncycastleAsn1X509X509Name_UnstructuredName_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"uniqueidentifier" withId:OrgBouncycastleAsn1X509X509Name_UNIQUE_IDENTIFIER_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"dn" withId:OrgBouncycastleAsn1X509X509Name_DN_QUALIFIER_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"pseudonym" withId:OrgBouncycastleAsn1X509X509Name_PSEUDONYM_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"postaladdress" withId:OrgBouncycastleAsn1X509X509Name_POSTAL_ADDRESS_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"nameofbirth" withId:OrgBouncycastleAsn1X509X509Name_NAME_AT_BIRTH_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"countryofcitizenship" withId:OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"countryofresidence" withId:OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"gender" withId:OrgBouncycastleAsn1X509X509Name_GENDER_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"placeofbirth" withId:OrgBouncycastleAsn1X509X509Name_PLACE_OF_BIRTH_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"dateofbirth" withId:OrgBouncycastleAsn1X509X509Name_DATE_OF_BIRTH_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"postalcode" withId:OrgBouncycastleAsn1X509X509Name_POSTAL_CODE_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"businesscategory" withId:OrgBouncycastleAsn1X509X509Name_BUSINESS_CATEGORY_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"telephonenumber" withId:OrgBouncycastleAsn1X509X509Name_TELEPHONE_NUMBER_];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp_ putWithId:@"name" withId:OrgBouncycastleAsn1X509X509Name_NAME_];
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1X509X509Name)
  }
}

@end

OrgBouncycastleAsn1X509X509Name *OrgBouncycastleAsn1X509X509Name_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgBouncycastleAsn1X509X509Name_init();
  return OrgBouncycastleAsn1X509X509Name_getInstanceWithId_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgBouncycastleAsn1X509X509Name *OrgBouncycastleAsn1X509X509Name_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1X509X509Name_init();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1X509X509Name class]]) {
    return (OrgBouncycastleAsn1X509X509Name *) check_class_cast(obj, [OrgBouncycastleAsn1X509X509Name class]);
  }
  else if ([obj isKindOfClass:[OrgBouncycastleAsn1X500X500Name class]]) {
    return [[OrgBouncycastleAsn1X509X509Name alloc] initWithOrgBouncycastleAsn1ASN1Sequence:OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([((OrgBouncycastleAsn1X500X500Name *) check_class_cast(obj, [OrgBouncycastleAsn1X500X500Name class])) toASN1Primitive])];
  }
  else if (obj != nil) {
    return [[OrgBouncycastleAsn1X509X509Name alloc] initWithOrgBouncycastleAsn1ASN1Sequence:OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj)];
  }
  return nil;
}

OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(OrgBouncycastleAsn1X509X509Name *self, NSString *name, JavaUtilHashtable *lookUp) {
  name = [((NSString *) nil_chk(name)) trim];
  if ([((NSString *) nil_chk(OrgBouncycastleUtilStrings_toUpperCaseWithNSString_(name))) hasPrefix:@"OID."]) {
    return [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:[((NSString *) nil_chk(name)) substring:4]];
  }
  else if ([((NSString *) nil_chk(name)) charAtWithInt:0] >= '0' && [name charAtWithInt:0] <= '9') {
    return [[OrgBouncycastleAsn1ASN1ObjectIdentifier alloc] initWithNSString:name];
  }
  OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) check_class_cast([((JavaUtilHashtable *) nil_chk(lookUp)) getWithId:OrgBouncycastleUtilStrings_toLowerCaseWithNSString_(name)], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
  if (oid == nil) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$$$", @"Unknown object id - ", name, @" - passed to distinguished name")];
  }
  return oid;
}

NSString *OrgBouncycastleAsn1X509X509Name_unescapeWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *elt) {
  if (((jint) [((NSString *) nil_chk(elt)) length]) == 0 || ([elt indexOf:'\\'] < 0 && [elt indexOf:'"'] < 0)) {
    return [elt trim];
  }
  IOSCharArray *elts = [elt toCharArray];
  jboolean escaped = NO;
  jboolean quoted = NO;
  JavaLangStringBuffer *buf = [[JavaLangStringBuffer alloc] initWithInt:((jint) [elt length])];
  jint start = 0;
  if (IOSCharArray_Get(nil_chk(elts), 0) == '\\') {
    if (IOSCharArray_Get(elts, 1) == '#') {
      start = 2;
      (void) [buf appendWithNSString:@"\\#"];
    }
  }
  jboolean nonWhiteSpaceEncountered = NO;
  jint lastEscaped = 0;
  for (jint i = start; i != elts->size_; i++) {
    jchar c = IOSCharArray_Get(elts, i);
    if (c != ' ') {
      nonWhiteSpaceEncountered = YES;
    }
    if (c == '"') {
      if (!escaped) {
        quoted = !quoted;
      }
      else {
        (void) [buf appendWithChar:c];
      }
      escaped = NO;
    }
    else if (c == '\\' && !(escaped || quoted)) {
      escaped = YES;
      lastEscaped = [buf sequenceLength];
    }
    else {
      if (c == ' ' && !escaped && !nonWhiteSpaceEncountered) {
        continue;
      }
      (void) [buf appendWithChar:c];
      escaped = NO;
    }
  }
  if ([buf sequenceLength] > 0) {
    while ([buf charAtWithInt:[buf sequenceLength] - 1] == ' ' && lastEscaped != ([buf sequenceLength] - 1)) {
      [buf setLengthWithInt:[buf sequenceLength] - 1];
    }
  }
  return [buf description];
}

void OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(OrgBouncycastleAsn1X509X509Name *self, JavaUtilHashtable *lookUp, NSString *token, JavaLangBoolean *isAdded) {
  OrgBouncycastleAsn1X509X509NameTokenizer *vTok;
  NSString *name;
  NSString *value;
  OrgBouncycastleAsn1ASN1ObjectIdentifier *oid;
  vTok = [[OrgBouncycastleAsn1X509X509NameTokenizer alloc] initWithNSString:token withChar:'='];
  name = [vTok nextToken];
  if (![vTok hasMoreTokens]) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"badly formatted directory string"];
  }
  value = [vTok nextToken];
  oid = OrgBouncycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(self, name, lookUp);
  [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:oid];
  [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:OrgBouncycastleAsn1X509X509Name_unescapeWithNSString_(self, value)];
  [((JavaUtilVector *) nil_chk(self->added_)) addElementWithId:isAdded];
}

jboolean OrgBouncycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *s1, NSString *s2) {
  NSString *value = OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(self, s1);
  NSString *oValue = OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(self, s2);
  if (![((NSString *) nil_chk(value)) isEqual:oValue]) {
    value = OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, value);
    oValue = OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, oValue);
    if (![((NSString *) nil_chk(value)) isEqual:oValue]) {
      return NO;
    }
  }
  return YES;
}

NSString *OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *s) {
  NSString *value = OrgBouncycastleUtilStrings_toLowerCaseWithNSString_([((NSString *) nil_chk(s)) trim]);
  if (((jint) [((NSString *) nil_chk(value)) length]) > 0 && [value charAtWithInt:0] == '#') {
    OrgBouncycastleAsn1ASN1Primitive *obj = OrgBouncycastleAsn1X509X509Name_decodeObjectWithNSString_(self, value);
    if ([OrgBouncycastleAsn1ASN1String_class_() isInstance:obj]) {
      value = OrgBouncycastleUtilStrings_toLowerCaseWithNSString_([((NSString *) nil_chk([((id<OrgBouncycastleAsn1ASN1String>) nil_chk(((id<OrgBouncycastleAsn1ASN1String>) check_protocol_cast(obj, @protocol(OrgBouncycastleAsn1ASN1String))))) getString])) trim]);
    }
  }
  return value;
}

OrgBouncycastleAsn1ASN1Primitive *OrgBouncycastleAsn1X509X509Name_decodeObjectWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *oValue) {
  @try {
    return OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(OrgBouncycastleUtilEncodersHex_decodeWithNSString_([((NSString *) nil_chk(oValue)) substring:1]));
  }
  @catch (JavaIoIOException *e) {
    @throw [[JavaLangIllegalStateException alloc] initWithNSString:JreStrcat("$@", @"unknown encoding in name: ", e)];
  }
}

NSString *OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *str) {
  JavaLangStringBuffer *res = [[JavaLangStringBuffer alloc] init];
  if (((jint) [((NSString *) nil_chk(str)) length]) != 0) {
    jchar c1 = [str charAtWithInt:0];
    (void) [res appendWithChar:c1];
    for (jint k = 1; k < ((jint) [str length]); k++) {
      jchar c2 = [str charAtWithInt:k];
      if (!(c1 == ' ' && c2 == ' ')) {
        (void) [res appendWithChar:c2];
      }
      c1 = c2;
    }
  }
  return [res description];
}

void OrgBouncycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgBouncycastleAsn1X509X509Name *self, JavaLangStringBuffer *buf, JavaUtilHashtable *oidSymbols, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *value) {
  NSString *sym = (NSString *) check_class_cast([((JavaUtilHashtable *) nil_chk(oidSymbols)) getWithId:oid], [NSString class]);
  if (sym != nil) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:sym];
  }
  else {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId]];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithChar:'='];
  jint start = [buf sequenceLength];
  (void) [buf appendWithNSString:value];
  jint end = [buf sequenceLength];
  if (((jint) [((NSString *) nil_chk(value)) length]) >= 2 && [value charAtWithInt:0] == '\\' && [value charAtWithInt:1] == '#') {
    start += 2;
  }
  while (start < end && [buf charAtWithInt:start] == ' ') {
    (void) [buf insertWithInt:start withNSString:@"\\"];
    start += 2;
    ++end;
  }
  while (--end > start && [buf charAtWithInt:end] == ' ') {
    (void) [buf insertWithInt:end withChar:'\\'];
  }
  while (start <= end) {
    switch ([buf charAtWithInt:start]) {
      case ',':
      case '"':
      case '\\':
      case '+':
      case '=':
      case '<':
      case '>':
      case ';':
      (void) [buf insertWithInt:start withNSString:@"\\"];
      start += 2;
      ++end;
      break;
      default:
      ++start;
      break;
    }
  }
}

NSString *OrgBouncycastleAsn1X509X509Name_bytesToStringWithByteArray_(OrgBouncycastleAsn1X509X509Name *self, IOSByteArray *data) {
  IOSCharArray *cs = [IOSCharArray newArrayWithLength:((IOSByteArray *) nil_chk(data))->size_];
  for (jint i = 0; i != cs->size_; i++) {
    *IOSCharArray_GetRef(cs, i) = (jchar) (IOSByteArray_Get(data, i) & (jint) 0xff);
  }
  return [NSString stringWithCharacters:cs];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509X509Name)
