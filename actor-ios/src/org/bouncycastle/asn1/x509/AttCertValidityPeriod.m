//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/x509/AttCertValidityPeriod.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1GeneralizedTime.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/x509/AttCertValidityPeriod.h"

@interface OrgBouncycastleAsn1X509AttCertValidityPeriod ()
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;
@end

@implementation OrgBouncycastleAsn1X509AttCertValidityPeriod

+ (OrgBouncycastleAsn1X509AttCertValidityPeriod *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1X509AttCertValidityPeriod_getInstanceWithId_(obj);
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 2) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Bad sequence size: ", [seq size])];
    }
    notBeforeTime_ = OrgBouncycastleAsn1ASN1GeneralizedTime_getInstanceWithId_([seq getObjectAtWithInt:0]);
    notAfterTime_ = OrgBouncycastleAsn1ASN1GeneralizedTime_getInstanceWithId_([seq getObjectAtWithInt:1]);
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1GeneralizedTime:(OrgBouncycastleAsn1ASN1GeneralizedTime *)notBeforeTime
                    withOrgBouncycastleAsn1ASN1GeneralizedTime:(OrgBouncycastleAsn1ASN1GeneralizedTime *)notAfterTime {
  if (self = [super init]) {
    self->notBeforeTime_ = notBeforeTime;
    self->notAfterTime_ = notAfterTime;
  }
  return self;
}

- (OrgBouncycastleAsn1ASN1GeneralizedTime *)getNotBeforeTime {
  return notBeforeTime_;
}

- (OrgBouncycastleAsn1ASN1GeneralizedTime *)getNotAfterTime {
  return notAfterTime_;
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgBouncycastleAsn1ASN1EncodableVector *v = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:notBeforeTime_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:notAfterTime_];
  return [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:v];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1X509AttCertValidityPeriod *)other {
  [super copyAllFieldsTo:other];
  other->notBeforeTime_ = notBeforeTime_;
  other->notAfterTime_ = notAfterTime_;
}

@end

OrgBouncycastleAsn1X509AttCertValidityPeriod *OrgBouncycastleAsn1X509AttCertValidityPeriod_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1X509AttCertValidityPeriod_init();
  if ([obj isKindOfClass:[OrgBouncycastleAsn1X509AttCertValidityPeriod class]]) {
    return (OrgBouncycastleAsn1X509AttCertValidityPeriod *) check_class_cast(obj, [OrgBouncycastleAsn1X509AttCertValidityPeriod class]);
  }
  else if (obj != nil) {
    return [[OrgBouncycastleAsn1X509AttCertValidityPeriod alloc] initWithOrgBouncycastleAsn1ASN1Sequence:OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj)];
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509AttCertValidityPeriod)
