//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/x500/style/X500NameTokenizer.java
//

#include "J2ObjC_source.h"
#include "java/lang/StringBuffer.h"
#include "org/bouncycastle/asn1/x500/style/X500NameTokenizer.h"

@interface OrgBouncycastleAsn1X500StyleX500NameTokenizer () {
 @public
  NSString *value_;
  jint index_;
  jchar separator_;
  JavaLangStringBuffer *buf_;
}
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X500StyleX500NameTokenizer, value_, NSString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X500StyleX500NameTokenizer, buf_, JavaLangStringBuffer *)

@implementation OrgBouncycastleAsn1X500StyleX500NameTokenizer

- (instancetype)initWithNSString:(NSString *)oid {
  return [self initOrgBouncycastleAsn1X500StyleX500NameTokenizerWithNSString:oid withChar:','];
}

- (instancetype)initOrgBouncycastleAsn1X500StyleX500NameTokenizerWithNSString:(NSString *)oid
                                                                     withChar:(jchar)separator {
  if (self = [super init]) {
    buf_ = [[JavaLangStringBuffer alloc] init];
    self->value_ = oid;
    self->index_ = -1;
    self->separator_ = separator;
  }
  return self;
}

- (instancetype)initWithNSString:(NSString *)oid
                        withChar:(jchar)separator {
  return [self initOrgBouncycastleAsn1X500StyleX500NameTokenizerWithNSString:oid withChar:separator];
}

- (jboolean)hasMoreTokens {
  return (index_ != ((jint) [((NSString *) nil_chk(value_)) length]));
}

- (NSString *)nextToken {
  if (index_ == ((jint) [((NSString *) nil_chk(value_)) length])) {
    return nil;
  }
  jint end = index_ + 1;
  jboolean quoted = NO;
  jboolean escaped = NO;
  [((JavaLangStringBuffer *) nil_chk(buf_)) setLengthWithInt:0];
  while (end != ((jint) [value_ length])) {
    jchar c = [value_ charAtWithInt:end];
    if (c == '"') {
      if (!escaped) {
        quoted = !quoted;
      }
      (void) [buf_ appendWithChar:c];
      escaped = NO;
    }
    else {
      if (escaped || quoted) {
        (void) [buf_ appendWithChar:c];
        escaped = NO;
      }
      else if (c == '\\') {
        (void) [buf_ appendWithChar:c];
        escaped = YES;
      }
      else if (c == separator_) {
        break;
      }
      else {
        (void) [buf_ appendWithChar:c];
      }
    }
    end++;
  }
  index_ = end;
  return [buf_ description];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1X500StyleX500NameTokenizer *)other {
  [super copyAllFieldsTo:other];
  other->value_ = value_;
  other->index_ = index_;
  other->separator_ = separator_;
  other->buf_ = buf_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X500StyleX500NameTokenizer)
