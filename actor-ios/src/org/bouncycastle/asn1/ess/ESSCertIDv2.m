//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/ess/ESSCertIDv2.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/ess/ESSCertIDv2.h"
#include "org/bouncycastle/asn1/nist/NISTObjectIdentifiers.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/IssuerSerial.h"

@interface OrgBouncycastleAsn1EssESSCertIDv2 () {
 @public
  OrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm_;
  IOSByteArray *certHash_;
  OrgBouncycastleAsn1X509IssuerSerial *issuerSerial_;
}
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EssESSCertIDv2, hashAlgorithm_, OrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EssESSCertIDv2, certHash_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EssESSCertIDv2, issuerSerial_, OrgBouncycastleAsn1X509IssuerSerial *)

BOOL OrgBouncycastleAsn1EssESSCertIDv2_initialized = NO;

@implementation OrgBouncycastleAsn1EssESSCertIDv2

OrgBouncycastleAsn1X509AlgorithmIdentifier * OrgBouncycastleAsn1EssESSCertIDv2_DEFAULT_ALG_ID_;

+ (OrgBouncycastleAsn1EssESSCertIDv2 *)getInstanceWithId:(id)o {
  return OrgBouncycastleAsn1EssESSCertIDv2_getInstanceWithId_(o);
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] > 3) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Bad sequence size: ", [seq size])];
    }
    jint count = 0;
    if ([[seq getObjectAtWithInt:0] isKindOfClass:[OrgBouncycastleAsn1ASN1OctetString class]]) {
      self->hashAlgorithm_ = OrgBouncycastleAsn1EssESSCertIDv2_DEFAULT_ALG_ID_;
    }
    else {
      self->hashAlgorithm_ = OrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk([seq getObjectAtWithInt:count++])) toASN1Primitive]);
    }
    self->certHash_ = [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk([seq getObjectAtWithInt:count++])) toASN1Primitive]))) getOctets];
    if ([seq size] > count) {
      self->issuerSerial_ = OrgBouncycastleAsn1X509IssuerSerial_getInstanceWithId_([seq getObjectAtWithInt:count]);
    }
  }
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)certHash {
  return [self initOrgBouncycastleAsn1EssESSCertIDv2WithOrgBouncycastleAsn1X509AlgorithmIdentifier:nil withByteArray:certHash withOrgBouncycastleAsn1X509IssuerSerial:nil];
}

- (instancetype)initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                     withByteArray:(IOSByteArray *)certHash {
  return [self initOrgBouncycastleAsn1EssESSCertIDv2WithOrgBouncycastleAsn1X509AlgorithmIdentifier:algId withByteArray:certHash withOrgBouncycastleAsn1X509IssuerSerial:nil];
}

- (instancetype)initWithByteArray:(IOSByteArray *)certHash
withOrgBouncycastleAsn1X509IssuerSerial:(OrgBouncycastleAsn1X509IssuerSerial *)issuerSerial {
  return [self initOrgBouncycastleAsn1EssESSCertIDv2WithOrgBouncycastleAsn1X509AlgorithmIdentifier:nil withByteArray:certHash withOrgBouncycastleAsn1X509IssuerSerial:issuerSerial];
}

- (instancetype)initOrgBouncycastleAsn1EssESSCertIDv2WithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                                                      withByteArray:(IOSByteArray *)certHash
                                                            withOrgBouncycastleAsn1X509IssuerSerial:(OrgBouncycastleAsn1X509IssuerSerial *)issuerSerial {
  if (self = [super init]) {
    if (algId == nil) {
      self->hashAlgorithm_ = OrgBouncycastleAsn1EssESSCertIDv2_DEFAULT_ALG_ID_;
    }
    else {
      self->hashAlgorithm_ = algId;
    }
    self->certHash_ = certHash;
    self->issuerSerial_ = issuerSerial;
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                     withByteArray:(IOSByteArray *)certHash
                           withOrgBouncycastleAsn1X509IssuerSerial:(OrgBouncycastleAsn1X509IssuerSerial *)issuerSerial {
  return [self initOrgBouncycastleAsn1EssESSCertIDv2WithOrgBouncycastleAsn1X509AlgorithmIdentifier:algId withByteArray:certHash withOrgBouncycastleAsn1X509IssuerSerial:issuerSerial];
}

- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getHashAlgorithm {
  return self->hashAlgorithm_;
}

- (IOSByteArray *)getCertHash {
  return certHash_;
}

- (OrgBouncycastleAsn1X509IssuerSerial *)getIssuerSerial {
  return issuerSerial_;
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgBouncycastleAsn1ASN1EncodableVector *v = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  if (![((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(hashAlgorithm_)) isEqual:OrgBouncycastleAsn1EssESSCertIDv2_DEFAULT_ALG_ID_]) {
    [v addWithOrgBouncycastleAsn1ASN1Encodable:hashAlgorithm_];
  }
  [v addWithOrgBouncycastleAsn1ASN1Encodable:[((OrgBouncycastleAsn1DEROctetString *) [[OrgBouncycastleAsn1DEROctetString alloc] initWithByteArray:certHash_]) toASN1Primitive]];
  if (issuerSerial_ != nil) {
    [v addWithOrgBouncycastleAsn1ASN1Encodable:issuerSerial_];
  }
  return [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:v];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1EssESSCertIDv2 *)other {
  [super copyAllFieldsTo:other];
  other->hashAlgorithm_ = hashAlgorithm_;
  other->certHash_ = certHash_;
  other->issuerSerial_ = issuerSerial_;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1EssESSCertIDv2 class]) {
    OrgBouncycastleAsn1EssESSCertIDv2_DEFAULT_ALG_ID_ = [[OrgBouncycastleAsn1X509AlgorithmIdentifier alloc] initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:OrgBouncycastleAsn1NistNISTObjectIdentifiers_get_id_sha256_()];
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1EssESSCertIDv2)
  }
}

@end

OrgBouncycastleAsn1EssESSCertIDv2 *OrgBouncycastleAsn1EssESSCertIDv2_getInstanceWithId_(id o) {
  OrgBouncycastleAsn1EssESSCertIDv2_init();
  if ([o isKindOfClass:[OrgBouncycastleAsn1EssESSCertIDv2 class]]) {
    return (OrgBouncycastleAsn1EssESSCertIDv2 *) check_class_cast(o, [OrgBouncycastleAsn1EssESSCertIDv2 class]);
  }
  else if (o != nil) {
    return [[OrgBouncycastleAsn1EssESSCertIDv2 alloc] initWithOrgBouncycastleAsn1ASN1Sequence:OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o)];
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1EssESSCertIDv2)
