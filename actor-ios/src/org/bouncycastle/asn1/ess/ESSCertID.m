//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/ess/ESSCertID.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/ess/ESSCertID.h"
#include "org/bouncycastle/asn1/x509/IssuerSerial.h"

@interface OrgBouncycastleAsn1EssESSCertID () {
 @public
  OrgBouncycastleAsn1ASN1OctetString *certHash_;
  OrgBouncycastleAsn1X509IssuerSerial *issuerSerial_;
}
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EssESSCertID, certHash_, OrgBouncycastleAsn1ASN1OctetString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EssESSCertID, issuerSerial_, OrgBouncycastleAsn1X509IssuerSerial *)

@implementation OrgBouncycastleAsn1EssESSCertID

+ (OrgBouncycastleAsn1EssESSCertID *)getInstanceWithId:(id)o {
  return OrgBouncycastleAsn1EssESSCertID_getInstanceWithId_(o);
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] < 1 || [seq size] > 2) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Bad sequence size: ", [seq size])];
    }
    certHash_ = OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:0]);
    if ([seq size] > 1) {
      issuerSerial_ = OrgBouncycastleAsn1X509IssuerSerial_getInstanceWithId_([seq getObjectAtWithInt:1]);
    }
  }
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)hash_ {
  if (self = [super init]) {
    certHash_ = [[OrgBouncycastleAsn1DEROctetString alloc] initWithByteArray:hash_];
  }
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)hash_
withOrgBouncycastleAsn1X509IssuerSerial:(OrgBouncycastleAsn1X509IssuerSerial *)issuerSerial {
  if (self = [super init]) {
    self->certHash_ = [[OrgBouncycastleAsn1DEROctetString alloc] initWithByteArray:hash_];
    self->issuerSerial_ = issuerSerial;
  }
  return self;
}

- (IOSByteArray *)getCertHash {
  return [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(certHash_)) getOctets];
}

- (OrgBouncycastleAsn1X509IssuerSerial *)getIssuerSerial {
  return issuerSerial_;
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgBouncycastleAsn1ASN1EncodableVector *v = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:certHash_];
  if (issuerSerial_ != nil) {
    [v addWithOrgBouncycastleAsn1ASN1Encodable:issuerSerial_];
  }
  return [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:v];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1EssESSCertID *)other {
  [super copyAllFieldsTo:other];
  other->certHash_ = certHash_;
  other->issuerSerial_ = issuerSerial_;
}

@end

OrgBouncycastleAsn1EssESSCertID *OrgBouncycastleAsn1EssESSCertID_getInstanceWithId_(id o) {
  OrgBouncycastleAsn1EssESSCertID_init();
  if ([o isKindOfClass:[OrgBouncycastleAsn1EssESSCertID class]]) {
    return (OrgBouncycastleAsn1EssESSCertID *) check_class_cast(o, [OrgBouncycastleAsn1EssESSCertID class]);
  }
  else if (o != nil) {
    return [[OrgBouncycastleAsn1EssESSCertID alloc] initWithOrgBouncycastleAsn1ASN1Sequence:OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o)];
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1EssESSCertID)
