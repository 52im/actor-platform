//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/ess/OtherCertID.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/ess/OtherCertID.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/DigestInfo.h"
#include "org/bouncycastle/asn1/x509/IssuerSerial.h"

@interface OrgBouncycastleAsn1EssOtherCertID () {
 @public
  id<OrgBouncycastleAsn1ASN1Encodable> otherCertHash_;
  OrgBouncycastleAsn1X509IssuerSerial *issuerSerial_;
}
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EssOtherCertID, otherCertHash_, id<OrgBouncycastleAsn1ASN1Encodable>)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EssOtherCertID, issuerSerial_, OrgBouncycastleAsn1X509IssuerSerial *)

@implementation OrgBouncycastleAsn1EssOtherCertID

+ (OrgBouncycastleAsn1EssOtherCertID *)getInstanceWithId:(id)o {
  return OrgBouncycastleAsn1EssOtherCertID_getInstanceWithId_(o);
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] < 1 || [seq size] > 2) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Bad sequence size: ", [seq size])];
    }
    if ([[((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk([seq getObjectAtWithInt:0])) toASN1Primitive] isKindOfClass:[OrgBouncycastleAsn1ASN1OctetString class]]) {
      otherCertHash_ = OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:0]);
    }
    else {
      otherCertHash_ = OrgBouncycastleAsn1X509DigestInfo_getInstanceWithId_([seq getObjectAtWithInt:0]);
    }
    if ([seq size] > 1) {
      issuerSerial_ = OrgBouncycastleAsn1X509IssuerSerial_getInstanceWithId_([seq getObjectAtWithInt:1]);
    }
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                     withByteArray:(IOSByteArray *)digest {
  if (self = [super init]) {
    self->otherCertHash_ = [[OrgBouncycastleAsn1X509DigestInfo alloc] initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algId withByteArray:digest];
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                     withByteArray:(IOSByteArray *)digest
                           withOrgBouncycastleAsn1X509IssuerSerial:(OrgBouncycastleAsn1X509IssuerSerial *)issuerSerial {
  if (self = [super init]) {
    self->otherCertHash_ = [[OrgBouncycastleAsn1X509DigestInfo alloc] initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algId withByteArray:digest];
    self->issuerSerial_ = issuerSerial;
  }
  return self;
}

- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getAlgorithmHash {
  if ([[((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(otherCertHash_)) toASN1Primitive] isKindOfClass:[OrgBouncycastleAsn1ASN1OctetString class]]) {
    return [[OrgBouncycastleAsn1X509AlgorithmIdentifier alloc] initWithNSString:@"1.3.14.3.2.26"];
  }
  else {
    return [((OrgBouncycastleAsn1X509DigestInfo *) nil_chk(OrgBouncycastleAsn1X509DigestInfo_getInstanceWithId_(otherCertHash_))) getAlgorithmId];
  }
}

- (IOSByteArray *)getCertHash {
  if ([[((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(otherCertHash_)) toASN1Primitive] isKindOfClass:[OrgBouncycastleAsn1ASN1OctetString class]]) {
    return [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(((OrgBouncycastleAsn1ASN1OctetString *) check_class_cast([otherCertHash_ toASN1Primitive], [OrgBouncycastleAsn1ASN1OctetString class])))) getOctets];
  }
  else {
    return [((OrgBouncycastleAsn1X509DigestInfo *) nil_chk(OrgBouncycastleAsn1X509DigestInfo_getInstanceWithId_(otherCertHash_))) getDigest];
  }
}

- (OrgBouncycastleAsn1X509IssuerSerial *)getIssuerSerial {
  return issuerSerial_;
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgBouncycastleAsn1ASN1EncodableVector *v = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:otherCertHash_];
  if (issuerSerial_ != nil) {
    [v addWithOrgBouncycastleAsn1ASN1Encodable:issuerSerial_];
  }
  return [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:v];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1EssOtherCertID *)other {
  [super copyAllFieldsTo:other];
  other->otherCertHash_ = otherCertHash_;
  other->issuerSerial_ = issuerSerial_;
}

@end

OrgBouncycastleAsn1EssOtherCertID *OrgBouncycastleAsn1EssOtherCertID_getInstanceWithId_(id o) {
  OrgBouncycastleAsn1EssOtherCertID_init();
  if ([o isKindOfClass:[OrgBouncycastleAsn1EssOtherCertID class]]) {
    return (OrgBouncycastleAsn1EssOtherCertID *) check_class_cast(o, [OrgBouncycastleAsn1EssOtherCertID class]);
  }
  else if (o != nil) {
    return [[OrgBouncycastleAsn1EssOtherCertID alloc] initWithOrgBouncycastleAsn1ASN1Sequence:OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o)];
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1EssOtherCertID)
