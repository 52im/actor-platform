//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/ess/OtherSigningCertificate.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/ess/OtherCertID.h"
#include "org/bouncycastle/asn1/ess/OtherSigningCertificate.h"
#include "org/bouncycastle/asn1/x509/PolicyInformation.h"

@interface OrgBouncycastleAsn1EssOtherSigningCertificate ()
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;
@end

@implementation OrgBouncycastleAsn1EssOtherSigningCertificate

+ (OrgBouncycastleAsn1EssOtherSigningCertificate *)getInstanceWithId:(id)o {
  return OrgBouncycastleAsn1EssOtherSigningCertificate_getInstanceWithId_(o);
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] < 1 || [seq size] > 2) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Bad sequence size: ", [seq size])];
    }
    self->certs_ = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([seq getObjectAtWithInt:0]);
    if ([seq size] > 1) {
      self->policies_ = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([seq getObjectAtWithInt:1]);
    }
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1EssOtherCertID:(OrgBouncycastleAsn1EssOtherCertID *)otherCertID {
  if (self = [super init]) {
    certs_ = [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1Encodable:otherCertID];
  }
  return self;
}

- (IOSObjectArray *)getCerts {
  IOSObjectArray *cs = [IOSObjectArray newArrayWithLength:[((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(certs_)) size] type:OrgBouncycastleAsn1EssOtherCertID_class_()];
  for (jint i = 0; i != [certs_ size]; i++) {
    IOSObjectArray_Set(cs, i, OrgBouncycastleAsn1EssOtherCertID_getInstanceWithId_([certs_ getObjectAtWithInt:i]));
  }
  return cs;
}

- (IOSObjectArray *)getPolicies {
  if (policies_ == nil) {
    return nil;
  }
  IOSObjectArray *ps = [IOSObjectArray newArrayWithLength:[((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(policies_)) size] type:OrgBouncycastleAsn1X509PolicyInformation_class_()];
  for (jint i = 0; i != [policies_ size]; i++) {
    IOSObjectArray_Set(ps, i, OrgBouncycastleAsn1X509PolicyInformation_getInstanceWithId_([policies_ getObjectAtWithInt:i]));
  }
  return ps;
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgBouncycastleAsn1ASN1EncodableVector *v = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:certs_];
  if (policies_ != nil) {
    [v addWithOrgBouncycastleAsn1ASN1Encodable:policies_];
  }
  return [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:v];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1EssOtherSigningCertificate *)other {
  [super copyAllFieldsTo:other];
  other->certs_ = certs_;
  other->policies_ = policies_;
}

@end

OrgBouncycastleAsn1EssOtherSigningCertificate *OrgBouncycastleAsn1EssOtherSigningCertificate_getInstanceWithId_(id o) {
  OrgBouncycastleAsn1EssOtherSigningCertificate_init();
  if ([o isKindOfClass:[OrgBouncycastleAsn1EssOtherSigningCertificate class]]) {
    return (OrgBouncycastleAsn1EssOtherSigningCertificate *) check_class_cast(o, [OrgBouncycastleAsn1EssOtherSigningCertificate class]);
  }
  else if (o != nil) {
    return [[OrgBouncycastleAsn1EssOtherSigningCertificate alloc] initWithOrgBouncycastleAsn1ASN1Sequence:OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o)];
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1EssOtherSigningCertificate)
