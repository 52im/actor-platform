//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/DefiniteLengthInputStream.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/EOFException.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "org/bouncycastle/asn1/DefiniteLengthInputStream.h"
#include "org/bouncycastle/asn1/LimitedInputStream.h"
#include "org/bouncycastle/util/io/Streams.h"

@interface OrgBouncycastleAsn1DefiniteLengthInputStream () {
 @public
  jint _originalLength_;
  jint _remaining_;
}
@end

BOOL OrgBouncycastleAsn1DefiniteLengthInputStream_initialized = NO;

@implementation OrgBouncycastleAsn1DefiniteLengthInputStream

IOSByteArray * OrgBouncycastleAsn1DefiniteLengthInputStream_EMPTY_BYTES_;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                  withInt:(jint)length {
  if (self = [super initWithJavaIoInputStream:inArg withInt:length]) {
    if (length < 0) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"negative lengths not allowed"];
    }
    self->_originalLength_ = length;
    self->_remaining_ = length;
    if (length == 0) {
      [self setParentEofDetectWithBoolean:YES];
    }
  }
  return self;
}

- (jint)getRemaining {
  return _remaining_;
}

- (jint)read {
  if (_remaining_ == 0) {
    return -1;
  }
  jint b = [((JavaIoInputStream *) nil_chk(_in_)) read];
  if (b < 0) {
    @throw [[JavaIoEOFException alloc] initWithNSString:JreStrcat("$I$I", @"DEF length ", _originalLength_, @" object truncated by ", _remaining_)];
  }
  if (--_remaining_ == 0) {
    [self setParentEofDetectWithBoolean:YES];
  }
  return b;
}

- (jint)readWithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off
                  withInt:(jint)len {
  if (_remaining_ == 0) {
    return -1;
  }
  jint toRead = JavaLangMath_minWithInt_withInt_(len, _remaining_);
  jint numRead = [((JavaIoInputStream *) nil_chk(_in_)) readWithByteArray:buf withInt:off withInt:toRead];
  if (numRead < 0) {
    @throw [[JavaIoEOFException alloc] initWithNSString:JreStrcat("$I$I", @"DEF length ", _originalLength_, @" object truncated by ", _remaining_)];
  }
  if ((_remaining_ -= numRead) == 0) {
    [self setParentEofDetectWithBoolean:YES];
  }
  return numRead;
}

- (IOSByteArray *)toByteArray {
  if (_remaining_ == 0) {
    return OrgBouncycastleAsn1DefiniteLengthInputStream_EMPTY_BYTES_;
  }
  IOSByteArray *bytes = [IOSByteArray newArrayWithLength:_remaining_];
  if ((_remaining_ -= OrgBouncycastleUtilIoStreams_readFullyWithJavaIoInputStream_withByteArray_(_in_, bytes)) != 0) {
    @throw [[JavaIoEOFException alloc] initWithNSString:JreStrcat("$I$I", @"DEF length ", _originalLength_, @" object truncated by ", _remaining_)];
  }
  [self setParentEofDetectWithBoolean:YES];
  return bytes;
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1DefiniteLengthInputStream *)other {
  [super copyAllFieldsTo:other];
  other->_originalLength_ = _originalLength_;
  other->_remaining_ = _remaining_;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1DefiniteLengthInputStream class]) {
    OrgBouncycastleAsn1DefiniteLengthInputStream_EMPTY_BYTES_ = [IOSByteArray newArrayWithLength:0];
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1DefiniteLengthInputStream)
  }
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1DefiniteLengthInputStream)
