//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/ASN1Object.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/DEROutputStream.h"
#include "org/bouncycastle/asn1/DLOutputStream.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgBouncycastleAsn1ASN1Object

- (IOSByteArray *)getEncoded {
  JavaIoByteArrayOutputStream *bOut = [[JavaIoByteArrayOutputStream alloc] init];
  OrgBouncycastleAsn1ASN1OutputStream *aOut = [[OrgBouncycastleAsn1ASN1OutputStream alloc] initWithJavaIoOutputStream:bOut];
  [aOut writeObjectWithOrgBouncycastleAsn1ASN1Encodable:self];
  return [bOut toByteArray];
}

- (IOSByteArray *)getEncodedWithNSString:(NSString *)encoding {
  if ([((NSString *) nil_chk(encoding)) isEqual:OrgBouncycastleAsn1ASN1Encoding_get_DER_()]) {
    JavaIoByteArrayOutputStream *bOut = [[JavaIoByteArrayOutputStream alloc] init];
    OrgBouncycastleAsn1DEROutputStream *dOut = [[OrgBouncycastleAsn1DEROutputStream alloc] initWithJavaIoOutputStream:bOut];
    [dOut writeObjectWithOrgBouncycastleAsn1ASN1Encodable:self];
    return [bOut toByteArray];
  }
  else if ([encoding isEqual:OrgBouncycastleAsn1ASN1Encoding_get_DL_()]) {
    JavaIoByteArrayOutputStream *bOut = [[JavaIoByteArrayOutputStream alloc] init];
    OrgBouncycastleAsn1DLOutputStream *dOut = [[OrgBouncycastleAsn1DLOutputStream alloc] initWithJavaIoOutputStream:bOut];
    [dOut writeObjectWithOrgBouncycastleAsn1ASN1Encodable:self];
    return [bOut toByteArray];
  }
  return [self getEncoded];
}

- (NSUInteger)hash {
  return ((jint) [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([self toASN1Primitive])) hash]);
}

- (jboolean)isEqual:(id)o {
  if (self == o) {
    return YES;
  }
  if (!([OrgBouncycastleAsn1ASN1Encodable_class_() isInstance:o])) {
    return NO;
  }
  id<OrgBouncycastleAsn1ASN1Encodable> other = (id<OrgBouncycastleAsn1ASN1Encodable>) check_protocol_cast(o, @protocol(OrgBouncycastleAsn1ASN1Encodable));
  return [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([self toASN1Primitive])) isEqual:[((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(other)) toASN1Primitive]];
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Object {
  return [self toASN1Primitive];
}

+ (jboolean)hasEncodedTagValueWithId:(id)obj
                             withInt:(jint)tagValue {
  return OrgBouncycastleAsn1ASN1Object_hasEncodedTagValueWithId_withInt_(obj, tagValue);
}

- (instancetype)init {
  return [super init];
}

@end

jboolean OrgBouncycastleAsn1ASN1Object_hasEncodedTagValueWithId_withInt_(id obj, jint tagValue) {
  OrgBouncycastleAsn1ASN1Object_init();
  return ([obj isKindOfClass:[IOSByteArray class]]) && IOSByteArray_Get(nil_chk(((IOSByteArray *) check_class_cast(obj, [IOSByteArray class]))), 0) == tagValue;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1Object)
