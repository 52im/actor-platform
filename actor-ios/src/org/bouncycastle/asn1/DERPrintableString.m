//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/DERPrintableString.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DERPrintableString.h"
#include "org/bouncycastle/asn1/StreamUtil.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Strings.h"

@interface OrgBouncycastleAsn1DERPrintableString () {
 @public
  IOSByteArray *string_;
}
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1DERPrintableString, string_, IOSByteArray *)

@implementation OrgBouncycastleAsn1DERPrintableString

+ (OrgBouncycastleAsn1DERPrintableString *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1DERPrintableString_getInstanceWithId_(obj);
}

+ (OrgBouncycastleAsn1DERPrintableString *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                  withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1DERPrintableString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

- (instancetype)initWithByteArray:(IOSByteArray *)string {
  if (self = [super init]) {
    self->string_ = string;
  }
  return self;
}

- (instancetype)initWithNSString:(NSString *)string {
  return [self initOrgBouncycastleAsn1DERPrintableStringWithNSString:string withBoolean:NO];
}

- (instancetype)initOrgBouncycastleAsn1DERPrintableStringWithNSString:(NSString *)string
                                                          withBoolean:(jboolean)validate {
  if (self = [super init]) {
    if (validate && !OrgBouncycastleAsn1DERPrintableString_isPrintableStringWithNSString_(string)) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"string contains illegal characters"];
    }
    self->string_ = OrgBouncycastleUtilStrings_toByteArrayWithNSString_(string);
  }
  return self;
}

- (instancetype)initWithNSString:(NSString *)string
                     withBoolean:(jboolean)validate {
  return [self initOrgBouncycastleAsn1DERPrintableStringWithNSString:string withBoolean:validate];
}

- (NSString *)getString {
  return OrgBouncycastleUtilStrings_fromByteArrayWithByteArray_(string_);
}

- (IOSByteArray *)getOctets {
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(string_);
}

- (jboolean)isConstructed {
  return NO;
}

- (jint)encodedLength {
  return 1 + OrgBouncycastleAsn1StreamUtil_calculateBodyLengthWithInt_(((IOSByteArray *) nil_chk(string_))->size_) + string_->size_;
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg {
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodedWithInt:OrgBouncycastleAsn1BERTags_PRINTABLE_STRING withByteArray:string_];
}

- (NSUInteger)hash {
  return OrgBouncycastleUtilArrays_hashCodeWithByteArray_(string_);
}

- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)o {
  if (!([o isKindOfClass:[OrgBouncycastleAsn1DERPrintableString class]])) {
    return NO;
  }
  OrgBouncycastleAsn1DERPrintableString *s = (OrgBouncycastleAsn1DERPrintableString *) check_class_cast(o, [OrgBouncycastleAsn1DERPrintableString class]);
  return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(string_, ((OrgBouncycastleAsn1DERPrintableString *) nil_chk(s))->string_);
}

- (NSString *)description {
  return [self getString];
}

+ (jboolean)isPrintableStringWithNSString:(NSString *)str {
  return OrgBouncycastleAsn1DERPrintableString_isPrintableStringWithNSString_(str);
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1DERPrintableString *)other {
  [super copyAllFieldsTo:other];
  other->string_ = string_;
}

@end

OrgBouncycastleAsn1DERPrintableString *OrgBouncycastleAsn1DERPrintableString_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1DERPrintableString_init();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1DERPrintableString class]]) {
    return (OrgBouncycastleAsn1DERPrintableString *) check_class_cast(obj, [OrgBouncycastleAsn1DERPrintableString class]);
  }
  if ([obj isKindOfClass:[IOSByteArray class]]) {
    @try {
      return (OrgBouncycastleAsn1DERPrintableString *) check_class_cast(OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_((IOSByteArray *) check_class_cast(obj, [IOSByteArray class])), [OrgBouncycastleAsn1DERPrintableString class]);
    }
    @catch (JavaLangException *e) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$$", @"encoding error in getInstance: ", [((JavaLangException *) nil_chk(e)) description])];
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$$", @"illegal object in getInstance: ", [[nil_chk(obj) getClass] getName])];
}

OrgBouncycastleAsn1DERPrintableString *OrgBouncycastleAsn1DERPrintableString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgBouncycastleAsn1DERPrintableString_init();
  OrgBouncycastleAsn1ASN1Primitive *o = [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(obj)) getObject];
  if (explicit_ || [o isKindOfClass:[OrgBouncycastleAsn1DERPrintableString class]]) {
    return OrgBouncycastleAsn1DERPrintableString_getInstanceWithId_(o);
  }
  else {
    return [[OrgBouncycastleAsn1DERPrintableString alloc] initWithByteArray:[((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(o))) getOctets]];
  }
}

jboolean OrgBouncycastleAsn1DERPrintableString_isPrintableStringWithNSString_(NSString *str) {
  OrgBouncycastleAsn1DERPrintableString_init();
  for (jint i = ((jint) [((NSString *) nil_chk(str)) length]) - 1; i >= 0; i--) {
    jchar ch = [str charAtWithInt:i];
    if (ch > (jint) 0x007f) {
      return NO;
    }
    if ('a' <= ch && ch <= 'z') {
      continue;
    }
    if ('A' <= ch && ch <= 'Z') {
      continue;
    }
    if ('0' <= ch && ch <= '9') {
      continue;
    }
    switch (ch) {
      case ' ':
      case '\'':
      case '(':
      case ')':
      case '+':
      case '-':
      case '.':
      case ':':
      case '=':
      case '?':
      case '/':
      case ',':
      continue;
    }
    return NO;
  }
  return YES;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1DERPrintableString)
