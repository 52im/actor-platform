//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/DERApplicationSpecific.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1InputStream.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1ParsingException.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DERApplicationSpecific.h"
#include "org/bouncycastle/asn1/StreamUtil.h"
#include "org/bouncycastle/util/Arrays.h"

__attribute__((unused)) static jint OrgBouncycastleAsn1DERApplicationSpecific_getLengthOfHeaderWithByteArray_(OrgBouncycastleAsn1DERApplicationSpecific *self, IOSByteArray *data);
__attribute__((unused)) static IOSByteArray *OrgBouncycastleAsn1DERApplicationSpecific_replaceTagNumberWithInt_withByteArray_(OrgBouncycastleAsn1DERApplicationSpecific *self, jint newTag, IOSByteArray *input);

@interface OrgBouncycastleAsn1DERApplicationSpecific () {
 @public
  jboolean isConstructed__;
  jint tag_;
  IOSByteArray *octets_;
}

- (jint)getLengthOfHeaderWithByteArray:(IOSByteArray *)data;

- (IOSByteArray *)replaceTagNumberWithInt:(jint)newTag
                            withByteArray:(IOSByteArray *)input;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1DERApplicationSpecific, octets_, IOSByteArray *)

@implementation OrgBouncycastleAsn1DERApplicationSpecific

- (instancetype)initOrgBouncycastleAsn1DERApplicationSpecificWithBoolean:(jboolean)isConstructed
                                                                 withInt:(jint)tag
                                                           withByteArray:(IOSByteArray *)octets {
  if (self = [super init]) {
    self->isConstructed__ = isConstructed;
    self->tag_ = tag;
    self->octets_ = octets;
  }
  return self;
}

- (instancetype)initWithBoolean:(jboolean)isConstructed
                        withInt:(jint)tag
                  withByteArray:(IOSByteArray *)octets {
  return [self initOrgBouncycastleAsn1DERApplicationSpecificWithBoolean:isConstructed withInt:tag withByteArray:octets];
}

- (instancetype)initWithInt:(jint)tag
              withByteArray:(IOSByteArray *)octets {
  return [self initOrgBouncycastleAsn1DERApplicationSpecificWithBoolean:NO withInt:tag withByteArray:octets];
}

- (instancetype)initWithInt:(jint)tag
withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)object {
  return [self initOrgBouncycastleAsn1DERApplicationSpecificWithBoolean:YES withInt:tag withOrgBouncycastleAsn1ASN1Encodable:object];
}

- (instancetype)initOrgBouncycastleAsn1DERApplicationSpecificWithBoolean:(jboolean)explicit_
                                                                 withInt:(jint)tag
                                    withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)object {
  if (self = [super init]) {
    OrgBouncycastleAsn1ASN1Primitive *primitive = [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(object)) toASN1Primitive];
    IOSByteArray *data = [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk(primitive)) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_get_DER_()];
    self->isConstructed__ = (explicit_ || ([primitive isKindOfClass:[OrgBouncycastleAsn1ASN1Set class]] || [primitive isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]]));
    self->tag_ = tag;
    if (explicit_) {
      self->octets_ = data;
    }
    else {
      jint lenBytes = OrgBouncycastleAsn1DERApplicationSpecific_getLengthOfHeaderWithByteArray_(self, data);
      IOSByteArray *tmp = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(data))->size_ - lenBytes];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, lenBytes, tmp, 0, tmp->size_);
      self->octets_ = tmp;
    }
  }
  return self;
}

- (instancetype)initWithBoolean:(jboolean)explicit_
                        withInt:(jint)tag
withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)object {
  return [self initOrgBouncycastleAsn1DERApplicationSpecificWithBoolean:explicit_ withInt:tag withOrgBouncycastleAsn1ASN1Encodable:object];
}

- (instancetype)initWithInt:(jint)tagNo
withOrgBouncycastleAsn1ASN1EncodableVector:(OrgBouncycastleAsn1ASN1EncodableVector *)vec {
  if (self = [super init]) {
    self->tag_ = tagNo;
    self->isConstructed__ = YES;
    JavaIoByteArrayOutputStream *bOut = [[JavaIoByteArrayOutputStream alloc] init];
    for (jint i = 0; i != [((OrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(vec)) size]; i++) {
      @try {
        [bOut writeWithByteArray:[((OrgBouncycastleAsn1ASN1Object *) nil_chk(((OrgBouncycastleAsn1ASN1Object *) check_class_cast([vec getWithInt:i], [OrgBouncycastleAsn1ASN1Object class])))) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_get_DER_()]];
      }
      @catch (JavaIoIOException *e) {
        @throw [[OrgBouncycastleAsn1ASN1ParsingException alloc] initWithNSString:JreStrcat("$@", @"malformed object: ", e) withJavaLangThrowable:e];
      }
    }
    self->octets_ = [bOut toByteArray];
  }
  return self;
}

+ (OrgBouncycastleAsn1DERApplicationSpecific *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1DERApplicationSpecific_getInstanceWithId_(obj);
}

- (jint)getLengthOfHeaderWithByteArray:(IOSByteArray *)data {
  return OrgBouncycastleAsn1DERApplicationSpecific_getLengthOfHeaderWithByteArray_(self, data);
}

- (jboolean)isConstructed {
  return isConstructed__;
}

- (IOSByteArray *)getContents {
  return octets_;
}

- (jint)getApplicationTag {
  return tag_;
}

- (OrgBouncycastleAsn1ASN1Primitive *)getObject {
  return [((OrgBouncycastleAsn1ASN1InputStream *) [[OrgBouncycastleAsn1ASN1InputStream alloc] initWithByteArray:[self getContents]]) readObject];
}

- (OrgBouncycastleAsn1ASN1Primitive *)getObjectWithInt:(jint)derTagNo {
  if (derTagNo >= (jint) 0x1f) {
    @throw [[JavaIoIOException alloc] initWithNSString:@"unsupported tag number"];
  }
  IOSByteArray *orig = [self getEncoded];
  IOSByteArray *tmp = OrgBouncycastleAsn1DERApplicationSpecific_replaceTagNumberWithInt_withByteArray_(self, derTagNo, orig);
  if ((IOSByteArray_Get(nil_chk(orig), 0) & OrgBouncycastleAsn1BERTags_CONSTRUCTED) != 0) {
    *IOSByteArray_GetRef(nil_chk(tmp), 0) |= OrgBouncycastleAsn1BERTags_CONSTRUCTED;
  }
  return [((OrgBouncycastleAsn1ASN1InputStream *) [[OrgBouncycastleAsn1ASN1InputStream alloc] initWithByteArray:tmp]) readObject];
}

- (jint)encodedLength {
  return OrgBouncycastleAsn1StreamUtil_calculateTagLengthWithInt_(tag_) + OrgBouncycastleAsn1StreamUtil_calculateBodyLengthWithInt_(((IOSByteArray *) nil_chk(octets_))->size_) + octets_->size_;
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg {
  jint classBits = OrgBouncycastleAsn1BERTags_APPLICATION;
  if (isConstructed__) {
    classBits |= OrgBouncycastleAsn1BERTags_CONSTRUCTED;
  }
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodedWithInt:classBits withInt:tag_ withByteArray:octets_];
}

- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)o {
  if (!([o isKindOfClass:[OrgBouncycastleAsn1DERApplicationSpecific class]])) {
    return NO;
  }
  OrgBouncycastleAsn1DERApplicationSpecific *other = (OrgBouncycastleAsn1DERApplicationSpecific *) check_class_cast(o, [OrgBouncycastleAsn1DERApplicationSpecific class]);
  return isConstructed__ == ((OrgBouncycastleAsn1DERApplicationSpecific *) nil_chk(other))->isConstructed__ && tag_ == other->tag_ && OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(octets_, other->octets_);
}

- (NSUInteger)hash {
  return (isConstructed__ ? 1 : 0) ^ tag_ ^ OrgBouncycastleUtilArrays_hashCodeWithByteArray_(octets_);
}

- (IOSByteArray *)replaceTagNumberWithInt:(jint)newTag
                            withByteArray:(IOSByteArray *)input {
  return OrgBouncycastleAsn1DERApplicationSpecific_replaceTagNumberWithInt_withByteArray_(self, newTag, input);
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1DERApplicationSpecific *)other {
  [super copyAllFieldsTo:other];
  other->isConstructed__ = isConstructed__;
  other->tag_ = tag_;
  other->octets_ = octets_;
}

@end

OrgBouncycastleAsn1DERApplicationSpecific *OrgBouncycastleAsn1DERApplicationSpecific_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1DERApplicationSpecific_init();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1DERApplicationSpecific class]]) {
    return (OrgBouncycastleAsn1DERApplicationSpecific *) check_class_cast(obj, [OrgBouncycastleAsn1DERApplicationSpecific class]);
  }
  else if ([obj isKindOfClass:[IOSByteArray class]]) {
    @try {
      return OrgBouncycastleAsn1DERApplicationSpecific_getInstanceWithId_(OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_((IOSByteArray *) check_class_cast(obj, [IOSByteArray class])));
    }
    @catch (JavaIoIOException *e) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$$", @"failed to construct object from byte[]: ", [((JavaIoIOException *) nil_chk(e)) getMessage])];
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$$", @"unknown object in getInstance: ", [[nil_chk(obj) getClass] getName])];
}

jint OrgBouncycastleAsn1DERApplicationSpecific_getLengthOfHeaderWithByteArray_(OrgBouncycastleAsn1DERApplicationSpecific *self, IOSByteArray *data) {
  jint length = IOSByteArray_Get(nil_chk(data), 1) & (jint) 0xff;
  if (length == (jint) 0x80) {
    return 2;
  }
  if (length > 127) {
    jint size = length & (jint) 0x7f;
    if (size > 4) {
      @throw [[JavaLangIllegalStateException alloc] initWithNSString:JreStrcat("$I", @"DER length more than 4 bytes: ", size)];
    }
    return size + 2;
  }
  return 2;
}

IOSByteArray *OrgBouncycastleAsn1DERApplicationSpecific_replaceTagNumberWithInt_withByteArray_(OrgBouncycastleAsn1DERApplicationSpecific *self, jint newTag, IOSByteArray *input) {
  jint tagNo = IOSByteArray_Get(nil_chk(input), 0) & (jint) 0x1f;
  jint index = 1;
  if (tagNo == (jint) 0x1f) {
    tagNo = 0;
    jint b = IOSByteArray_Get(input, index++) & (jint) 0xff;
    if ((b & (jint) 0x7f) == 0) {
      @throw [[OrgBouncycastleAsn1ASN1ParsingException alloc] initWithNSString:@"corrupted stream - invalid high tag number found"];
    }
    while ((b >= 0) && ((b & (jint) 0x80) != 0)) {
      tagNo |= (b & (jint) 0x7f);
      LShiftAssignInt(&tagNo, 7);
      b = IOSByteArray_Get(input, index++) & (jint) 0xff;
    }
    tagNo |= (b & (jint) 0x7f);
  }
  IOSByteArray *tmp = [IOSByteArray newArrayWithLength:input->size_ - index + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(input, index, tmp, 1, tmp->size_ - 1);
  *IOSByteArray_GetRef(tmp, 0) = (jbyte) newTag;
  return tmp;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1DERApplicationSpecific)
