//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/icao/CscaMasterList.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/DERSet.h"
#include "org/bouncycastle/asn1/icao/CscaMasterList.h"
#include "org/bouncycastle/asn1/x509/Certificate.h"

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1IcaoCscaMasterList_copyCertListWithOrgBouncycastleAsn1X509CertificateArray_(OrgBouncycastleAsn1IcaoCscaMasterList *self, IOSObjectArray *orig);

@interface OrgBouncycastleAsn1IcaoCscaMasterList () {
 @public
  OrgBouncycastleAsn1ASN1Integer *version__;
  IOSObjectArray *certList_;
}
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;

- (IOSObjectArray *)copyCertListWithOrgBouncycastleAsn1X509CertificateArray:(IOSObjectArray *)orig OBJC_METHOD_FAMILY_NONE;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1IcaoCscaMasterList, version__, OrgBouncycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1IcaoCscaMasterList, certList_, IOSObjectArray *)

@implementation OrgBouncycastleAsn1IcaoCscaMasterList

+ (OrgBouncycastleAsn1IcaoCscaMasterList *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1IcaoCscaMasterList_getInstanceWithId_(obj);
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    version__ = [[OrgBouncycastleAsn1ASN1Integer alloc] initWithLong:0];
    if (seq == nil || [seq size] == 0) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"null or empty sequence passed."];
    }
    if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 2) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Incorrect sequence size: ", [seq size])];
    }
    version__ = OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([seq getObjectAtWithInt:0]);
    OrgBouncycastleAsn1ASN1Set *certSet = OrgBouncycastleAsn1ASN1Set_getInstanceWithId_([seq getObjectAtWithInt:1]);
    certList_ = [IOSObjectArray newArrayWithLength:[((OrgBouncycastleAsn1ASN1Set *) nil_chk(certSet)) size] type:OrgBouncycastleAsn1X509Certificate_class_()];
    for (jint i = 0; i < certList_->size_; i++) {
      IOSObjectArray_Set(certList_, i, OrgBouncycastleAsn1X509Certificate_getInstanceWithId_([certSet getObjectAtWithInt:i]));
    }
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1X509CertificateArray:(IOSObjectArray *)certStructs {
  if (self = [super init]) {
    version__ = [[OrgBouncycastleAsn1ASN1Integer alloc] initWithLong:0];
    certList_ = OrgBouncycastleAsn1IcaoCscaMasterList_copyCertListWithOrgBouncycastleAsn1X509CertificateArray_(self, certStructs);
  }
  return self;
}

- (jint)getVersion {
  return [((JavaMathBigInteger *) nil_chk([((OrgBouncycastleAsn1ASN1Integer *) nil_chk(version__)) getValue])) intValue];
}

- (IOSObjectArray *)getCertStructs {
  return OrgBouncycastleAsn1IcaoCscaMasterList_copyCertListWithOrgBouncycastleAsn1X509CertificateArray_(self, certList_);
}

- (IOSObjectArray *)copyCertListWithOrgBouncycastleAsn1X509CertificateArray:(IOSObjectArray *)orig {
  return OrgBouncycastleAsn1IcaoCscaMasterList_copyCertListWithOrgBouncycastleAsn1X509CertificateArray_(self, orig);
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgBouncycastleAsn1ASN1EncodableVector *seq = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  [seq addWithOrgBouncycastleAsn1ASN1Encodable:version__];
  OrgBouncycastleAsn1ASN1EncodableVector *certSet = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(certList_))->size_; i++) {
    [certSet addWithOrgBouncycastleAsn1ASN1Encodable:IOSObjectArray_Get(certList_, i)];
  }
  [seq addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DERSet alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:certSet]];
  return [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:seq];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1IcaoCscaMasterList *)other {
  [super copyAllFieldsTo:other];
  other->version__ = version__;
  other->certList_ = certList_;
}

@end

OrgBouncycastleAsn1IcaoCscaMasterList *OrgBouncycastleAsn1IcaoCscaMasterList_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1IcaoCscaMasterList_init();
  if ([obj isKindOfClass:[OrgBouncycastleAsn1IcaoCscaMasterList class]]) {
    return (OrgBouncycastleAsn1IcaoCscaMasterList *) check_class_cast(obj, [OrgBouncycastleAsn1IcaoCscaMasterList class]);
  }
  else if (obj != nil) {
    return [[OrgBouncycastleAsn1IcaoCscaMasterList alloc] initWithOrgBouncycastleAsn1ASN1Sequence:OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj)];
  }
  return nil;
}

IOSObjectArray *OrgBouncycastleAsn1IcaoCscaMasterList_copyCertListWithOrgBouncycastleAsn1X509CertificateArray_(OrgBouncycastleAsn1IcaoCscaMasterList *self, IOSObjectArray *orig) {
  IOSObjectArray *certs = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(orig))->size_ type:OrgBouncycastleAsn1X509Certificate_class_()];
  for (jint i = 0; i != certs->size_; i++) {
    IOSObjectArray_Set(certs, i, IOSObjectArray_Get(orig, i));
  }
  return certs;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1IcaoCscaMasterList)
