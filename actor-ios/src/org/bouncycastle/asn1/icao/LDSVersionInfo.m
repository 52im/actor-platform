//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/icao/LDSVersionInfo.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DERPrintableString.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/icao/LDSVersionInfo.h"

@interface OrgBouncycastleAsn1IcaoLDSVersionInfo () {
 @public
  OrgBouncycastleAsn1DERPrintableString *ldsVersion_;
  OrgBouncycastleAsn1DERPrintableString *unicodeVersion_;
}
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1IcaoLDSVersionInfo, ldsVersion_, OrgBouncycastleAsn1DERPrintableString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1IcaoLDSVersionInfo, unicodeVersion_, OrgBouncycastleAsn1DERPrintableString *)

@implementation OrgBouncycastleAsn1IcaoLDSVersionInfo

- (instancetype)initWithNSString:(NSString *)ldsVersion
                    withNSString:(NSString *)unicodeVersion {
  if (self = [super init]) {
    self->ldsVersion_ = [[OrgBouncycastleAsn1DERPrintableString alloc] initWithNSString:ldsVersion];
    self->unicodeVersion_ = [[OrgBouncycastleAsn1DERPrintableString alloc] initWithNSString:unicodeVersion];
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 2) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"sequence wrong size for LDSVersionInfo"];
    }
    self->ldsVersion_ = OrgBouncycastleAsn1DERPrintableString_getInstanceWithId_([seq getObjectAtWithInt:0]);
    self->unicodeVersion_ = OrgBouncycastleAsn1DERPrintableString_getInstanceWithId_([seq getObjectAtWithInt:1]);
  }
  return self;
}

+ (OrgBouncycastleAsn1IcaoLDSVersionInfo *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1IcaoLDSVersionInfo_getInstanceWithId_(obj);
}

- (NSString *)getLdsVersion {
  return [((OrgBouncycastleAsn1DERPrintableString *) nil_chk(ldsVersion_)) getString];
}

- (NSString *)getUnicodeVersion {
  return [((OrgBouncycastleAsn1DERPrintableString *) nil_chk(unicodeVersion_)) getString];
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgBouncycastleAsn1ASN1EncodableVector *v = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:ldsVersion_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:unicodeVersion_];
  return [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:v];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1IcaoLDSVersionInfo *)other {
  [super copyAllFieldsTo:other];
  other->ldsVersion_ = ldsVersion_;
  other->unicodeVersion_ = unicodeVersion_;
}

@end

OrgBouncycastleAsn1IcaoLDSVersionInfo *OrgBouncycastleAsn1IcaoLDSVersionInfo_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1IcaoLDSVersionInfo_init();
  if ([obj isKindOfClass:[OrgBouncycastleAsn1IcaoLDSVersionInfo class]]) {
    return (OrgBouncycastleAsn1IcaoLDSVersionInfo *) check_class_cast(obj, [OrgBouncycastleAsn1IcaoLDSVersionInfo class]);
  }
  else if (obj != nil) {
    return [[OrgBouncycastleAsn1IcaoLDSVersionInfo alloc] initWithOrgBouncycastleAsn1ASN1Sequence:OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj)];
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1IcaoLDSVersionInfo)
