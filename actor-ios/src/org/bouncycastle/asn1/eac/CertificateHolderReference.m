//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/eac/CertificateHolderReference.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/IllegalStateException.h"
#include "org/bouncycastle/asn1/eac/CertificateHolderReference.h"

@interface OrgBouncycastleAsn1EacCertificateHolderReference () {
 @public
  NSString *countryCode_;
  NSString *holderMnemonic_;
  NSString *sequenceNumber_;
}
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EacCertificateHolderReference, countryCode_, NSString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EacCertificateHolderReference, holderMnemonic_, NSString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EacCertificateHolderReference, sequenceNumber_, NSString *)

@implementation OrgBouncycastleAsn1EacCertificateHolderReference

NSString * OrgBouncycastleAsn1EacCertificateHolderReference_ReferenceEncoding_ = @"ISO-8859-1";

- (instancetype)initWithNSString:(NSString *)countryCode
                    withNSString:(NSString *)holderMnemonic
                    withNSString:(NSString *)sequenceNumber {
  if (self = [super init]) {
    self->countryCode_ = countryCode;
    self->holderMnemonic_ = holderMnemonic;
    self->sequenceNumber_ = sequenceNumber;
  }
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)contents {
  if (self = [super init]) {
    @try {
      NSString *concat = [NSString stringWithBytes:contents charsetName:OrgBouncycastleAsn1EacCertificateHolderReference_ReferenceEncoding_];
      self->countryCode_ = [concat substring:0 endIndex:2];
      self->holderMnemonic_ = [concat substring:2 endIndex:((jint) [concat length]) - 5];
      self->sequenceNumber_ = [concat substring:((jint) [concat length]) - 5];
    }
    @catch (JavaIoUnsupportedEncodingException *e) {
      @throw [[JavaLangIllegalStateException alloc] initWithNSString:[((JavaIoUnsupportedEncodingException *) nil_chk(e)) description]];
    }
  }
  return self;
}

- (NSString *)getCountryCode {
  return countryCode_;
}

- (NSString *)getHolderMnemonic {
  return holderMnemonic_;
}

- (NSString *)getSequenceNumber {
  return sequenceNumber_;
}

- (IOSByteArray *)getEncoded {
  NSString *ref = JreStrcat("$$$", countryCode_, holderMnemonic_, sequenceNumber_);
  @try {
    return [ref getBytesWithCharsetName:OrgBouncycastleAsn1EacCertificateHolderReference_ReferenceEncoding_];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw [[JavaLangIllegalStateException alloc] initWithNSString:[((JavaIoUnsupportedEncodingException *) nil_chk(e)) description]];
  }
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1EacCertificateHolderReference *)other {
  [super copyAllFieldsTo:other];
  other->countryCode_ = countryCode_;
  other->holderMnemonic_ = holderMnemonic_;
  other->sequenceNumber_ = sequenceNumber_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1EacCertificateHolderReference)
