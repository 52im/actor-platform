//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/eac/EACTags.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DERApplicationSpecific.h"
#include "org/bouncycastle/asn1/eac/EACTags.h"

@implementation OrgBouncycastleAsn1EacEACTags

+ (jint)getTagWithInt:(jint)encodedTag {
  return OrgBouncycastleAsn1EacEACTags_getTagWithInt_(encodedTag);
}

+ (jint)getTagNoWithInt:(jint)tag {
  return OrgBouncycastleAsn1EacEACTags_getTagNoWithInt_(tag);
}

+ (jint)encodeTagWithOrgBouncycastleAsn1DERApplicationSpecific:(OrgBouncycastleAsn1DERApplicationSpecific *)spec {
  return OrgBouncycastleAsn1EacEACTags_encodeTagWithOrgBouncycastleAsn1DERApplicationSpecific_(spec);
}

+ (jint)decodeTagWithInt:(jint)tag {
  return OrgBouncycastleAsn1EacEACTags_decodeTagWithInt_(tag);
}

- (instancetype)init {
  return [super init];
}

@end

jint OrgBouncycastleAsn1EacEACTags_getTagWithInt_(jint encodedTag) {
  OrgBouncycastleAsn1EacEACTags_init();
  return OrgBouncycastleAsn1EacEACTags_decodeTagWithInt_(encodedTag);
}

jint OrgBouncycastleAsn1EacEACTags_getTagNoWithInt_(jint tag) {
  OrgBouncycastleAsn1EacEACTags_init();
  jint i;
  for (i = 24; i >= 0; i -= 8) {
    if (((LShift32((jint) 0xFF, i)) & tag) != 0) {
      return ((~(LShift32((jint) 0xFF, i))) & tag);
    }
  }
  return 0;
}

jint OrgBouncycastleAsn1EacEACTags_encodeTagWithOrgBouncycastleAsn1DERApplicationSpecific_(OrgBouncycastleAsn1DERApplicationSpecific *spec) {
  OrgBouncycastleAsn1EacEACTags_init();
  jint retValue = OrgBouncycastleAsn1BERTags_APPLICATION;
  jboolean constructed = [((OrgBouncycastleAsn1DERApplicationSpecific *) nil_chk(spec)) isConstructed];
  if (constructed) {
    retValue |= OrgBouncycastleAsn1BERTags_CONSTRUCTED;
  }
  jint tag = [spec getApplicationTag];
  if (tag > 31) {
    retValue |= (jint) 0x1F;
    LShiftAssignInt(&retValue, 8);
    jint currentByte = tag & (jint) 0x7F;
    retValue |= currentByte;
    RShiftAssignInt(&tag, 7);
    while (tag > 0) {
      retValue |= (jint) 0x80;
      LShiftAssignInt(&retValue, 8);
      currentByte = tag & (jint) 0x7F;
      RShiftAssignInt(&tag, 7);
    }
  }
  else {
    retValue |= tag;
  }
  return retValue;
}

jint OrgBouncycastleAsn1EacEACTags_decodeTagWithInt_(jint tag) {
  OrgBouncycastleAsn1EacEACTags_init();
  jint retValue = 0;
  jboolean multiBytes = NO;
  for (jint i = 24; i >= 0; i -= 8) {
    jint currentByte = (RShift32(tag, i)) & (jint) 0xFF;
    if (currentByte == 0) {
      continue;
    }
    if (multiBytes) {
      LShiftAssignInt(&retValue, 7);
      retValue |= currentByte & (jint) 0x7F;
    }
    else if ((currentByte & (jint) 0x1F) == (jint) 0x1F) {
      multiBytes = YES;
    }
    else {
      return currentByte & (jint) 0x1F;
    }
  }
  return retValue;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1EacEACTags)
