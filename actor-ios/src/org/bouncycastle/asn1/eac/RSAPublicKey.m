//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/eac/RSAPublicKey.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "java/util/Enumeration.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/eac/RSAPublicKey.h"
#include "org/bouncycastle/asn1/eac/UnsignedInteger.h"

__attribute__((unused)) static void OrgBouncycastleAsn1EacRSAPublicKey_setModulusWithOrgBouncycastleAsn1EacUnsignedInteger_(OrgBouncycastleAsn1EacRSAPublicKey *self, OrgBouncycastleAsn1EacUnsignedInteger *modulus);
__attribute__((unused)) static void OrgBouncycastleAsn1EacRSAPublicKey_setExponentWithOrgBouncycastleAsn1EacUnsignedInteger_(OrgBouncycastleAsn1EacRSAPublicKey *self, OrgBouncycastleAsn1EacUnsignedInteger *exponent);

@interface OrgBouncycastleAsn1EacRSAPublicKey () {
 @public
  OrgBouncycastleAsn1ASN1ObjectIdentifier *usage_;
  JavaMathBigInteger *modulus_;
  JavaMathBigInteger *exponent_;
  jint valid_;
}

- (void)setModulusWithOrgBouncycastleAsn1EacUnsignedInteger:(OrgBouncycastleAsn1EacUnsignedInteger *)modulus;

- (void)setExponentWithOrgBouncycastleAsn1EacUnsignedInteger:(OrgBouncycastleAsn1EacUnsignedInteger *)exponent;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EacRSAPublicKey, usage_, OrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EacRSAPublicKey, modulus_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1EacRSAPublicKey, exponent_, JavaMathBigInteger *)

@implementation OrgBouncycastleAsn1EacRSAPublicKey

jint OrgBouncycastleAsn1EacRSAPublicKey_modulusValid_ = (jint) 0x01;
jint OrgBouncycastleAsn1EacRSAPublicKey_exponentValid_ = (jint) 0x02;

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  if (self = [super init]) {
    valid_ = 0;
    id<JavaUtilEnumeration> en = [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
    self->usage_ = OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([((id<JavaUtilEnumeration>) nil_chk(en)) nextElement]);
    while ([en hasMoreElements]) {
      OrgBouncycastleAsn1EacUnsignedInteger *val = OrgBouncycastleAsn1EacUnsignedInteger_getInstanceWithId_([en nextElement]);
      switch ([((OrgBouncycastleAsn1EacUnsignedInteger *) nil_chk(val)) getTagNo]) {
        case (jint) 0x1:
        OrgBouncycastleAsn1EacRSAPublicKey_setModulusWithOrgBouncycastleAsn1EacUnsignedInteger_(self, val);
        break;
        case (jint) 0x2:
        OrgBouncycastleAsn1EacRSAPublicKey_setExponentWithOrgBouncycastleAsn1EacUnsignedInteger_(self, val);
        break;
        default:
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I$", @"Unknown DERTaggedObject :", [val getTagNo], @"-> not an Iso7816RSAPublicKeyStructure")];
      }
    }
    if (valid_ != (jint) 0x3) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"missing argument -> not an Iso7816RSAPublicKeyStructure"];
    }
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)usage
                                         withJavaMathBigInteger:(JavaMathBigInteger *)modulus
                                         withJavaMathBigInteger:(JavaMathBigInteger *)exponent {
  if (self = [super init]) {
    valid_ = 0;
    self->usage_ = usage;
    self->modulus_ = modulus;
    self->exponent_ = exponent;
  }
  return self;
}

- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getUsage {
  return usage_;
}

- (JavaMathBigInteger *)getModulus {
  return modulus_;
}

- (JavaMathBigInteger *)getPublicExponent {
  return exponent_;
}

- (void)setModulusWithOrgBouncycastleAsn1EacUnsignedInteger:(OrgBouncycastleAsn1EacUnsignedInteger *)modulus {
  OrgBouncycastleAsn1EacRSAPublicKey_setModulusWithOrgBouncycastleAsn1EacUnsignedInteger_(self, modulus);
}

- (void)setExponentWithOrgBouncycastleAsn1EacUnsignedInteger:(OrgBouncycastleAsn1EacUnsignedInteger *)exponent {
  OrgBouncycastleAsn1EacRSAPublicKey_setExponentWithOrgBouncycastleAsn1EacUnsignedInteger_(self, exponent);
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgBouncycastleAsn1ASN1EncodableVector *v = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:usage_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1EacUnsignedInteger alloc] initWithInt:(jint) 0x01 withJavaMathBigInteger:[self getModulus]]];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1EacUnsignedInteger alloc] initWithInt:(jint) 0x02 withJavaMathBigInteger:[self getPublicExponent]]];
  return [[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:v];
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1EacRSAPublicKey *)other {
  [super copyAllFieldsTo:other];
  other->usage_ = usage_;
  other->modulus_ = modulus_;
  other->exponent_ = exponent_;
  other->valid_ = valid_;
}

@end

void OrgBouncycastleAsn1EacRSAPublicKey_setModulusWithOrgBouncycastleAsn1EacUnsignedInteger_(OrgBouncycastleAsn1EacRSAPublicKey *self, OrgBouncycastleAsn1EacUnsignedInteger *modulus) {
  if ((self->valid_ & OrgBouncycastleAsn1EacRSAPublicKey_modulusValid_) == 0) {
    self->valid_ |= OrgBouncycastleAsn1EacRSAPublicKey_modulusValid_;
    self->modulus_ = [((OrgBouncycastleAsn1EacUnsignedInteger *) nil_chk(modulus)) getValue];
  }
  else {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Modulus already set"];
  }
}

void OrgBouncycastleAsn1EacRSAPublicKey_setExponentWithOrgBouncycastleAsn1EacUnsignedInteger_(OrgBouncycastleAsn1EacRSAPublicKey *self, OrgBouncycastleAsn1EacUnsignedInteger *exponent) {
  if ((self->valid_ & OrgBouncycastleAsn1EacRSAPublicKey_exponentValid_) == 0) {
    self->valid_ |= OrgBouncycastleAsn1EacRSAPublicKey_exponentValid_;
    self->exponent_ = [((OrgBouncycastleAsn1EacUnsignedInteger *) nil_chk(exponent)) getValue];
  }
  else {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Exponent already set"];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1EacRSAPublicKey)
