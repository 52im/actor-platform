//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/dvcs/DVCSRequestInformationBuilder.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/DERTaggedObject.h"
#include "org/bouncycastle/asn1/dvcs/DVCSRequestInformation.h"
#include "org/bouncycastle/asn1/dvcs/DVCSRequestInformationBuilder.h"
#include "org/bouncycastle/asn1/dvcs/DVCSTime.h"
#include "org/bouncycastle/asn1/dvcs/ServiceType.h"
#include "org/bouncycastle/asn1/x509/Extensions.h"
#include "org/bouncycastle/asn1/x509/GeneralName.h"
#include "org/bouncycastle/asn1/x509/GeneralNames.h"
#include "org/bouncycastle/asn1/x509/PolicyInformation.h"
#include "org/bouncycastle/util/BigIntegers.h"

@interface OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder () {
 @public
  jint version__;
  OrgBouncycastleAsn1DvcsServiceType *service_;
  OrgBouncycastleAsn1DvcsDVCSRequestInformation *initialInfo_;
  JavaMathBigInteger *nonce_;
  OrgBouncycastleAsn1DvcsDVCSTime *requestTime_;
  OrgBouncycastleAsn1X509GeneralNames *requester_;
  OrgBouncycastleAsn1X509PolicyInformation *requestPolicy_;
  OrgBouncycastleAsn1X509GeneralNames *dvcs_;
  OrgBouncycastleAsn1X509GeneralNames *dataLocations_;
  OrgBouncycastleAsn1X509Extensions *extensions_;
}
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder, service_, OrgBouncycastleAsn1DvcsServiceType *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder, initialInfo_, OrgBouncycastleAsn1DvcsDVCSRequestInformation *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder, nonce_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder, requestTime_, OrgBouncycastleAsn1DvcsDVCSTime *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder, requester_, OrgBouncycastleAsn1X509GeneralNames *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder, requestPolicy_, OrgBouncycastleAsn1X509PolicyInformation *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder, dvcs_, OrgBouncycastleAsn1X509GeneralNames *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder, dataLocations_, OrgBouncycastleAsn1X509GeneralNames *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder, extensions_, OrgBouncycastleAsn1X509Extensions *)

@implementation OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder

- (instancetype)initWithOrgBouncycastleAsn1DvcsServiceType:(OrgBouncycastleAsn1DvcsServiceType *)service {
  if (self = [super init]) {
    version__ = OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder_DEFAULT_VERSION;
    self->service_ = service;
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1DvcsDVCSRequestInformation:(OrgBouncycastleAsn1DvcsDVCSRequestInformation *)initialInfo {
  if (self = [super init]) {
    version__ = OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder_DEFAULT_VERSION;
    self->initialInfo_ = initialInfo;
    self->service_ = [((OrgBouncycastleAsn1DvcsDVCSRequestInformation *) nil_chk(initialInfo)) getService];
    self->version__ = [initialInfo getVersion];
    self->nonce_ = [initialInfo getNonce];
    self->requestTime_ = [initialInfo getRequestTime];
    self->requestPolicy_ = [initialInfo getRequestPolicy];
    self->dvcs_ = [initialInfo getDVCS];
    self->dataLocations_ = [initialInfo getDataLocations];
  }
  return self;
}

- (OrgBouncycastleAsn1DvcsDVCSRequestInformation *)build {
  OrgBouncycastleAsn1ASN1EncodableVector *v = [[OrgBouncycastleAsn1ASN1EncodableVector alloc] init];
  if (version__ != OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder_DEFAULT_VERSION) {
    [v addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1ASN1Integer alloc] initWithLong:version__]];
  }
  [v addWithOrgBouncycastleAsn1ASN1Encodable:service_];
  if (nonce_ != nil) {
    [v addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1ASN1Integer alloc] initWithJavaMathBigInteger:nonce_]];
  }
  if (requestTime_ != nil) {
    [v addWithOrgBouncycastleAsn1ASN1Encodable:requestTime_];
  }
  IOSIntArray *tags = [IOSIntArray newArrayWithInts:(jint[]){ OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder_TAG_REQUESTER, OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder_TAG_REQUEST_POLICY, OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder_TAG_DVCS, OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder_TAG_DATA_LOCATIONS, OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder_TAG_EXTENSIONS } count:5];
  IOSObjectArray *taggedObjects = [IOSObjectArray newArrayWithObjects:(id[]){ requester_, requestPolicy_, dvcs_, dataLocations_, extensions_ } count:5 type:OrgBouncycastleAsn1ASN1Encodable_class_()];
  for (jint i = 0; i < tags->size_; i++) {
    jint tag = IOSIntArray_Get(tags, i);
    id<OrgBouncycastleAsn1ASN1Encodable> taggedObject = IOSObjectArray_Get(taggedObjects, i);
    if (taggedObject != nil) {
      [v addWithOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1DERTaggedObject alloc] initWithBoolean:NO withInt:tag withOrgBouncycastleAsn1ASN1Encodable:taggedObject]];
    }
  }
  return OrgBouncycastleAsn1DvcsDVCSRequestInformation_getInstanceWithId_([[OrgBouncycastleAsn1DERSequence alloc] initWithOrgBouncycastleAsn1ASN1EncodableVector:v]);
}

- (void)setVersionWithInt:(jint)version_ {
  if (initialInfo_ != nil) {
    @throw [[JavaLangIllegalStateException alloc] initWithNSString:@"cannot change version in existing DVCSRequestInformation"];
  }
  self->version__ = version_;
}

- (void)setNonceWithJavaMathBigInteger:(JavaMathBigInteger *)nonce {
  if (initialInfo_ != nil) {
    if ([initialInfo_ getNonce] == nil) {
      self->nonce_ = nonce;
    }
    else {
      IOSByteArray *initialBytes = [((JavaMathBigInteger *) nil_chk([initialInfo_ getNonce])) toByteArray];
      IOSByteArray *newBytes = OrgBouncycastleUtilBigIntegers_asUnsignedByteArrayWithJavaMathBigInteger_(nonce);
      IOSByteArray *nonceBytes = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(initialBytes))->size_ + ((IOSByteArray *) nil_chk(newBytes))->size_];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(initialBytes, 0, nonceBytes, 0, initialBytes->size_);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(newBytes, 0, nonceBytes, initialBytes->size_, newBytes->size_);
      self->nonce_ = [[JavaMathBigInteger alloc] initWithByteArray:nonceBytes];
    }
  }
  self->nonce_ = nonce;
}

- (void)setRequestTimeWithOrgBouncycastleAsn1DvcsDVCSTime:(OrgBouncycastleAsn1DvcsDVCSTime *)requestTime {
  if (initialInfo_ != nil) {
    @throw [[JavaLangIllegalStateException alloc] initWithNSString:@"cannot change request time in existing DVCSRequestInformation"];
  }
  self->requestTime_ = requestTime;
}

- (void)setRequesterWithOrgBouncycastleAsn1X509GeneralName:(OrgBouncycastleAsn1X509GeneralName *)requester {
  [self setRequesterWithOrgBouncycastleAsn1X509GeneralNames:[[OrgBouncycastleAsn1X509GeneralNames alloc] initWithOrgBouncycastleAsn1X509GeneralName:requester]];
}

- (void)setRequesterWithOrgBouncycastleAsn1X509GeneralNames:(OrgBouncycastleAsn1X509GeneralNames *)requester {
  self->requester_ = requester;
}

- (void)setRequestPolicyWithOrgBouncycastleAsn1X509PolicyInformation:(OrgBouncycastleAsn1X509PolicyInformation *)requestPolicy {
  if (initialInfo_ != nil) {
    @throw [[JavaLangIllegalStateException alloc] initWithNSString:@"cannot change request policy in existing DVCSRequestInformation"];
  }
  self->requestPolicy_ = requestPolicy;
}

- (void)setDVCSWithOrgBouncycastleAsn1X509GeneralName:(OrgBouncycastleAsn1X509GeneralName *)dvcs {
  [self setDVCSWithOrgBouncycastleAsn1X509GeneralNames:[[OrgBouncycastleAsn1X509GeneralNames alloc] initWithOrgBouncycastleAsn1X509GeneralName:dvcs]];
}

- (void)setDVCSWithOrgBouncycastleAsn1X509GeneralNames:(OrgBouncycastleAsn1X509GeneralNames *)dvcs {
  self->dvcs_ = dvcs;
}

- (void)setDataLocationsWithOrgBouncycastleAsn1X509GeneralName:(OrgBouncycastleAsn1X509GeneralName *)dataLocation {
  [self setDataLocationsWithOrgBouncycastleAsn1X509GeneralNames:[[OrgBouncycastleAsn1X509GeneralNames alloc] initWithOrgBouncycastleAsn1X509GeneralName:dataLocation]];
}

- (void)setDataLocationsWithOrgBouncycastleAsn1X509GeneralNames:(OrgBouncycastleAsn1X509GeneralNames *)dataLocations {
  self->dataLocations_ = dataLocations;
}

- (void)setExtensionsWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)extensions {
  if (initialInfo_ != nil) {
    @throw [[JavaLangIllegalStateException alloc] initWithNSString:@"cannot change extensions in existing DVCSRequestInformation"];
  }
  self->extensions_ = extensions;
}

- (void)copyAllFieldsTo:(OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder *)other {
  [super copyAllFieldsTo:other];
  other->version__ = version__;
  other->service_ = service_;
  other->initialInfo_ = initialInfo_;
  other->nonce_ = nonce_;
  other->requestTime_ = requestTime_;
  other->requester_ = requester_;
  other->requestPolicy_ = requestPolicy_;
  other->dvcs_ = dvcs_;
  other->dataLocations_ = dataLocations_;
  other->extensions_ = extensions_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1DvcsDVCSRequestInformationBuilder)
