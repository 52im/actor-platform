//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/asn1/StreamUtil.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Integer.h"
#include "java/lang/Runtime.h"
#include "java/nio/channels/FileChannel.h"
#include "org/bouncycastle/asn1/ASN1InputStream.h"
#include "org/bouncycastle/asn1/LimitedInputStream.h"
#include "org/bouncycastle/asn1/StreamUtil.h"

@interface OrgBouncycastleAsn1StreamUtil () {
}
@end

BOOL OrgBouncycastleAsn1StreamUtil_initialized = NO;

@implementation OrgBouncycastleAsn1StreamUtil

jlong OrgBouncycastleAsn1StreamUtil_MAX_MEMORY_;

+ (jint)findLimitWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return OrgBouncycastleAsn1StreamUtil_findLimitWithJavaIoInputStream_(inArg);
}

+ (jint)calculateBodyLengthWithInt:(jint)length {
  return OrgBouncycastleAsn1StreamUtil_calculateBodyLengthWithInt_(length);
}

+ (jint)calculateTagLengthWithInt:(jint)tagNo {
  return OrgBouncycastleAsn1StreamUtil_calculateTagLengthWithInt_(tagNo);
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1StreamUtil class]) {
    OrgBouncycastleAsn1StreamUtil_MAX_MEMORY_ = [((JavaLangRuntime *) nil_chk(JavaLangRuntime_getRuntime())) maxMemory];
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1StreamUtil)
  }
}

@end

jint OrgBouncycastleAsn1StreamUtil_findLimitWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  OrgBouncycastleAsn1StreamUtil_init();
  if ([inArg isKindOfClass:[OrgBouncycastleAsn1LimitedInputStream class]]) {
    return [((OrgBouncycastleAsn1LimitedInputStream *) nil_chk(((OrgBouncycastleAsn1LimitedInputStream *) check_class_cast(inArg, [OrgBouncycastleAsn1LimitedInputStream class])))) getRemaining];
  }
  else if ([inArg isKindOfClass:[OrgBouncycastleAsn1ASN1InputStream class]]) {
    return [((OrgBouncycastleAsn1ASN1InputStream *) nil_chk(((OrgBouncycastleAsn1ASN1InputStream *) check_class_cast(inArg, [OrgBouncycastleAsn1ASN1InputStream class])))) getLimit];
  }
  else if ([inArg isKindOfClass:[JavaIoByteArrayInputStream class]]) {
    return [((JavaIoByteArrayInputStream *) nil_chk(((JavaIoByteArrayInputStream *) check_class_cast(inArg, [JavaIoByteArrayInputStream class])))) available];
  }
  else if ([inArg isKindOfClass:[JavaIoFileInputStream class]]) {
    @try {
      JavaNioChannelsFileChannel *channel = [((JavaIoFileInputStream *) nil_chk(((JavaIoFileInputStream *) check_class_cast(inArg, [JavaIoFileInputStream class])))) getChannel];
      jlong size = (channel != nil) ? [channel size] : JavaLangInteger_MAX_VALUE;
      if (size < JavaLangInteger_MAX_VALUE) {
        return (jint) size;
      }
    }
    @catch (JavaIoIOException *e) {
    }
  }
  if (OrgBouncycastleAsn1StreamUtil_MAX_MEMORY_ > JavaLangInteger_MAX_VALUE) {
    return JavaLangInteger_MAX_VALUE;
  }
  return (jint) OrgBouncycastleAsn1StreamUtil_MAX_MEMORY_;
}

jint OrgBouncycastleAsn1StreamUtil_calculateBodyLengthWithInt_(jint length) {
  OrgBouncycastleAsn1StreamUtil_init();
  jint count = 1;
  if (length > 127) {
    jint size = 1;
    jint val = length;
    while ((URShiftAssignInt(&val, 8)) != 0) {
      size++;
    }
    for (jint i = (size - 1) * 8; i >= 0; i -= 8) {
      count++;
    }
  }
  return count;
}

jint OrgBouncycastleAsn1StreamUtil_calculateTagLengthWithInt_(jint tagNo) {
  OrgBouncycastleAsn1StreamUtil_init();
  jint length = 1;
  if (tagNo >= 31) {
    if (tagNo < 128) {
      length++;
    }
    else {
      IOSByteArray *stack = [IOSByteArray newArrayWithLength:5];
      jint pos = stack->size_;
      *IOSByteArray_GetRef(stack, --pos) = (jbyte) (tagNo & (jint) 0x7F);
      do {
        RShiftAssignInt(&tagNo, 7);
        *IOSByteArray_GetRef(stack, --pos) = (jbyte) ((tagNo & (jint) 0x7F) | (jint) 0x80);
      }
      while (tagNo > 127);
      length += stack->size_ - pos;
    }
  }
  return length;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1StreamUtil)
