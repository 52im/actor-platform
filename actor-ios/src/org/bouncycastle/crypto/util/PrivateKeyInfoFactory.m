//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/crypto/util/PrivateKeyInfoFactory.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/DERNull.h"
#include "org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/bouncycastle/asn1/pkcs/PrivateKeyInfo.h"
#include "org/bouncycastle/asn1/pkcs/RSAPrivateKey.h"
#include "org/bouncycastle/asn1/sec/ECPrivateKey.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/DSAParameter.h"
#include "org/bouncycastle/asn1/x9/X962Parameters.h"
#include "org/bouncycastle/asn1/x9/X9ECParameters.h"
#include "org/bouncycastle/asn1/x9/X9ObjectIdentifiers.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/crypto/params/DSAParameters.h"
#include "org/bouncycastle/crypto/params/DSAPrivateKeyParameters.h"
#include "org/bouncycastle/crypto/params/ECDomainParameters.h"
#include "org/bouncycastle/crypto/params/ECNamedDomainParameters.h"
#include "org/bouncycastle/crypto/params/ECPrivateKeyParameters.h"
#include "org/bouncycastle/crypto/params/RSAKeyParameters.h"
#include "org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.h"
#include "org/bouncycastle/crypto/util/PrivateKeyInfoFactory.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECPoint.h"

@implementation OrgBouncycastleCryptoUtilPrivateKeyInfoFactory

+ (OrgBouncycastleAsn1PkcsPrivateKeyInfo *)createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)privateKey {
  return OrgBouncycastleCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(privateKey);
}

- (instancetype)init {
  return [super init];
}

@end

OrgBouncycastleAsn1PkcsPrivateKeyInfo *OrgBouncycastleCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateKey) {
  OrgBouncycastleCryptoUtilPrivateKeyInfoFactory_init();
  if ([privateKey isKindOfClass:[OrgBouncycastleCryptoParamsRSAKeyParameters class]]) {
    OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *priv = (OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *) check_class_cast(privateKey, [OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters class]);
    return [[OrgBouncycastleAsn1PkcsPrivateKeyInfo alloc] initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:[[OrgBouncycastleAsn1X509AlgorithmIdentifier alloc] initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers_get_rsaEncryption_() withOrgBouncycastleAsn1ASN1Encodable:OrgBouncycastleAsn1DERNull_get_INSTANCE_()] withOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1PkcsRSAPrivateKey alloc] initWithJavaMathBigInteger:[((OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *) nil_chk(priv)) getModulus] withJavaMathBigInteger:[priv getPublicExponent] withJavaMathBigInteger:[priv getExponent] withJavaMathBigInteger:[priv getP] withJavaMathBigInteger:[priv getQ] withJavaMathBigInteger:[priv getDP] withJavaMathBigInteger:[priv getDQ] withJavaMathBigInteger:[priv getQInv]]];
  }
  else if ([privateKey isKindOfClass:[OrgBouncycastleCryptoParamsDSAPrivateKeyParameters class]]) {
    OrgBouncycastleCryptoParamsDSAPrivateKeyParameters *priv = (OrgBouncycastleCryptoParamsDSAPrivateKeyParameters *) check_class_cast(privateKey, [OrgBouncycastleCryptoParamsDSAPrivateKeyParameters class]);
    OrgBouncycastleCryptoParamsDSAParameters *params = [((OrgBouncycastleCryptoParamsDSAPrivateKeyParameters *) nil_chk(priv)) getParameters];
    return [[OrgBouncycastleAsn1PkcsPrivateKeyInfo alloc] initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:[[OrgBouncycastleAsn1X509AlgorithmIdentifier alloc] initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:OrgBouncycastleAsn1X9X9ObjectIdentifiers_get_id_dsa_() withOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1X509DSAParameter alloc] initWithJavaMathBigInteger:[((OrgBouncycastleCryptoParamsDSAParameters *) nil_chk(params)) getP] withJavaMathBigInteger:[params getQ] withJavaMathBigInteger:[params getG]]] withOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1ASN1Integer alloc] initWithJavaMathBigInteger:[priv getX]]];
  }
  else if ([privateKey isKindOfClass:[OrgBouncycastleCryptoParamsECPrivateKeyParameters class]]) {
    OrgBouncycastleCryptoParamsECPrivateKeyParameters *priv = (OrgBouncycastleCryptoParamsECPrivateKeyParameters *) check_class_cast(privateKey, [OrgBouncycastleCryptoParamsECPrivateKeyParameters class]);
    OrgBouncycastleCryptoParamsECDomainParameters *domainParams = [((OrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk(priv)) getParameters];
    id<OrgBouncycastleAsn1ASN1Encodable> params;
    if (domainParams == nil) {
      params = [[OrgBouncycastleAsn1X9X962Parameters alloc] initWithOrgBouncycastleAsn1ASN1Primitive:OrgBouncycastleAsn1DERNull_get_INSTANCE_()];
    }
    else if ([domainParams isKindOfClass:[OrgBouncycastleCryptoParamsECNamedDomainParameters class]]) {
      params = [[OrgBouncycastleAsn1X9X962Parameters alloc] initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:[((OrgBouncycastleCryptoParamsECNamedDomainParameters *) check_class_cast(domainParams, [OrgBouncycastleCryptoParamsECNamedDomainParameters class])) getName]];
    }
    else {
      OrgBouncycastleAsn1X9X9ECParameters *ecP = [[OrgBouncycastleAsn1X9X9ECParameters alloc] initWithOrgBouncycastleMathEcECCurve:[domainParams getCurve] withOrgBouncycastleMathEcECPoint:[domainParams getG] withJavaMathBigInteger:[domainParams getN] withJavaMathBigInteger:[domainParams getH] withByteArray:[domainParams getSeed]];
      params = [[OrgBouncycastleAsn1X9X962Parameters alloc] initWithOrgBouncycastleAsn1X9X9ECParameters:ecP];
    }
    return [[OrgBouncycastleAsn1PkcsPrivateKeyInfo alloc] initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:[[OrgBouncycastleAsn1X509AlgorithmIdentifier alloc] initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:OrgBouncycastleAsn1X9X9ObjectIdentifiers_get_id_ecPublicKey_() withOrgBouncycastleAsn1ASN1Encodable:params] withOrgBouncycastleAsn1ASN1Encodable:[[OrgBouncycastleAsn1SecECPrivateKey alloc] initWithJavaMathBigInteger:[priv getD] withOrgBouncycastleAsn1ASN1Encodable:params]];
  }
  else {
    @throw [[JavaIoIOException alloc] initWithNSString:@"key parameters not recognised."];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoUtilPrivateKeyInfoFactory)
