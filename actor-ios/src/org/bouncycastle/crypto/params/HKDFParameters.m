//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/crypto/params/HKDFParameters.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/crypto/params/HKDFParameters.h"
#include "org/bouncycastle/util/Arrays.h"

@interface OrgBouncycastleCryptoParamsHKDFParameters () {
 @public
  IOSByteArray *ikm_;
  jboolean skipExpand_;
  IOSByteArray *salt_;
  IOSByteArray *info_;
}
- (instancetype)initWithByteArray:(IOSByteArray *)ikm
                      withBoolean:(jboolean)skip
                    withByteArray:(IOSByteArray *)salt
                    withByteArray:(IOSByteArray *)info;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsHKDFParameters, ikm_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsHKDFParameters, salt_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsHKDFParameters, info_, IOSByteArray *)

@implementation OrgBouncycastleCryptoParamsHKDFParameters

- (instancetype)initOrgBouncycastleCryptoParamsHKDFParametersWithByteArray:(IOSByteArray *)ikm
                                                               withBoolean:(jboolean)skip
                                                             withByteArray:(IOSByteArray *)salt
                                                             withByteArray:(IOSByteArray *)info {
  if (self = [super init]) {
    if (ikm == nil) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"IKM (input keying material) should not be null"];
    }
    self->ikm_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(ikm);
    self->skipExpand_ = skip;
    if (salt == nil || salt->size_ == 0) {
      self->salt_ = nil;
    }
    else {
      self->salt_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(salt);
    }
    if (info == nil) {
      self->info_ = [IOSByteArray newArrayWithLength:0];
    }
    else {
      self->info_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(info);
    }
  }
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)ikm
                      withBoolean:(jboolean)skip
                    withByteArray:(IOSByteArray *)salt
                    withByteArray:(IOSByteArray *)info {
  return [self initOrgBouncycastleCryptoParamsHKDFParametersWithByteArray:ikm withBoolean:skip withByteArray:salt withByteArray:info];
}

- (instancetype)initWithByteArray:(IOSByteArray *)ikm
                    withByteArray:(IOSByteArray *)salt
                    withByteArray:(IOSByteArray *)info {
  return [self initOrgBouncycastleCryptoParamsHKDFParametersWithByteArray:ikm withBoolean:NO withByteArray:salt withByteArray:info];
}

+ (OrgBouncycastleCryptoParamsHKDFParameters *)skipExtractParametersWithByteArray:(IOSByteArray *)ikm
                                                                    withByteArray:(IOSByteArray *)info {
  return OrgBouncycastleCryptoParamsHKDFParameters_skipExtractParametersWithByteArray_withByteArray_(ikm, info);
}

+ (OrgBouncycastleCryptoParamsHKDFParameters *)defaultParametersWithByteArray:(IOSByteArray *)ikm {
  return OrgBouncycastleCryptoParamsHKDFParameters_defaultParametersWithByteArray_(ikm);
}

- (IOSByteArray *)getIKM {
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(ikm_);
}

- (jboolean)skipExtract {
  return skipExpand_;
}

- (IOSByteArray *)getSalt {
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(salt_);
}

- (IOSByteArray *)getInfo {
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(info_);
}

- (void)copyAllFieldsTo:(OrgBouncycastleCryptoParamsHKDFParameters *)other {
  [super copyAllFieldsTo:other];
  other->ikm_ = ikm_;
  other->skipExpand_ = skipExpand_;
  other->salt_ = salt_;
  other->info_ = info_;
}

@end

OrgBouncycastleCryptoParamsHKDFParameters *OrgBouncycastleCryptoParamsHKDFParameters_skipExtractParametersWithByteArray_withByteArray_(IOSByteArray *ikm, IOSByteArray *info) {
  OrgBouncycastleCryptoParamsHKDFParameters_init();
  return [[OrgBouncycastleCryptoParamsHKDFParameters alloc] initWithByteArray:ikm withBoolean:YES withByteArray:nil withByteArray:info];
}

OrgBouncycastleCryptoParamsHKDFParameters *OrgBouncycastleCryptoParamsHKDFParameters_defaultParametersWithByteArray_(IOSByteArray *ikm) {
  OrgBouncycastleCryptoParamsHKDFParameters_init();
  return [[OrgBouncycastleCryptoParamsHKDFParameters alloc] initWithByteArray:ikm withBoolean:NO withByteArray:nil withByteArray:nil];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsHKDFParameters)
