//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/crypto/params/ECDomainParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/crypto/params/ECDomainParameters.h"
#include "org/bouncycastle/math/ec/ECConstants.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/util/Arrays.h"

@interface OrgBouncycastleCryptoParamsECDomainParameters () {
 @public
  OrgBouncycastleMathEcECCurve *curve_;
  IOSByteArray *seed_;
  OrgBouncycastleMathEcECPoint *G_;
  JavaMathBigInteger *n_;
  JavaMathBigInteger *h_;
}
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsECDomainParameters, curve_, OrgBouncycastleMathEcECCurve *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsECDomainParameters, seed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsECDomainParameters, G_, OrgBouncycastleMathEcECPoint *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsECDomainParameters, n_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsECDomainParameters, h_, JavaMathBigInteger *)

@implementation OrgBouncycastleCryptoParamsECDomainParameters

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                    withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n {
  return [self initOrgBouncycastleCryptoParamsECDomainParametersWithOrgBouncycastleMathEcECCurve:curve withOrgBouncycastleMathEcECPoint:G withJavaMathBigInteger:n withJavaMathBigInteger:OrgBouncycastleMathEcECConstants_get_ONE_() withByteArray:nil];
}

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                    withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h {
  return [self initOrgBouncycastleCryptoParamsECDomainParametersWithOrgBouncycastleMathEcECCurve:curve withOrgBouncycastleMathEcECPoint:G withJavaMathBigInteger:n withJavaMathBigInteger:h withByteArray:nil];
}

- (instancetype)initOrgBouncycastleCryptoParamsECDomainParametersWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                                                                 withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)G
                                                                           withJavaMathBigInteger:(JavaMathBigInteger *)n
                                                                           withJavaMathBigInteger:(JavaMathBigInteger *)h
                                                                                    withByteArray:(IOSByteArray *)seed {
  if (self = [super init]) {
    self->curve_ = curve;
    self->G_ = [((OrgBouncycastleMathEcECPoint *) nil_chk(G)) normalize];
    self->n_ = n;
    self->h_ = h;
    self->seed_ = seed;
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                    withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h
                                       withByteArray:(IOSByteArray *)seed {
  return [self initOrgBouncycastleCryptoParamsECDomainParametersWithOrgBouncycastleMathEcECCurve:curve withOrgBouncycastleMathEcECPoint:G withJavaMathBigInteger:n withJavaMathBigInteger:h withByteArray:seed];
}

- (OrgBouncycastleMathEcECCurve *)getCurve {
  return curve_;
}

- (OrgBouncycastleMathEcECPoint *)getG {
  return G_;
}

- (JavaMathBigInteger *)getN {
  return n_;
}

- (JavaMathBigInteger *)getH {
  return h_;
}

- (IOSByteArray *)getSeed {
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(seed_);
}

- (void)copyAllFieldsTo:(OrgBouncycastleCryptoParamsECDomainParameters *)other {
  [super copyAllFieldsTo:other];
  other->curve_ = curve_;
  other->seed_ = seed_;
  other->G_ = G_;
  other->n_ = n_;
  other->h_ = h_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsECDomainParameters)
