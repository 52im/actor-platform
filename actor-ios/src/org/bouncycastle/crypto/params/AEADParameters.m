//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/crypto/params/AEADParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/params/AEADParameters.h"
#include "org/bouncycastle/crypto/params/KeyParameter.h"

@interface OrgBouncycastleCryptoParamsAEADParameters () {
 @public
  IOSByteArray *associatedText_;
  IOSByteArray *nonce_;
  OrgBouncycastleCryptoParamsKeyParameter *key_;
  jint macSize_;
}
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsAEADParameters, associatedText_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsAEADParameters, nonce_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsAEADParameters, key_, OrgBouncycastleCryptoParamsKeyParameter *)

@implementation OrgBouncycastleCryptoParamsAEADParameters

- (instancetype)initWithOrgBouncycastleCryptoParamsKeyParameter:(OrgBouncycastleCryptoParamsKeyParameter *)key
                                                        withInt:(jint)macSize
                                                  withByteArray:(IOSByteArray *)nonce {
  return [self initOrgBouncycastleCryptoParamsAEADParametersWithOrgBouncycastleCryptoParamsKeyParameter:key withInt:macSize withByteArray:nonce withByteArray:nil];
}

- (instancetype)initOrgBouncycastleCryptoParamsAEADParametersWithOrgBouncycastleCryptoParamsKeyParameter:(OrgBouncycastleCryptoParamsKeyParameter *)key
                                                                                                 withInt:(jint)macSize
                                                                                           withByteArray:(IOSByteArray *)nonce
                                                                                           withByteArray:(IOSByteArray *)associatedText {
  if (self = [super init]) {
    self->key_ = key;
    self->nonce_ = nonce;
    self->macSize_ = macSize;
    self->associatedText_ = associatedText;
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleCryptoParamsKeyParameter:(OrgBouncycastleCryptoParamsKeyParameter *)key
                                                        withInt:(jint)macSize
                                                  withByteArray:(IOSByteArray *)nonce
                                                  withByteArray:(IOSByteArray *)associatedText {
  return [self initOrgBouncycastleCryptoParamsAEADParametersWithOrgBouncycastleCryptoParamsKeyParameter:key withInt:macSize withByteArray:nonce withByteArray:associatedText];
}

- (OrgBouncycastleCryptoParamsKeyParameter *)getKey {
  return key_;
}

- (jint)getMacSize {
  return macSize_;
}

- (IOSByteArray *)getAssociatedText {
  return associatedText_;
}

- (IOSByteArray *)getNonce {
  return nonce_;
}

- (void)copyAllFieldsTo:(OrgBouncycastleCryptoParamsAEADParameters *)other {
  [super copyAllFieldsTo:other];
  other->associatedText_ = associatedText_;
  other->nonce_ = nonce_;
  other->key_ = key_;
  other->macSize_ = macSize_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsAEADParameters)
