//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/crypto/params/DHParameters.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/crypto/params/DHParameters.h"
#include "org/bouncycastle/crypto/params/DHValidationParameters.h"

__attribute__((unused)) static jint OrgBouncycastleCryptoParamsDHParameters_getDefaultMParamWithInt_(jint lParam);

@interface OrgBouncycastleCryptoParamsDHParameters () {
 @public
  JavaMathBigInteger *g_;
  JavaMathBigInteger *p_;
  JavaMathBigInteger *q_;
  JavaMathBigInteger *j_;
  jint m_;
  jint l_;
  OrgBouncycastleCryptoParamsDHValidationParameters *validation_;
}

+ (jint)getDefaultMParamWithInt:(jint)lParam;
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsDHParameters, g_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsDHParameters, p_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsDHParameters, q_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsDHParameters, j_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsDHParameters, validation_, OrgBouncycastleCryptoParamsDHValidationParameters *)

@implementation OrgBouncycastleCryptoParamsDHParameters

+ (jint)getDefaultMParamWithInt:(jint)lParam {
  return OrgBouncycastleCryptoParamsDHParameters_getDefaultMParamWithInt_(lParam);
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g {
  return [self initOrgBouncycastleCryptoParamsDHParametersWithJavaMathBigInteger:p withJavaMathBigInteger:g withJavaMathBigInteger:nil withInt:0];
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g
                    withJavaMathBigInteger:(JavaMathBigInteger *)q {
  return [self initOrgBouncycastleCryptoParamsDHParametersWithJavaMathBigInteger:p withJavaMathBigInteger:g withJavaMathBigInteger:q withInt:0];
}

- (instancetype)initOrgBouncycastleCryptoParamsDHParametersWithJavaMathBigInteger:(JavaMathBigInteger *)p
                                                           withJavaMathBigInteger:(JavaMathBigInteger *)g
                                                           withJavaMathBigInteger:(JavaMathBigInteger *)q
                                                                          withInt:(jint)l {
  return [self initOrgBouncycastleCryptoParamsDHParametersWithJavaMathBigInteger:p withJavaMathBigInteger:g withJavaMathBigInteger:q withInt:OrgBouncycastleCryptoParamsDHParameters_getDefaultMParamWithInt_(l) withInt:l withJavaMathBigInteger:nil withOrgBouncycastleCryptoParamsDHValidationParameters:nil];
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g
                    withJavaMathBigInteger:(JavaMathBigInteger *)q
                                   withInt:(jint)l {
  return [self initOrgBouncycastleCryptoParamsDHParametersWithJavaMathBigInteger:p withJavaMathBigInteger:g withJavaMathBigInteger:q withInt:l];
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g
                    withJavaMathBigInteger:(JavaMathBigInteger *)q
                                   withInt:(jint)m
                                   withInt:(jint)l {
  return [self initOrgBouncycastleCryptoParamsDHParametersWithJavaMathBigInteger:p withJavaMathBigInteger:g withJavaMathBigInteger:q withInt:m withInt:l withJavaMathBigInteger:nil withOrgBouncycastleCryptoParamsDHValidationParameters:nil];
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g
                    withJavaMathBigInteger:(JavaMathBigInteger *)q
                    withJavaMathBigInteger:(JavaMathBigInteger *)j
withOrgBouncycastleCryptoParamsDHValidationParameters:(OrgBouncycastleCryptoParamsDHValidationParameters *)validation {
  return [self initOrgBouncycastleCryptoParamsDHParametersWithJavaMathBigInteger:p withJavaMathBigInteger:g withJavaMathBigInteger:q withInt:OrgBouncycastleCryptoParamsDHParameters_DEFAULT_MINIMUM_LENGTH withInt:0 withJavaMathBigInteger:j withOrgBouncycastleCryptoParamsDHValidationParameters:validation];
}

- (instancetype)initOrgBouncycastleCryptoParamsDHParametersWithJavaMathBigInteger:(JavaMathBigInteger *)p
                                                           withJavaMathBigInteger:(JavaMathBigInteger *)g
                                                           withJavaMathBigInteger:(JavaMathBigInteger *)q
                                                                          withInt:(jint)m
                                                                          withInt:(jint)l
                                                           withJavaMathBigInteger:(JavaMathBigInteger *)j
                            withOrgBouncycastleCryptoParamsDHValidationParameters:(OrgBouncycastleCryptoParamsDHValidationParameters *)validation {
  if (self = [super init]) {
    if (l != 0) {
      JavaMathBigInteger *bigL = JavaMathBigInteger_valueOfWithLong_(2LL ^ (l - 1));
      if ([((JavaMathBigInteger *) nil_chk(bigL)) compareToWithId:p] == 1) {
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"when l value specified, it must satisfy 2^(l-1) <= p"];
      }
      if (l < m) {
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"when l value specified, it may not be less than m value"];
      }
    }
    self->g_ = g;
    self->p_ = p;
    self->q_ = q;
    self->m_ = m;
    self->l_ = l;
    self->j_ = j;
    self->validation_ = validation;
  }
  return self;
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g
                    withJavaMathBigInteger:(JavaMathBigInteger *)q
                                   withInt:(jint)m
                                   withInt:(jint)l
                    withJavaMathBigInteger:(JavaMathBigInteger *)j
withOrgBouncycastleCryptoParamsDHValidationParameters:(OrgBouncycastleCryptoParamsDHValidationParameters *)validation {
  return [self initOrgBouncycastleCryptoParamsDHParametersWithJavaMathBigInteger:p withJavaMathBigInteger:g withJavaMathBigInteger:q withInt:m withInt:l withJavaMathBigInteger:j withOrgBouncycastleCryptoParamsDHValidationParameters:validation];
}

- (JavaMathBigInteger *)getP {
  return p_;
}

- (JavaMathBigInteger *)getG {
  return g_;
}

- (JavaMathBigInteger *)getQ {
  return q_;
}

- (JavaMathBigInteger *)getJ {
  return j_;
}

- (jint)getM {
  return m_;
}

- (jint)getL {
  return l_;
}

- (OrgBouncycastleCryptoParamsDHValidationParameters *)getValidationParameters {
  return validation_;
}

- (jboolean)isEqual:(id)obj {
  if (!([obj isKindOfClass:[OrgBouncycastleCryptoParamsDHParameters class]])) {
    return NO;
  }
  OrgBouncycastleCryptoParamsDHParameters *pm = (OrgBouncycastleCryptoParamsDHParameters *) check_class_cast(obj, [OrgBouncycastleCryptoParamsDHParameters class]);
  if ([self getQ] != nil) {
    if (![((JavaMathBigInteger *) nil_chk([self getQ])) isEqual:[((OrgBouncycastleCryptoParamsDHParameters *) nil_chk(pm)) getQ]]) {
      return NO;
    }
  }
  else {
    if ([((OrgBouncycastleCryptoParamsDHParameters *) nil_chk(pm)) getQ] != nil) {
      return NO;
    }
  }
  return [((JavaMathBigInteger *) nil_chk([((OrgBouncycastleCryptoParamsDHParameters *) nil_chk(pm)) getP])) isEqual:p_] && [((JavaMathBigInteger *) nil_chk([pm getG])) isEqual:g_];
}

- (NSUInteger)hash {
  return ((jint) [((JavaMathBigInteger *) nil_chk([self getP])) hash]) ^ ((jint) [((JavaMathBigInteger *) nil_chk([self getG])) hash]) ^ ([self getQ] != nil ? ((jint) [((JavaMathBigInteger *) nil_chk([self getQ])) hash]) : 0);
}

- (void)copyAllFieldsTo:(OrgBouncycastleCryptoParamsDHParameters *)other {
  [super copyAllFieldsTo:other];
  other->g_ = g_;
  other->p_ = p_;
  other->q_ = q_;
  other->j_ = j_;
  other->m_ = m_;
  other->l_ = l_;
  other->validation_ = validation_;
}

@end

jint OrgBouncycastleCryptoParamsDHParameters_getDefaultMParamWithInt_(jint lParam) {
  OrgBouncycastleCryptoParamsDHParameters_init();
  if (lParam == 0) {
    return OrgBouncycastleCryptoParamsDHParameters_DEFAULT_MINIMUM_LENGTH;
  }
  return lParam < OrgBouncycastleCryptoParamsDHParameters_DEFAULT_MINIMUM_LENGTH ? lParam : OrgBouncycastleCryptoParamsDHParameters_DEFAULT_MINIMUM_LENGTH;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsDHParameters)
