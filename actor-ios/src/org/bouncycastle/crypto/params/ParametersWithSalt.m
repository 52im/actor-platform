//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/crypto/params/ParametersWithSalt.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/params/ParametersWithSalt.h"

@interface OrgBouncycastleCryptoParamsParametersWithSalt () {
 @public
  IOSByteArray *salt_;
  id<OrgBouncycastleCryptoCipherParameters> parameters_;
}
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsParametersWithSalt, salt_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsParametersWithSalt, parameters_, id<OrgBouncycastleCryptoCipherParameters>)

@implementation OrgBouncycastleCryptoParamsParametersWithSalt

- (instancetype)initWithOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)parameters
                                                withByteArray:(IOSByteArray *)salt {
  return [self initOrgBouncycastleCryptoParamsParametersWithSaltWithOrgBouncycastleCryptoCipherParameters:parameters withByteArray:salt withInt:0 withInt:((IOSByteArray *) nil_chk(salt))->size_];
}

- (instancetype)initOrgBouncycastleCryptoParamsParametersWithSaltWithOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)parameters
                                                                                             withByteArray:(IOSByteArray *)salt
                                                                                                   withInt:(jint)saltOff
                                                                                                   withInt:(jint)saltLen {
  if (self = [super init]) {
    self->salt_ = [IOSByteArray newArrayWithLength:saltLen];
    self->parameters_ = parameters;
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(salt, saltOff, self->salt_, 0, saltLen);
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)parameters
                                                withByteArray:(IOSByteArray *)salt
                                                      withInt:(jint)saltOff
                                                      withInt:(jint)saltLen {
  return [self initOrgBouncycastleCryptoParamsParametersWithSaltWithOrgBouncycastleCryptoCipherParameters:parameters withByteArray:salt withInt:saltOff withInt:saltLen];
}

- (IOSByteArray *)getSalt {
  return salt_;
}

- (id<OrgBouncycastleCryptoCipherParameters>)getParameters {
  return parameters_;
}

- (void)copyAllFieldsTo:(OrgBouncycastleCryptoParamsParametersWithSalt *)other {
  [super copyAllFieldsTo:other];
  other->salt_ = salt_;
  other->parameters_ = parameters_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsParametersWithSalt)
