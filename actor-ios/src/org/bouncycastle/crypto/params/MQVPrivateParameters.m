//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/org/bouncycastle/crypto/params/MQVPrivateParameters.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/params/ECPrivateKeyParameters.h"
#include "org/bouncycastle/crypto/params/ECPublicKeyParameters.h"
#include "org/bouncycastle/crypto/params/MQVPrivateParameters.h"

@interface OrgBouncycastleCryptoParamsMQVPrivateParameters () {
 @public
  OrgBouncycastleCryptoParamsECPrivateKeyParameters *staticPrivateKey_;
  OrgBouncycastleCryptoParamsECPrivateKeyParameters *ephemeralPrivateKey_;
  OrgBouncycastleCryptoParamsECPublicKeyParameters *ephemeralPublicKey_;
}
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsMQVPrivateParameters, staticPrivateKey_, OrgBouncycastleCryptoParamsECPrivateKeyParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsMQVPrivateParameters, ephemeralPrivateKey_, OrgBouncycastleCryptoParamsECPrivateKeyParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsMQVPrivateParameters, ephemeralPublicKey_, OrgBouncycastleCryptoParamsECPublicKeyParameters *)

@implementation OrgBouncycastleCryptoParamsMQVPrivateParameters

- (instancetype)initWithOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)staticPrivateKey
                    withOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)ephemeralPrivateKey {
  return [self initOrgBouncycastleCryptoParamsMQVPrivateParametersWithOrgBouncycastleCryptoParamsECPrivateKeyParameters:staticPrivateKey withOrgBouncycastleCryptoParamsECPrivateKeyParameters:ephemeralPrivateKey withOrgBouncycastleCryptoParamsECPublicKeyParameters:nil];
}

- (instancetype)initOrgBouncycastleCryptoParamsMQVPrivateParametersWithOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)staticPrivateKey
                                                                   withOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)ephemeralPrivateKey
                                                                    withOrgBouncycastleCryptoParamsECPublicKeyParameters:(OrgBouncycastleCryptoParamsECPublicKeyParameters *)ephemeralPublicKey {
  if (self = [super init]) {
    self->staticPrivateKey_ = staticPrivateKey;
    self->ephemeralPrivateKey_ = ephemeralPrivateKey;
    self->ephemeralPublicKey_ = ephemeralPublicKey;
  }
  return self;
}

- (instancetype)initWithOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)staticPrivateKey
                    withOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)ephemeralPrivateKey
                     withOrgBouncycastleCryptoParamsECPublicKeyParameters:(OrgBouncycastleCryptoParamsECPublicKeyParameters *)ephemeralPublicKey {
  return [self initOrgBouncycastleCryptoParamsMQVPrivateParametersWithOrgBouncycastleCryptoParamsECPrivateKeyParameters:staticPrivateKey withOrgBouncycastleCryptoParamsECPrivateKeyParameters:ephemeralPrivateKey withOrgBouncycastleCryptoParamsECPublicKeyParameters:ephemeralPublicKey];
}

- (OrgBouncycastleCryptoParamsECPrivateKeyParameters *)getStaticPrivateKey {
  return staticPrivateKey_;
}

- (OrgBouncycastleCryptoParamsECPrivateKeyParameters *)getEphemeralPrivateKey {
  return ephemeralPrivateKey_;
}

- (OrgBouncycastleCryptoParamsECPublicKeyParameters *)getEphemeralPublicKey {
  return ephemeralPublicKey_;
}

- (void)copyAllFieldsTo:(OrgBouncycastleCryptoParamsMQVPrivateParameters *)other {
  [super copyAllFieldsTo:other];
  other->staticPrivateKey_ = staticPrivateKey_;
  other->ephemeralPrivateKey_ = ephemeralPrivateKey_;
  other->ephemeralPublicKey_ = ephemeralPublicKey_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsMQVPrivateParameters)
