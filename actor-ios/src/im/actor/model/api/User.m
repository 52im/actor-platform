//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/api/User.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/Avatar.h"
#include "im/actor/model/api/Sex.h"
#include "im/actor/model/api/User.h"
#include "im/actor/model/api/UserState.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "java/io/IOException.h"
#include "java/util/List.h"

@interface ImActorModelApiUser () {
 @public
  jint id__;
  jlong accessHash_;
  NSString *name_;
  NSString *localName_;
  ImActorModelApiSexEnum *sex_;
  id<JavaUtilList> keyHashes_;
  jlong phone_;
  ImActorModelApiAvatar *avatar_;
  id<JavaUtilList> contacts_;
  ImActorModelApiUserStateEnum *userState_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelApiUser, name_, NSString *)
J2OBJC_FIELD_SETTER(ImActorModelApiUser, localName_, NSString *)
J2OBJC_FIELD_SETTER(ImActorModelApiUser, sex_, ImActorModelApiSexEnum *)
J2OBJC_FIELD_SETTER(ImActorModelApiUser, keyHashes_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ImActorModelApiUser, avatar_, ImActorModelApiAvatar *)
J2OBJC_FIELD_SETTER(ImActorModelApiUser, contacts_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ImActorModelApiUser, userState_, ImActorModelApiUserStateEnum *)

@implementation ImActorModelApiUser

- (instancetype)initWithInt:(jint)id_
                   withLong:(jlong)accessHash
               withNSString:(NSString *)name
               withNSString:(NSString *)localName
 withImActorModelApiSexEnum:(ImActorModelApiSexEnum *)sex
           withJavaUtilList:(id<JavaUtilList>)keyHashes
                   withLong:(jlong)phone
  withImActorModelApiAvatar:(ImActorModelApiAvatar *)avatar
           withJavaUtilList:(id<JavaUtilList>)contacts
withImActorModelApiUserStateEnum:(ImActorModelApiUserStateEnum *)userState {
  if (self = [super init]) {
    self->id__ = id_;
    self->accessHash_ = accessHash;
    self->name_ = name;
    self->localName_ = localName;
    self->sex_ = sex;
    self->keyHashes_ = keyHashes;
    self->phone_ = phone;
    self->avatar_ = avatar;
    self->contacts_ = contacts;
    self->userState_ = userState;
  }
  return self;
}

- (instancetype)init {
  return [super init];
}

- (jint)getId {
  return self->id__;
}

- (jlong)getAccessHash {
  return self->accessHash_;
}

- (NSString *)getName {
  return self->name_;
}

- (NSString *)getLocalName {
  return self->localName_;
}

- (ImActorModelApiSexEnum *)getSex {
  return self->sex_;
}

- (id<JavaUtilList>)getKeyHashes {
  return self->keyHashes_;
}

- (jlong)getPhone {
  return self->phone_;
}

- (ImActorModelApiAvatar *)getAvatar {
  return self->avatar_;
}

- (id<JavaUtilList>)getContacts {
  return self->contacts_;
}

- (ImActorModelApiUserStateEnum *)getUserState {
  return self->userState_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->id__ = [((BSBserValues *) nil_chk(values)) getIntWithInt:1];
  self->accessHash_ = [values getLongWithInt:2];
  self->name_ = [values getStringWithInt:3];
  self->localName_ = [values optStringWithInt:4];
  jint val_sex = [values getIntWithInt:5 withInt:0];
  if (val_sex != 0) {
    self->sex_ = ImActorModelApiSexEnum_parseWithInt_(val_sex);
  }
  self->keyHashes_ = [values getRepeatedLongWithInt:6];
  self->phone_ = [values getLongWithInt:7];
  self->avatar_ = [values optObjWithInt:8 withBSBserObject:[[ImActorModelApiAvatar alloc] init]];
  self->contacts_ = [values getRepeatedIntWithInt:9];
  self->userState_ = ImActorModelApiUserStateEnum_parseWithInt_([values getIntWithInt:11]);
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->id__];
  [writer writeLongWithInt:2 withLong:self->accessHash_];
  if (self->name_ == nil) {
    @throw [[JavaIoIOException alloc] init];
  }
  [writer writeStringWithInt:3 withNSString:self->name_];
  if (self->localName_ != nil) {
    [writer writeStringWithInt:4 withNSString:self->localName_];
  }
  if (self->sex_ != nil) {
    [writer writeIntWithInt:5 withInt:[self->sex_ getValue]];
  }
  [writer writeRepeatedLongWithInt:6 withJavaUtilList:self->keyHashes_];
  [writer writeLongWithInt:7 withLong:self->phone_];
  if (self->avatar_ != nil) {
    [writer writeObjectWithInt:8 withBSBserObject:self->avatar_];
  }
  [writer writeRepeatedIntWithInt:9 withJavaUtilList:self->contacts_];
  if (self->userState_ == nil) {
    @throw [[JavaIoIOException alloc] init];
  }
  [writer writeIntWithInt:11 withInt:[((ImActorModelApiUserStateEnum *) nil_chk(self->userState_)) getValue]];
}

- (void)copyAllFieldsTo:(ImActorModelApiUser *)other {
  [super copyAllFieldsTo:other];
  other->id__ = id__;
  other->accessHash_ = accessHash_;
  other->name_ = name_;
  other->localName_ = localName_;
  other->sex_ = sex_;
  other->keyHashes_ = keyHashes_;
  other->phone_ = phone_;
  other->avatar_ = avatar_;
  other->contacts_ = contacts_;
  other->userState_ = userState_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelApiUser)
