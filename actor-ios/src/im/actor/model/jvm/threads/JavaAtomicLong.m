//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/jvm/threads/JavaAtomicLong.java
//

#include "J2ObjC_source.h"
#include "im/actor/model/jvm/threads/JavaAtomicLong.h"
#include "java/util/concurrent/atomic/AtomicLong.h"

@implementation ImActorModelJvmThreadsJavaAtomicLong

- (instancetype)initWithLong:(jlong)value {
  if (self = [super init]) {
    atomicLong_ = [[JavaUtilConcurrentAtomicAtomicLong alloc] initWithLong:value];
  }
  return self;
}

- (jlong)get {
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(atomicLong_)) get];
}

- (jlong)incrementAndGet {
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(atomicLong_)) incrementAndGet];
}

- (jlong)getAndIncrement {
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(atomicLong_)) getAndIncrement];
}

- (void)setWithLong:(jlong)v {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(atomicLong_)) setWithLong:v];
}

- (void)copyAllFieldsTo:(ImActorModelJvmThreadsJavaAtomicLong *)other {
  [super copyAllFieldsTo:other];
  other->atomicLong_ = atomicLong_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelJvmThreadsJavaAtomicLong)
