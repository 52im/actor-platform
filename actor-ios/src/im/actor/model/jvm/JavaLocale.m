//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/jvm/JavaLocale.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/jvm/JavaLocale.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/ClassLoader.h"
#include "java/util/HashMap.h"
#include "java/util/Properties.h"
#include "java/util/Set.h"

__attribute__((unused)) static void AMJavaLocale_loadPartWithNSString_withNSString_(AMJavaLocale *self, NSString *name, NSString *locale);

@interface AMJavaLocale () {
 @public
  JavaUtilHashMap *items_;
}

- (void)loadPartWithNSString:(NSString *)name
                withNSString:(NSString *)locale;
@end

J2OBJC_FIELD_SETTER(AMJavaLocale, items_, JavaUtilHashMap *)

@implementation AMJavaLocale

- (instancetype)initWithNSString:(NSString *)name {
  if (self = [super init]) {
    items_ = [[JavaUtilHashMap alloc] init];
    AMJavaLocale_loadPartWithNSString_withNSString_(self, @"AppText", name);
    AMJavaLocale_loadPartWithNSString_withNSString_(self, @"Months", name);
  }
  return self;
}

- (void)loadPartWithNSString:(NSString *)name
                withNSString:(NSString *)locale {
  AMJavaLocale_loadPartWithNSString_withNSString_(self, name, locale);
}

- (JavaUtilHashMap *)loadLocale {
  return items_;
}

- (jboolean)is24Hours {
  return YES;
}

- (void)copyAllFieldsTo:(AMJavaLocale *)other {
  [super copyAllFieldsTo:other];
  other->items_ = items_;
}

@end

void AMJavaLocale_loadPartWithNSString_withNSString_(AMJavaLocale *self, NSString *name, NSString *locale) {
  NSString *fileName = [((NSString *) nil_chk(locale)) isEqual:@"En"] ? JreStrcat("$$", name, @".properties") : JreStrcat("$$$", name, locale, @".properties");
  JavaUtilProperties *properties = [[JavaUtilProperties alloc] init];
  @try {
    [properties load__WithJavaIoInputStream:[((JavaLangClassLoader *) nil_chk([[self getClass] getClassLoader])) getResourceAsStreamWithNSString:fileName]];
  }
  @catch (JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
  }
  for (id __strong key in nil_chk([properties keySet])) {
    NSString *sKey = (NSString *) check_class_cast(key, [NSString class]);
    NSString *sValue = (NSString *) check_class_cast([properties getWithId:key], [NSString class]);
    (void) [((JavaUtilHashMap *) nil_chk(self->items_)) putWithId:sKey withId:sValue];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMJavaLocale)
