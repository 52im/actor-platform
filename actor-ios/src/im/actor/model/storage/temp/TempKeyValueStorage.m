//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/storage/temp/TempKeyValueStorage.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/storage/KeyValueRecord.h"
#include "im/actor/model/storage/temp/TempKeyValueStorage.h"
#include "java/lang/Long.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"

@interface ImActorModelStorageTempTempKeyValueStorage () {
 @public
  JavaUtilHashMap *items_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelStorageTempTempKeyValueStorage, items_, JavaUtilHashMap *)

@implementation ImActorModelStorageTempTempKeyValueStorage

- (void)addOrUpdateItemWithLong:(jlong)id_
                  withByteArray:(IOSByteArray *)data {
  @synchronized(self) {
    (void) [((JavaUtilHashMap *) nil_chk(items_)) putWithId:JavaLangLong_valueOfWithLong_(id_) withId:data];
  }
}

- (void)addOrUpdateItemsWithJavaUtilList:(id<JavaUtilList>)values {
  @synchronized(self) {
    for (AMKeyValueRecord * __strong r in nil_chk(values)) {
      (void) [((JavaUtilHashMap *) nil_chk(items_)) putWithId:JavaLangLong_valueOfWithLong_([((AMKeyValueRecord *) nil_chk(r)) getId]) withId:[r getData]];
    }
  }
}

- (void)removeItemWithLong:(jlong)id_ {
  @synchronized(self) {
    (void) [((JavaUtilHashMap *) nil_chk(items_)) removeWithId:JavaLangLong_valueOfWithLong_(id_)];
  }
}

- (void)removeItemsWithLongArray:(IOSLongArray *)ids {
  @synchronized(self) {
    {
      IOSLongArray *a__ = ids;
      jlong const *b__ = ((IOSLongArray *) nil_chk(a__))->buffer_;
      jlong const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        jlong l = *b__++;
        (void) [((JavaUtilHashMap *) nil_chk(items_)) removeWithId:JavaLangLong_valueOfWithLong_(l)];
      }
    }
  }
}

- (void)clear {
  @synchronized(self) {
    [((JavaUtilHashMap *) nil_chk(items_)) clear];
  }
}

- (IOSByteArray *)getValueWithLong:(jlong)id_ {
  @synchronized(self) {
    if ([((JavaUtilHashMap *) nil_chk(items_)) containsKeyWithId:JavaLangLong_valueOfWithLong_(id_)]) {
      return [items_ getWithId:JavaLangLong_valueOfWithLong_(id_)];
    }
    else {
      return nil;
    }
  }
}

- (instancetype)init {
  if (self = [super init]) {
    items_ = [[JavaUtilHashMap alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(ImActorModelStorageTempTempKeyValueStorage *)other {
  [super copyAllFieldsTo:other];
  other->items_ = items_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelStorageTempTempKeyValueStorage)
