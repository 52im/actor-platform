//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/entity/AvatarImage.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/entity/AvatarImage.h"
#include "im/actor/model/entity/FileLocation.h"
#include "java/io/IOException.h"

@interface AMAvatarImage () {
 @public
  jint width_;
  jint height_;
  AMFileLocation *fileLocation_;
}
- (instancetype)init;
@end

J2OBJC_FIELD_SETTER(AMAvatarImage, fileLocation_, AMFileLocation *)

@implementation AMAvatarImage

+ (AMAvatarImage *)fromBytesWithByteArray:(IOSByteArray *)data {
  return AMAvatarImage_fromBytesWithByteArray_(data);
}

- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height
         withAMFileLocation:(AMFileLocation *)fileLocation {
  if (self = [super init]) {
    self->width_ = width;
    self->height_ = height;
    self->fileLocation_ = fileLocation;
  }
  return self;
}

- (instancetype)init {
  return [super init];
}

- (jint)getWidth {
  return width_;
}

- (jint)getHeight {
  return height_;
}

- (AMFileLocation *)getFileLocation {
  return fileLocation_;
}

- (jboolean)isEqual:(id)o {
  if (self == o) return YES;
  if (o == nil || [self getClass] != [o getClass]) return NO;
  AMAvatarImage *that = (AMAvatarImage *) check_class_cast(o, [AMAvatarImage class]);
  if (height_ != ((AMAvatarImage *) nil_chk(that))->height_) return NO;
  if (width_ != that->width_) return NO;
  if (![((AMFileLocation *) nil_chk(fileLocation_)) isEqual:that->fileLocation_]) return NO;
  return YES;
}

- (NSUInteger)hash {
  jint result = width_;
  result = 31 * result + height_;
  result = 31 * result + ((jint) [((AMFileLocation *) nil_chk(fileLocation_)) hash]);
  return result;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  width_ = [((BSBserValues *) nil_chk(values)) getIntWithInt:1];
  height_ = [values getIntWithInt:2];
  fileLocation_ = AMFileLocation_fromBytesWithByteArray_([values getBytesWithInt:3]);
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:width_];
  [writer writeIntWithInt:2 withInt:height_];
  [writer writeObjectWithInt:3 withBSBserObject:fileLocation_];
}

- (void)copyAllFieldsTo:(AMAvatarImage *)other {
  [super copyAllFieldsTo:other];
  other->width_ = width_;
  other->height_ = height_;
  other->fileLocation_ = fileLocation_;
}

@end

AMAvatarImage *AMAvatarImage_fromBytesWithByteArray_(IOSByteArray *data) {
  AMAvatarImage_init();
  return ((AMAvatarImage *) BSBser_parseWithBSBserObject_withByteArray_([[AMAvatarImage alloc] init], data));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMAvatarImage)
