//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/crypto/bouncycastle/utils/Pack.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/crypto/bouncycastle/utils/Pack.h"

@implementation ImActorModelCryptoBouncycastleUtilsPack

+ (jint)bigEndianToIntWithByteArray:(IOSByteArray *)bs
                            withInt:(jint)off {
  return ImActorModelCryptoBouncycastleUtilsPack_bigEndianToIntWithByteArray_withInt_(bs, off);
}

+ (void)bigEndianToIntWithByteArray:(IOSByteArray *)bs
                            withInt:(jint)off
                       withIntArray:(IOSIntArray *)ns {
  ImActorModelCryptoBouncycastleUtilsPack_bigEndianToIntWithByteArray_withInt_withIntArray_(bs, off, ns);
}

+ (IOSByteArray *)intToBigEndianWithInt:(jint)n {
  return ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithInt_(n);
}

+ (void)intToBigEndianWithInt:(jint)n
                withByteArray:(IOSByteArray *)bs
                      withInt:(jint)off {
  ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithInt_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)intToBigEndianWithIntArray:(IOSIntArray *)ns {
  return ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithIntArray_(ns);
}

+ (void)intToBigEndianWithIntArray:(IOSIntArray *)ns
                     withByteArray:(IOSByteArray *)bs
                           withInt:(jint)off {
  ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithIntArray_withByteArray_withInt_(ns, bs, off);
}

+ (jlong)bigEndianToLongWithByteArray:(IOSByteArray *)bs
                              withInt:(jint)off {
  return ImActorModelCryptoBouncycastleUtilsPack_bigEndianToLongWithByteArray_withInt_(bs, off);
}

+ (void)bigEndianToLongWithByteArray:(IOSByteArray *)bs
                             withInt:(jint)off
                       withLongArray:(IOSLongArray *)ns {
  ImActorModelCryptoBouncycastleUtilsPack_bigEndianToLongWithByteArray_withInt_withLongArray_(bs, off, ns);
}

+ (IOSByteArray *)longToBigEndianWithLong:(jlong)n {
  return ImActorModelCryptoBouncycastleUtilsPack_longToBigEndianWithLong_(n);
}

+ (void)longToBigEndianWithLong:(jlong)n
                  withByteArray:(IOSByteArray *)bs
                        withInt:(jint)off {
  ImActorModelCryptoBouncycastleUtilsPack_longToBigEndianWithLong_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)longToBigEndianWithLongArray:(IOSLongArray *)ns {
  return ImActorModelCryptoBouncycastleUtilsPack_longToBigEndianWithLongArray_(ns);
}

+ (void)longToBigEndianWithLongArray:(IOSLongArray *)ns
                       withByteArray:(IOSByteArray *)bs
                             withInt:(jint)off {
  ImActorModelCryptoBouncycastleUtilsPack_longToBigEndianWithLongArray_withByteArray_withInt_(ns, bs, off);
}

+ (jint)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)off {
  return ImActorModelCryptoBouncycastleUtilsPack_littleEndianToIntWithByteArray_withInt_(bs, off);
}

+ (void)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)off
                          withIntArray:(IOSIntArray *)ns {
  ImActorModelCryptoBouncycastleUtilsPack_littleEndianToIntWithByteArray_withInt_withIntArray_(bs, off, ns);
}

+ (void)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)bOff
                          withIntArray:(IOSIntArray *)ns
                               withInt:(jint)nOff
                               withInt:(jint)count {
  ImActorModelCryptoBouncycastleUtilsPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(bs, bOff, ns, nOff, count);
}

+ (IOSByteArray *)intToLittleEndianWithInt:(jint)n {
  return ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithInt_(n);
}

+ (void)intToLittleEndianWithInt:(jint)n
                   withByteArray:(IOSByteArray *)bs
                         withInt:(jint)off {
  ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithInt_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)intToLittleEndianWithIntArray:(IOSIntArray *)ns {
  return ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithIntArray_(ns);
}

+ (void)intToLittleEndianWithIntArray:(IOSIntArray *)ns
                        withByteArray:(IOSByteArray *)bs
                              withInt:(jint)off {
  ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithIntArray_withByteArray_withInt_(ns, bs, off);
}

+ (jlong)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                 withInt:(jint)off {
  return ImActorModelCryptoBouncycastleUtilsPack_littleEndianToLongWithByteArray_withInt_(bs, off);
}

+ (void)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                withInt:(jint)off
                          withLongArray:(IOSLongArray *)ns {
  ImActorModelCryptoBouncycastleUtilsPack_littleEndianToLongWithByteArray_withInt_withLongArray_(bs, off, ns);
}

+ (IOSByteArray *)longToLittleEndianWithLong:(jlong)n {
  return ImActorModelCryptoBouncycastleUtilsPack_longToLittleEndianWithLong_(n);
}

+ (void)longToLittleEndianWithLong:(jlong)n
                     withByteArray:(IOSByteArray *)bs
                           withInt:(jint)off {
  ImActorModelCryptoBouncycastleUtilsPack_longToLittleEndianWithLong_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)longToLittleEndianWithLongArray:(IOSLongArray *)ns {
  return ImActorModelCryptoBouncycastleUtilsPack_longToLittleEndianWithLongArray_(ns);
}

+ (void)longToLittleEndianWithLongArray:(IOSLongArray *)ns
                          withByteArray:(IOSByteArray *)bs
                                withInt:(jint)off {
  ImActorModelCryptoBouncycastleUtilsPack_longToLittleEndianWithLongArray_withByteArray_withInt_(ns, bs, off);
}

- (instancetype)init {
  return [super init];
}

@end

jint ImActorModelCryptoBouncycastleUtilsPack_bigEndianToIntWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  jint n = LShift32(IOSByteArray_Get(nil_chk(bs), off), 24);
  n |= LShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 16);
  n |= LShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  n |= (IOSByteArray_Get(bs, ++off) & (jint) 0xff);
  return n;
}

void ImActorModelCryptoBouncycastleUtilsPack_bigEndianToIntWithByteArray_withInt_withIntArray_(IOSByteArray *bs, jint off, IOSIntArray *ns) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    *IOSIntArray_GetRef(ns, i) = ImActorModelCryptoBouncycastleUtilsPack_bigEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
}

IOSByteArray *ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithInt_(jint n) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4];
  ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithInt_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithInt_withByteArray_withInt_(jint n, IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) (URShift32(n, 24));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (URShift32(n, 16));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (URShift32(n, 8));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (n);
}

IOSByteArray *ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithIntArray_(IOSIntArray *ns) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4 * ((IOSIntArray *) nil_chk(ns))->size_];
  ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithIntArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithIntArray_withByteArray_withInt_(IOSIntArray *ns, IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(ns, i), bs, off);
    off += 4;
  }
}

jlong ImActorModelCryptoBouncycastleUtilsPack_bigEndianToLongWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  jint hi = ImActorModelCryptoBouncycastleUtilsPack_bigEndianToIntWithByteArray_withInt_(bs, off);
  jint lo = ImActorModelCryptoBouncycastleUtilsPack_bigEndianToIntWithByteArray_withInt_(bs, off + 4);
  return (LShift64((jlong) (hi & (jlong) 0xffffffffLL), 32)) | (jlong) (lo & (jlong) 0xffffffffLL);
}

void ImActorModelCryptoBouncycastleUtilsPack_bigEndianToLongWithByteArray_withInt_withLongArray_(IOSByteArray *bs, jint off, IOSLongArray *ns) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    *IOSLongArray_GetRef(ns, i) = ImActorModelCryptoBouncycastleUtilsPack_bigEndianToLongWithByteArray_withInt_(bs, off);
    off += 8;
  }
}

IOSByteArray *ImActorModelCryptoBouncycastleUtilsPack_longToBigEndianWithLong_(jlong n) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8];
  ImActorModelCryptoBouncycastleUtilsPack_longToBigEndianWithLong_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void ImActorModelCryptoBouncycastleUtilsPack_longToBigEndianWithLong_withByteArray_withInt_(jlong n, IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithInt_withByteArray_withInt_((jint) (URShift64(n, 32)), bs, off);
  ImActorModelCryptoBouncycastleUtilsPack_intToBigEndianWithInt_withByteArray_withInt_((jint) (n & (jlong) 0xffffffffLL), bs, off + 4);
}

IOSByteArray *ImActorModelCryptoBouncycastleUtilsPack_longToBigEndianWithLongArray_(IOSLongArray *ns) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8 * ((IOSLongArray *) nil_chk(ns))->size_];
  ImActorModelCryptoBouncycastleUtilsPack_longToBigEndianWithLongArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void ImActorModelCryptoBouncycastleUtilsPack_longToBigEndianWithLongArray_withByteArray_withInt_(IOSLongArray *ns, IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    ImActorModelCryptoBouncycastleUtilsPack_longToBigEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(ns, i), bs, off);
    off += 8;
  }
}

jint ImActorModelCryptoBouncycastleUtilsPack_littleEndianToIntWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  jint n = IOSByteArray_Get(nil_chk(bs), off) & (jint) 0xff;
  n |= LShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  n |= LShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 16);
  n |= LShift32(IOSByteArray_Get(bs, ++off), 24);
  return n;
}

void ImActorModelCryptoBouncycastleUtilsPack_littleEndianToIntWithByteArray_withInt_withIntArray_(IOSByteArray *bs, jint off, IOSIntArray *ns) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    *IOSIntArray_GetRef(ns, i) = ImActorModelCryptoBouncycastleUtilsPack_littleEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
}

void ImActorModelCryptoBouncycastleUtilsPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(IOSByteArray *bs, jint bOff, IOSIntArray *ns, jint nOff, jint count) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  for (jint i = 0; i < count; ++i) {
    *IOSIntArray_GetRef(nil_chk(ns), nOff + i) = ImActorModelCryptoBouncycastleUtilsPack_littleEndianToIntWithByteArray_withInt_(bs, bOff);
    bOff += 4;
  }
}

IOSByteArray *ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithInt_(jint n) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4];
  ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithInt_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithInt_withByteArray_withInt_(jint n, IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) (n);
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (URShift32(n, 8));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (URShift32(n, 16));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (URShift32(n, 24));
}

IOSByteArray *ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithIntArray_(IOSIntArray *ns) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4 * ((IOSIntArray *) nil_chk(ns))->size_];
  ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithIntArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithIntArray_withByteArray_withInt_(IOSIntArray *ns, IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(ns, i), bs, off);
    off += 4;
  }
}

jlong ImActorModelCryptoBouncycastleUtilsPack_littleEndianToLongWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  jint lo = ImActorModelCryptoBouncycastleUtilsPack_littleEndianToIntWithByteArray_withInt_(bs, off);
  jint hi = ImActorModelCryptoBouncycastleUtilsPack_littleEndianToIntWithByteArray_withInt_(bs, off + 4);
  return (LShift64((jlong) (hi & (jlong) 0xffffffffLL), 32)) | (jlong) (lo & (jlong) 0xffffffffLL);
}

void ImActorModelCryptoBouncycastleUtilsPack_littleEndianToLongWithByteArray_withInt_withLongArray_(IOSByteArray *bs, jint off, IOSLongArray *ns) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    *IOSLongArray_GetRef(ns, i) = ImActorModelCryptoBouncycastleUtilsPack_littleEndianToLongWithByteArray_withInt_(bs, off);
    off += 8;
  }
}

IOSByteArray *ImActorModelCryptoBouncycastleUtilsPack_longToLittleEndianWithLong_(jlong n) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8];
  ImActorModelCryptoBouncycastleUtilsPack_longToLittleEndianWithLong_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void ImActorModelCryptoBouncycastleUtilsPack_longToLittleEndianWithLong_withByteArray_withInt_(jlong n, IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithInt_withByteArray_withInt_((jint) (n & (jlong) 0xffffffffLL), bs, off);
  ImActorModelCryptoBouncycastleUtilsPack_intToLittleEndianWithInt_withByteArray_withInt_((jint) (URShift64(n, 32)), bs, off + 4);
}

IOSByteArray *ImActorModelCryptoBouncycastleUtilsPack_longToLittleEndianWithLongArray_(IOSLongArray *ns) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8 * ((IOSLongArray *) nil_chk(ns))->size_];
  ImActorModelCryptoBouncycastleUtilsPack_longToLittleEndianWithLongArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void ImActorModelCryptoBouncycastleUtilsPack_longToLittleEndianWithLongArray_withByteArray_withInt_(IOSLongArray *ns, IOSByteArray *bs, jint off) {
  ImActorModelCryptoBouncycastleUtilsPack_init();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    ImActorModelCryptoBouncycastleUtilsPack_longToLittleEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(ns, i), bs, off);
    off += 8;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelCryptoBouncycastleUtilsPack)
