//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/modules/notifications/PendingStorage.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/modules/notifications/PendingNotification.h"
#include "im/actor/model/modules/notifications/PendingStorage.h"
#include "java/io/IOException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ImActorModelModulesNotificationsPendingStorage () {
 @public
  id<JavaUtilList> notifications_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesNotificationsPendingStorage, notifications_, id<JavaUtilList>)

@implementation ImActorModelModulesNotificationsPendingStorage

+ (ImActorModelModulesNotificationsPendingStorage *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ImActorModelModulesNotificationsPendingStorage_fromBytesWithByteArray_(data);
}

- (instancetype)init {
  if (self = [super init]) {
    notifications_ = [[JavaUtilArrayList alloc] init];
  }
  return self;
}

- (id<JavaUtilList>)getNotifications {
  return notifications_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  jint count = [((BSBserValues *) nil_chk(values)) getRepeatedCountWithInt:1];
  if (count > 0) {
    JavaUtilArrayList *stubs = [[JavaUtilArrayList alloc] init];
    for (jint i = 0; i < count; i++) {
      [stubs addWithId:[[ImActorModelModulesNotificationsPendingNotification alloc] init]];
    }
    notifications_ = [values getRepeatedObjWithInt:1 withJavaUtilList:stubs];
  }
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeRepeatedObjWithInt:1 withJavaUtilList:notifications_];
}

- (void)copyAllFieldsTo:(ImActorModelModulesNotificationsPendingStorage *)other {
  [super copyAllFieldsTo:other];
  other->notifications_ = notifications_;
}

@end

ImActorModelModulesNotificationsPendingStorage *ImActorModelModulesNotificationsPendingStorage_fromBytesWithByteArray_(IOSByteArray *data) {
  ImActorModelModulesNotificationsPendingStorage_init();
  return ((ImActorModelModulesNotificationsPendingStorage *) BSBser_parseWithBSBserObject_withByteArray_([[ImActorModelModulesNotificationsPendingStorage alloc] init], data));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesNotificationsPendingStorage)
