//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/modules/messages/PlainCursorActor.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/actors/Actor.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/droidkit/engine/SyncKeyValue.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/modules/Messages.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/messages/PlainCursorActor.h"
#include "im/actor/model/modules/messages/entity/PlainCursor.h"
#include "im/actor/model/modules/messages/entity/PlainCursorsStorage.h"
#include "java/io/IOException.h"
#include "java/lang/Math.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

__attribute__((unused)) static void ImActorModelModulesMessagesPlainCursorActor_onMovedWithAMPeer_withLong_(ImActorModelModulesMessagesPlainCursorActor *self, AMPeer *peer, jlong date);
__attribute__((unused)) static void ImActorModelModulesMessagesPlainCursorActor_saveCursorState(ImActorModelModulesMessagesPlainCursorActor *self);

@interface ImActorModelModulesMessagesPlainCursorActor () {
 @public
  ImActorModelModulesMessagesEntityPlainCursorsStorage *plainCursorsStorage_;
  JavaUtilHashSet *inProgress_;
  jlong cursorId_;
  ImActorModelDroidkitEngineSyncKeyValue *keyValue_;
}

- (void)saveCursorState;
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesPlainCursorActor, plainCursorsStorage_, ImActorModelModulesMessagesEntityPlainCursorsStorage *)
J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesPlainCursorActor, inProgress_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesPlainCursorActor, keyValue_, ImActorModelDroidkitEngineSyncKeyValue *)

@interface ImActorModelModulesMessagesPlainCursorActor_OnCompleted () {
 @public
  AMPeer *peer_;
  jlong date_;
}
- (instancetype)initWithAMPeer:(AMPeer *)peer
                      withLong:(jlong)date;
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesMessagesPlainCursorActor_OnCompleted, peer_, AMPeer *)

@implementation ImActorModelModulesMessagesPlainCursorActor

- (instancetype)initWithLong:(jlong)cursorId
withImActorModelModulesModules:(ImActorModelModulesModules *)messenger {
  if (self = [super initWithImActorModelModulesModules:messenger]) {
    inProgress_ = [[JavaUtilHashSet alloc] init];
    self->cursorId_ = cursorId;
    self->keyValue_ = [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk(messenger)) getMessagesModule])) getCursorStorage];
  }
  return self;
}

- (void)preStart {
  [super preStart];
  plainCursorsStorage_ = [[ImActorModelModulesMessagesEntityPlainCursorsStorage alloc] init];
  IOSByteArray *data = [((ImActorModelDroidkitEngineSyncKeyValue *) nil_chk(keyValue_)) getWithLong:cursorId_];
  if (data != nil) {
    @try {
      plainCursorsStorage_ = ImActorModelModulesMessagesEntityPlainCursorsStorage_fromBytesWithByteArray_(data);
    }
    @catch (JavaIoIOException *e) {
      [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    }
  }
  for (ImActorModelModulesMessagesEntityPlainCursor * __strong cursor in nil_chk([((ImActorModelModulesMessagesEntityPlainCursorsStorage *) nil_chk(plainCursorsStorage_)) getAllCursors])) {
    if ([((ImActorModelModulesMessagesEntityPlainCursor *) nil_chk(cursor)) getSortDate] < [cursor getPendingSortDate]) {
      [((JavaUtilHashSet *) nil_chk(inProgress_)) addWithId:[cursor getPeer]];
      [self performWithAMPeer:[cursor getPeer] withLong:[cursor getPendingSortDate]];
    }
  }
}

- (void)moveCursorWithAMPeer:(AMPeer *)peer
                    withLong:(jlong)date {
  ImActorModelModulesMessagesEntityPlainCursor *cursor = [((ImActorModelModulesMessagesEntityPlainCursorsStorage *) nil_chk(plainCursorsStorage_)) getCursorWithAMPeer:peer];
  if (date <= [((ImActorModelModulesMessagesEntityPlainCursor *) nil_chk(cursor)) getSortDate]) {
    return;
  }
  if (date <= [cursor getPendingSortDate]) {
    return;
  }
  date = JavaLangMath_maxWithLong_withLong_([cursor getPendingSortDate], date);
  [plainCursorsStorage_ putCursorWithImActorModelModulesMessagesEntityPlainCursor:[cursor changePendingSortDateWithLong:date]];
  ImActorModelModulesMessagesPlainCursorActor_saveCursorState(self);
  if ([((JavaUtilHashSet *) nil_chk(inProgress_)) containsWithId:peer]) {
    return;
  }
  [inProgress_ addWithId:peer];
  [self performWithAMPeer:peer withLong:date];
}

- (void)onMovedWithAMPeer:(AMPeer *)peer
                 withLong:(jlong)date {
  ImActorModelModulesMessagesPlainCursorActor_onMovedWithAMPeer_withLong_(self, peer, date);
}

- (void)onCompletedWithAMPeer:(AMPeer *)peer
                     withLong:(jlong)date {
  [((DKActorRef *) nil_chk([self self__])) sendWithId:[[ImActorModelModulesMessagesPlainCursorActor_OnCompleted alloc] initWithAMPeer:peer withLong:date]];
}

- (void)onErrorWithAMPeer:(AMPeer *)peer
                 withLong:(jlong)date {
}

- (void)saveCursorState {
  ImActorModelModulesMessagesPlainCursorActor_saveCursorState(self);
}

- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ImActorModelModulesMessagesPlainCursorActor_OnCompleted class]]) {
    ImActorModelModulesMessagesPlainCursorActor_OnCompleted *completed = (ImActorModelModulesMessagesPlainCursorActor_OnCompleted *) check_class_cast(message, [ImActorModelModulesMessagesPlainCursorActor_OnCompleted class]);
    ImActorModelModulesMessagesPlainCursorActor_onMovedWithAMPeer_withLong_(self, [((ImActorModelModulesMessagesPlainCursorActor_OnCompleted *) nil_chk(completed)) getPeer], [completed getDate]);
  }
  else {
    [self dropWithId:message];
  }
}

- (void)copyAllFieldsTo:(ImActorModelModulesMessagesPlainCursorActor *)other {
  [super copyAllFieldsTo:other];
  other->plainCursorsStorage_ = plainCursorsStorage_;
  other->inProgress_ = inProgress_;
  other->cursorId_ = cursorId_;
  other->keyValue_ = keyValue_;
}

@end

void ImActorModelModulesMessagesPlainCursorActor_onMovedWithAMPeer_withLong_(ImActorModelModulesMessagesPlainCursorActor *self, AMPeer *peer, jlong date) {
  [((JavaUtilHashSet *) nil_chk(self->inProgress_)) removeWithId:peer];
  ImActorModelModulesMessagesEntityPlainCursor *cursor = [((ImActorModelModulesMessagesEntityPlainCursorsStorage *) nil_chk(self->plainCursorsStorage_)) getCursorWithAMPeer:peer];
  cursor = [cursor changeSortDateWithLong:JavaLangMath_maxWithLong_withLong_(date, [((ImActorModelModulesMessagesEntityPlainCursor *) nil_chk(cursor)) getSortDate])];
  [self->plainCursorsStorage_ putCursorWithImActorModelModulesMessagesEntityPlainCursor:cursor];
  ImActorModelModulesMessagesPlainCursorActor_saveCursorState(self);
  if ([((ImActorModelModulesMessagesEntityPlainCursor *) nil_chk(cursor)) getSortDate] < [cursor getPendingSortDate]) {
    [self->inProgress_ addWithId:peer];
    [self performWithAMPeer:peer withLong:[cursor getPendingSortDate]];
  }
}

void ImActorModelModulesMessagesPlainCursorActor_saveCursorState(ImActorModelModulesMessagesPlainCursorActor *self) {
  [((ImActorModelDroidkitEngineSyncKeyValue *) nil_chk(self->keyValue_)) putWithLong:self->cursorId_ withByteArray:[((ImActorModelModulesMessagesEntityPlainCursorsStorage *) nil_chk(self->plainCursorsStorage_)) toByteArray]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesPlainCursorActor)

@implementation ImActorModelModulesMessagesPlainCursorActor_OnCompleted

- (instancetype)initWithAMPeer:(AMPeer *)peer
                      withLong:(jlong)date {
  if (self = [super init]) {
    self->peer_ = peer;
    self->date_ = date;
  }
  return self;
}

- (AMPeer *)getPeer {
  return peer_;
}

- (jlong)getDate {
  return date_;
}

- (void)copyAllFieldsTo:(ImActorModelModulesMessagesPlainCursorActor_OnCompleted *)other {
  [super copyAllFieldsTo:other];
  other->peer_ = peer_;
  other->date_ = date_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesMessagesPlainCursorActor_OnCompleted)
