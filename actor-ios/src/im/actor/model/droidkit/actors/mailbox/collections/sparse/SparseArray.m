//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/droidkit/actors/mailbox/collections/sparse/SparseArray.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/actors/mailbox/collections/sparse/ArrayUtils.h"
#include "im/actor/model/droidkit/actors/mailbox/collections/sparse/ContainerHelpers.h"
#include "im/actor/model/droidkit/actors/mailbox/collections/sparse/SparseArray.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"

__attribute__((unused)) static void ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_gc(ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray *self);

@interface ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray () {
 @public
  jboolean mGarbage_;
  IOSIntArray *mKeys_;
  IOSObjectArray *mValues_;
  jint mSize_;
}

- (void)gc;
@end

J2OBJC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray, mKeys_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray, mValues_, IOSObjectArray *)

BOOL ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_initialized = NO;

@implementation ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray

id ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_DELETED_;

- (instancetype)init {
  return [self initImActorModelDroidkitActorsMailboxCollectionsSparseSparseArrayWithInt:10];
}

- (instancetype)initImActorModelDroidkitActorsMailboxCollectionsSparseSparseArrayWithInt:(jint)initialCapacity {
  if (self = [super init]) {
    mGarbage_ = NO;
    if (initialCapacity == 0) {
      mKeys_ = ImActorModelDroidkitActorsMailboxCollectionsSparseContainerHelpers_get_EMPTY_INTS_();
      mValues_ = ImActorModelDroidkitActorsMailboxCollectionsSparseContainerHelpers_get_EMPTY_OBJECTS_();
    }
    else {
      initialCapacity = ImActorModelDroidkitActorsMailboxCollectionsSparseArrayUtils_idealIntArraySizeWithInt_(initialCapacity);
      mKeys_ = [IOSIntArray newArrayWithLength:initialCapacity];
      mValues_ = [IOSObjectArray newArrayWithLength:initialCapacity type:NSObject_class_()];
    }
    mSize_ = 0;
  }
  return self;
}

- (instancetype)initWithInt:(jint)initialCapacity {
  return [self initImActorModelDroidkitActorsMailboxCollectionsSparseSparseArrayWithInt:initialCapacity];
}

- (ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray *)clone {
  ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray *clone = nil;
  @try {
    clone = (ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray *) check_class_cast([super clone], [ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray class]);
    ((ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray *) nil_chk(clone))->mKeys_ = [((IOSIntArray *) nil_chk(mKeys_)) clone];
    clone->mValues_ = [((IOSObjectArray *) nil_chk(mValues_)) clone];
  }
  @catch (JavaLangCloneNotSupportedException *cnse) {
  }
  return clone;
}

- (id)getWithInt:(jint)key {
  return [self getWithInt:key withId:nil];
}

- (id)getWithInt:(jint)key
          withId:(id)valueIfKeyNotFound {
  jint i = ImActorModelDroidkitActorsMailboxCollectionsSparseContainerHelpers_binarySearchWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
  if (i < 0 || IOSObjectArray_Get(nil_chk(mValues_), i) == ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_DELETED_) {
    return valueIfKeyNotFound;
  }
  else {
    return (id) IOSObjectArray_Get(mValues_, i);
  }
}

- (void)delete__WithInt:(jint)key {
  jint i = ImActorModelDroidkitActorsMailboxCollectionsSparseContainerHelpers_binarySearchWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
  if (i >= 0) {
    if (IOSObjectArray_Get(nil_chk(mValues_), i) != ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_DELETED_) {
      IOSObjectArray_Set(mValues_, i, ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_DELETED_);
      mGarbage_ = YES;
    }
  }
}

- (void)removeWithInt:(jint)key {
  [self delete__WithInt:key];
}

- (void)removeAtWithInt:(jint)index {
  if (IOSObjectArray_Get(nil_chk(mValues_), index) != ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_DELETED_) {
    IOSObjectArray_Set(mValues_, index, ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_DELETED_);
    mGarbage_ = YES;
  }
}

- (void)removeAtRangeWithInt:(jint)index
                     withInt:(jint)size {
  jint end = JavaLangMath_minWithInt_withInt_(mSize_, index + size);
  for (jint i = index; i < end; i++) {
    [self removeAtWithInt:i];
  }
}

- (void)gc {
  ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_gc(self);
}

- (void)putWithInt:(jint)key
            withId:(id)value {
  jint i = ImActorModelDroidkitActorsMailboxCollectionsSparseContainerHelpers_binarySearchWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
  if (i >= 0) {
    IOSObjectArray_Set(nil_chk(mValues_), i, value);
  }
  else {
    i = ~i;
    if (i < mSize_ && IOSObjectArray_Get(nil_chk(mValues_), i) == ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_DELETED_) {
      *IOSIntArray_GetRef(nil_chk(mKeys_), i) = key;
      IOSObjectArray_Set(mValues_, i, value);
      return;
    }
    if (mGarbage_ && mSize_ >= ((IOSIntArray *) nil_chk(mKeys_))->size_) {
      ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_gc(self);
      i = ~ImActorModelDroidkitActorsMailboxCollectionsSparseContainerHelpers_binarySearchWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
    }
    if (mSize_ >= ((IOSIntArray *) nil_chk(mKeys_))->size_) {
      jint n = ImActorModelDroidkitActorsMailboxCollectionsSparseArrayUtils_idealIntArraySizeWithInt_(mSize_ + 1);
      IOSIntArray *nkeys = [IOSIntArray newArrayWithLength:n];
      IOSObjectArray *nvalues = [IOSObjectArray newArrayWithLength:n type:NSObject_class_()];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(mKeys_, 0, nkeys, 0, mKeys_->size_);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(mValues_, 0, nvalues, 0, ((IOSObjectArray *) nil_chk(mValues_))->size_);
      mKeys_ = nkeys;
      mValues_ = nvalues;
    }
    if (mSize_ - i != 0) {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(mKeys_, i, mKeys_, i + 1, mSize_ - i);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(mValues_, i, mValues_, i + 1, mSize_ - i);
    }
    *IOSIntArray_GetRef(mKeys_, i) = key;
    IOSObjectArray_Set(nil_chk(mValues_), i, value);
    mSize_++;
  }
}

- (jint)size {
  if (mGarbage_) {
    ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_gc(self);
  }
  return mSize_;
}

- (jint)keyAtWithInt:(jint)index {
  if (mGarbage_) {
    ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_gc(self);
  }
  return IOSIntArray_Get(nil_chk(mKeys_), index);
}

- (id)valueAtWithInt:(jint)index {
  if (mGarbage_) {
    ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_gc(self);
  }
  return (id) IOSObjectArray_Get(nil_chk(mValues_), index);
}

- (void)setValueAtWithInt:(jint)index
                   withId:(id)value {
  if (mGarbage_) {
    ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_gc(self);
  }
  IOSObjectArray_Set(nil_chk(mValues_), index, value);
}

- (jint)indexOfKeyWithInt:(jint)key {
  if (mGarbage_) {
    ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_gc(self);
  }
  return ImActorModelDroidkitActorsMailboxCollectionsSparseContainerHelpers_binarySearchWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
}

- (jboolean)containsKeyWithInt:(jint)key {
  return [self indexOfKeyWithInt:key] >= 0;
}

- (jint)indexOfValueWithId:(id)value {
  if (mGarbage_) {
    ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_gc(self);
  }
  for (jint i = 0; i < mSize_; i++) if (IOSObjectArray_Get(nil_chk(mValues_), i) == value) return i;
  return -1;
}

- (void)clear {
  jint n = mSize_;
  IOSObjectArray *values = mValues_;
  for (jint i = 0; i < n; i++) {
    IOSObjectArray_Set(nil_chk(values), i, nil);
  }
  mSize_ = 0;
  mGarbage_ = NO;
}

- (void)appendWithInt:(jint)key
               withId:(id)value {
  if (mSize_ != 0 && key <= IOSIntArray_Get(nil_chk(mKeys_), mSize_ - 1)) {
    [self putWithInt:key withId:value];
    return;
  }
  if (mGarbage_ && mSize_ >= ((IOSIntArray *) nil_chk(mKeys_))->size_) {
    ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_gc(self);
  }
  jint pos = mSize_;
  if (pos >= ((IOSIntArray *) nil_chk(mKeys_))->size_) {
    jint n = ImActorModelDroidkitActorsMailboxCollectionsSparseArrayUtils_idealIntArraySizeWithInt_(pos + 1);
    IOSIntArray *nkeys = [IOSIntArray newArrayWithLength:n];
    IOSObjectArray *nvalues = [IOSObjectArray newArrayWithLength:n type:NSObject_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(mKeys_, 0, nkeys, 0, mKeys_->size_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(mValues_, 0, nvalues, 0, ((IOSObjectArray *) nil_chk(mValues_))->size_);
    mKeys_ = nkeys;
    mValues_ = nvalues;
  }
  *IOSIntArray_GetRef(mKeys_, pos) = key;
  IOSObjectArray_Set(nil_chk(mValues_), pos, value);
  mSize_ = pos + 1;
}

- (NSString *)description {
  if ([self size] <= 0) {
    return @"{}";
  }
  JavaLangStringBuilder *buffer = [[JavaLangStringBuilder alloc] initWithInt:mSize_ * 28];
  (void) [buffer appendWithChar:'{'];
  for (jint i = 0; i < mSize_; i++) {
    if (i > 0) {
      (void) [buffer appendWithNSString:@", "];
    }
    jint key = [self keyAtWithInt:i];
    (void) [buffer appendWithInt:key];
    (void) [buffer appendWithChar:'='];
    id value = [self valueAtWithInt:i];
    if (value != self) {
      (void) [buffer appendWithId:value];
    }
    else {
      (void) [buffer appendWithNSString:@"(this Map)"];
    }
  }
  (void) [buffer appendWithChar:'}'];
  return [buffer description];
}

- (void)copyAllFieldsTo:(ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray *)other {
  [super copyAllFieldsTo:other];
  other->mGarbage_ = mGarbage_;
  other->mKeys_ = mKeys_;
  other->mValues_ = mValues_;
  other->mSize_ = mSize_;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (void)initialize {
  if (self == [ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray class]) {
    ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_DELETED_ = [[NSObject alloc] init];
    J2OBJC_SET_INITIALIZED(ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray)
  }
}

@end

void ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_gc(ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray *self) {
  jint n = self->mSize_;
  jint o = 0;
  IOSIntArray *keys = self->mKeys_;
  IOSObjectArray *values = self->mValues_;
  for (jint i = 0; i < n; i++) {
    id val = IOSObjectArray_Get(nil_chk(values), i);
    if (val != ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray_DELETED_) {
      if (i != o) {
        *IOSIntArray_GetRef(nil_chk(keys), o) = IOSIntArray_Get(keys, i);
        IOSObjectArray_Set(values, o, val);
        IOSObjectArray_Set(values, i, nil);
      }
      o++;
    }
  }
  self->mGarbage_ = NO;
  self->mSize_ = o;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelDroidkitActorsMailboxCollectionsSparseSparseArray)
