//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/network/mtp/entity/ProtoPackage.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/network/mtp/entity/ProtoMessage.h"
#include "im/actor/model/network/mtp/entity/ProtoObject.h"
#include "im/actor/model/network/mtp/entity/ProtoPackage.h"
#include "im/actor/model/util/DataInput.h"
#include "im/actor/model/util/DataOutput.h"
#include "java/io/IOException.h"

@interface MTProtoPackage () {
 @public
  jlong authId_;
  jlong sessionId_;
  MTProtoMessage *payload_;
}
@end

J2OBJC_FIELD_SETTER(MTProtoPackage, payload_, MTProtoMessage *)

@implementation MTProtoPackage

- (instancetype)initWithAMDataInput:(AMDataInput *)stream {
  return [super initWithAMDataInput:stream];
}

- (instancetype)initWithLong:(jlong)authId
                    withLong:(jlong)sessionId
          withMTProtoMessage:(MTProtoMessage *)payload {
  if (self = [super init]) {
    self->authId_ = authId;
    self->sessionId_ = sessionId;
    self->payload_ = payload;
  }
  return self;
}

- (jlong)getAuthId {
  return authId_;
}

- (jlong)getSessionId {
  return sessionId_;
}

- (MTProtoMessage *)getPayload {
  return payload_;
}

- (void)writeObjectWithAMDataOutput:(AMDataOutput *)bs {
  [((AMDataOutput *) nil_chk(bs)) writeLongWithLong:authId_];
  [bs writeLongWithLong:sessionId_];
  [((MTProtoMessage *) nil_chk(payload_)) writeObjectWithAMDataOutput:bs];
}

- (MTProtoObject *)readObjectWithAMDataInput:(AMDataInput *)bs {
  authId_ = [((AMDataInput *) nil_chk(bs)) readLong];
  sessionId_ = [bs readLong];
  payload_ = [[MTProtoMessage alloc] initWithAMDataInput:bs];
  return self;
}

- (NSString *)description {
  return JreStrcat("$JCJC", @"ProtoPackage[", authId_, '|', sessionId_, ']');
}

- (void)copyAllFieldsTo:(MTProtoPackage *)other {
  [super copyAllFieldsTo:other];
  other->authId_ = authId_;
  other->sessionId_ = sessionId_;
  other->payload_ = payload_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(MTProtoPackage)
