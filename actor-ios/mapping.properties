############################
# Messenger Callback
############################
im.actor.model.MessengerCallback.onUserOnline(I)V = AMMessengerCallback onUserOnline:(jint)uid;
im.actor.model.MessengerCallback.onUserOffline(I)V = AMMessengerCallback onUserOffline:(jint)uid;
im.actor.model.MessengerCallback.onUserLastSeen(IJ)V = AMMessengerCallback onUserLastSeen:(jint)uid withLastSeen:(jlong)lastSeen;
im.actor.model.MessengerCallback.onGroupOnline(II)V = AMMessengerCallback onGroupOnline:(jint)gid withUserCount:(jint)uid;
im.actor.model.MessengerCallback.onTypingStart(I)V = AMMessengerCallback onTypingStart:(jint)uid;
im.actor.model.MessengerCallback.onTypingEnd(I)V = AMMessengerCallback onTypingEnd:(jint)uid;
im.actor.model.MessengerCallback.onGroupTyping(I[I)V = AMMessengerCallback onGroupTyping:(jint)gid withUsers:(IOSIntArray *)uids;

############################
# Networking
############################
im.actor.model.Networking.createConnection(ILim/actor/model/network/ConnectionEndpoint;Lim/actor/model/network/ConnectionCallback;Lim/actor/model/network/CreateConnectionCallback;)V=AMNetworking createConnection:(jint)connectionId withEndpoint:(AMConnectionEndpoint *)endpoint withCallback:(id<AMConnectionCallback>)callback withCreateCallback:(id<AMCreateConnectionCallback>)createCallback;

im.actor.model.network.ConnectionCallback.onMessage([BII)V = AMConnectionCallback onMessage:(IOSByteArray *)data withOffset:(jint)offset withLen:(jint)len;
im.actor.model.network.mtp.AuthIdRetriever$1.onMessage([BII)V=MTAuthIdRetriever_$1 onMessage:(IOSByteArray *)data withOffset:(jint)offset withLen:(jint)len;
im.actor.model.network.mtp.actors.ManagerActor$2.onMessage([BII)V=MTManagerActor_$1 onMessage:(IOSByteArray *)data withOffset:(jint)offset withLen:(jint)len;

im.actor.model.network.CreateConnectionCallback.onConnectionCreated(Lim/actor/model/network/Connection;)V = AMCreateConnectionCallback onConnectionCreated:(id<AMConnection>)connection;
im.actor.model.network.mtp.AuthIdRetriever$2.onConnectionCreated(Lim/actor/model/network/Connection;)V=MTAuthIdRetriever_$2 onConnectionCreated:(id<AMConnection>)connection;
im.actor.model.network.mtp.actors.ManagerActor$3.onConnectionCreated(Lim/actor/model/network/Connection;)V = MTManagerActor_$3 onConnectionCreated:(id<AMConnection>)connection;
im.actor.model.network.Connection.post([BII)V = AMConnection post:(IOSByteArray *)data withOffset:(jint)offset withLen:(jint)len;

# Not working
im.actor.model.network.ConnectionEndpoint.<init>(Ljava/lang/String;ILim/actor/model/network/ConnectionEndpoint$Type;)V = init:(NSString*)host withPort:(jint)port withType:(AMConnectionEndpoint_TypeEnum*)type;

############################
# Storage (not working)
############################
# im.actor.model.Storage.createMessagesEngine(Lim/actor/entity/Peer;)Lim/actor/model/mvvm/ListEngine<Lim/actor/model/entity/Message;>; = AMStorage createMessagesEngine:(AMPeer *)peer;

############################
# Threading
############################
im.actor.model.Threading.createAtomicInt(I)Lim/actor/model/util/AtomicIntegerCompat; = AMThreading createAtomicInt:(jint)defValue;
im.actor.model.Threading.createAtomicLong(J)Lim/actor/model/util/AtomicLongCompat; = AMThreading createAtomicLong:(jlong)defValue;
im.actor.model.jvm.JavaThreading.createAtomicInt(I)Lim/actor/model/util/AtomicIntegerCompat; = AMJavaThreading createAtomicInt:(jint)defValue;
im.actor.model.jvm.JavaThreading.createAtomicLong(J)Lim/actor/model/util/AtomicLongCompat; = AMJavaThreading createAtomicLong:(jlong)defValue;
# Not working
im.actor.model.Threading.createDispatcher(Ljava/lang/String;ILim/actor/model/droidkit/actors/ThreadPriority;Lim/actor/model/droidkit/actors/ActorSystem)Lim/actor/model/droidkit/actors/mailbox/ActorDispatcher; = AMThreading createDispatcher:(NSString *)name withThreads:(jint)threadsCount withPriority:(DKThreadPriorityEnum *)priority withActorSystem:(DKActorSystem *)actorSystem;

############################
# MainThread
############################
im.actor.model.MainThread.runOnUiThread(Ljava/lang/Runnable;)V=AMMainThread runOnUiThread:(id<JavaLangRunnable>)runnable;

############################
# Log Callback
############################
im.actor.model.LogCallback.w(Ljava/lang/String;Ljava/lang/String;)V=AMLogCallback w:(NSString *)tag withMessage:(NSString *)message;
im.actor.model.LogCallback.d(Ljava/lang/String;Ljava/lang/String;)V=AMLogCallback d:(NSString *)tag withMessage:(NSString *)message;
im.actor.model.LogCallback.v(Ljava/lang/String;Ljava/lang/String;)V=AMLogCallback v:(NSString *)tag withMessage:(NSString *)message;
im.actor.model.LogCallback.e(Ljava/lang/String;Ljava/lang/Throwable;)V=AMLogCallback v:(NSString *)tag withError:(JavaLangThrowable *)throwable;

############################
# Configuration builder
############################
im.actor.model.ConfigurationBuilder.setLog(Lim/actor/model/LogCallback;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setLog:(id<AMLogCallback>)callback;
im.actor.model.ConfigurationBuilder.setNetworking(Lim/actor/model/Networking;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setNetworking:(id<AMNetworking>)networking;
im.actor.model.ConfigurationBuilder.setThreading(Lim/actor/model/Threading;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setThreading:(id<AMThreading>)threading;
im.actor.model.ConfigurationBuilder.setStorage(Lim/actor/model/Storage;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setStorage:(id<AMStorage>)storage;
im.actor.model.ConfigurationBuilder.setCallback(Lim/actor/model/MessengerCallback;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setCallback:(id<AMMessengerCallback>)callback;
im.actor.model.ConfigurationBuilder.setMainThread(Lim/actor/model/MainThread;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setMainThread:(id<AMMainThread>)mainThread;
im.actor.model.ConfigurationBuilder.addEndpoint(Ljava/lang/String;)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder addEndpoint:(NSString *)url;
im.actor.model.ConfigurationBuilder.setMessagesPersisting(Z)Lim/actor/model/ConfigurationBuilder; = AMConfigurationBuilder setMessagesPersisting:(jboolean)persistingFlag;

############################
# Messsenger
############################
im.actor.modek.Messenger."<init>"(Lim/actor/model/Configuration;)V = AMMessenger initWithConfiguration:(AMConfiguration *)configuration;
im.actor.modek.Messenger.requestSms(J)Lim/actor/model/concurrency/Command<Lim/actor/model/AuthState;>; = AMMessenger requestSms:(jlong)phone;