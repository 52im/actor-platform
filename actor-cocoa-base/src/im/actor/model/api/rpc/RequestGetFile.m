//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/api/rpc/RequestGetFile.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/FileLocation.h"
#include "im/actor/model/api/rpc/RequestGetFile.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "java/io/IOException.h"

@interface ImActorModelApiRpcRequestGetFile () {
 @public
  ImActorModelApiFileLocation *fileLocation_;
  jint offset_;
  jint limit_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelApiRpcRequestGetFile, fileLocation_, ImActorModelApiFileLocation *)

@implementation ImActorModelApiRpcRequestGetFile

+ (ImActorModelApiRpcRequestGetFile *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ImActorModelApiRpcRequestGetFile_fromBytesWithByteArray_(data);
}

- (instancetype)initWithImActorModelApiFileLocation:(ImActorModelApiFileLocation *)fileLocation
                                            withInt:(jint)offset
                                            withInt:(jint)limit {
  if (self = [super init]) {
    self->fileLocation_ = fileLocation;
    self->offset_ = offset;
    self->limit_ = limit;
  }
  return self;
}

- (instancetype)init {
  return [super init];
}

- (ImActorModelApiFileLocation *)getFileLocation {
  return self->fileLocation_;
}

- (jint)getOffset {
  return self->offset_;
}

- (jint)getLimit {
  return self->limit_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->fileLocation_ = [((BSBserValues *) nil_chk(values)) getObjWithInt:1 withBSBserObject:[[ImActorModelApiFileLocation alloc] init]];
  self->offset_ = [values getIntWithInt:2];
  self->limit_ = [values getIntWithInt:3];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->fileLocation_ == nil) {
    @throw [[JavaIoIOException alloc] init];
  }
  [((BSBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withBSBserObject:self->fileLocation_];
  [writer writeIntWithInt:2 withInt:self->offset_];
  [writer writeIntWithInt:3 withInt:self->limit_];
}

- (NSString *)description {
  NSString *res = @"rpc GetFile{";
  res = JreStrcat("$$", res, JreStrcat("$@", @"fileLocation=", self->fileLocation_));
  res = JreStrcat("$$", res, JreStrcat("$I", @", offset=", self->offset_));
  res = JreStrcat("$$", res, JreStrcat("$I", @", limit=", self->limit_));
  res = JreStrcat("$C", res, '}');
  return res;
}

- (jint)getHeaderKey {
  return ImActorModelApiRpcRequestGetFile_HEADER;
}

- (void)copyAllFieldsTo:(ImActorModelApiRpcRequestGetFile *)other {
  [super copyAllFieldsTo:other];
  other->fileLocation_ = fileLocation_;
  other->offset_ = offset_;
  other->limit_ = limit_;
}

@end

ImActorModelApiRpcRequestGetFile *ImActorModelApiRpcRequestGetFile_fromBytesWithByteArray_(IOSByteArray *data) {
  ImActorModelApiRpcRequestGetFile_init();
  return ((ImActorModelApiRpcRequestGetFile *) BSBser_parseWithBSBserObject_withByteArray_([[ImActorModelApiRpcRequestGetFile alloc] init], data));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelApiRpcRequestGetFile)
