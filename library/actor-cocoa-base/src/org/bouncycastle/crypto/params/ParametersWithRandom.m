//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/org/bouncycastle/crypto/params/ParametersWithRandom.java
//

#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/org/bouncycastle/crypto/params/ParametersWithRandom.java"

#include "J2ObjC_source.h"
#include "im/actor/model/crypto/bouncycastle/RandomProvider.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/params/ParametersWithRandom.h"

@interface OrgBouncycastleCryptoParamsParametersWithRandom () {
 @public
  id<BCRandomProvider> random_;
  id<OrgBouncycastleCryptoCipherParameters> parameters_;
}
@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsParametersWithRandom, random_, id<BCRandomProvider>)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsParametersWithRandom, parameters_, id<OrgBouncycastleCryptoCipherParameters>)


#line 6
@implementation OrgBouncycastleCryptoParamsParametersWithRandom


#line 11
- (instancetype)initWithOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)parameters
                                         withBCRandomProvider:(id<BCRandomProvider>)random {
  if (self = [super init]) {
    
#line 14
    self->random_ = random;
    
#line 15
    self->parameters_ = parameters;
  }
  return self;
}


#line 18
- (id<BCRandomProvider>)getRandom {
  
#line 19
  return random_;
}


#line 22
- (id<OrgBouncycastleCryptoCipherParameters>)getParameters {
  
#line 23
  return parameters_;
}

- (void)copyAllFieldsTo:(OrgBouncycastleCryptoParamsParametersWithRandom *)other {
  [super copyAllFieldsTo:other];
  other->random_ = random_;
  other->parameters_ = parameters_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsParametersWithRandom)
