//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/org/bouncycastle/crypto/encodings/OAEPEncoding.java
//

#ifndef _OrgBouncycastleCryptoEncodingsOAEPEncoding_H_
#define _OrgBouncycastleCryptoEncodingsOAEPEncoding_H_

@class IOSByteArray;
@class OrgBouncycastleCryptoParamsParametersWithRandom;
@protocol BCRandomProvider;
@protocol OrgBouncycastleCryptoDigest;

#include "J2ObjC_header.h"
#include "org/bouncycastle/crypto/AsymmetricBlockCipher.h"

@interface OrgBouncycastleCryptoEncodingsOAEPEncoding : NSObject < OrgBouncycastleCryptoAsymmetricBlockCipher > {
}

- (instancetype)initWithOrgBouncycastleCryptoAsymmetricBlockCipher:(id<OrgBouncycastleCryptoAsymmetricBlockCipher>)cipher;

- (instancetype)initWithOrgBouncycastleCryptoAsymmetricBlockCipher:(id<OrgBouncycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)hash_;

- (instancetype)initWithOrgBouncycastleCryptoAsymmetricBlockCipher:(id<OrgBouncycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)hash_
                                                     withByteArray:(IOSByteArray *)encodingParams;

- (instancetype)initWithOrgBouncycastleCryptoAsymmetricBlockCipher:(id<OrgBouncycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)hash_
                                   withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)mgf1Hash
                                                     withByteArray:(IOSByteArray *)encodingParams;

- (id<OrgBouncycastleCryptoAsymmetricBlockCipher>)getUnderlyingCipher;

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgBouncycastleCryptoParamsParametersWithRandom:(OrgBouncycastleCryptoParamsParametersWithRandom *)param OBJC_METHOD_FAMILY_NONE;

- (jint)getInputBlockSize;

- (jint)getOutputBlockSize;

- (IOSByteArray *)processBlockWithByteArray:(IOSByteArray *)inArg
                                    withInt:(jint)inOff
                                    withInt:(jint)inLen;

- (IOSByteArray *)encodeBlockWithByteArray:(IOSByteArray *)inArg
                                   withInt:(jint)inOff
                                   withInt:(jint)inLen;

- (IOSByteArray *)decodeBlockWithByteArray:(IOSByteArray *)inArg
                                   withInt:(jint)inOff
                                   withInt:(jint)inLen;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoEncodingsOAEPEncoding)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoEncodingsOAEPEncoding)

#endif // _OrgBouncycastleCryptoEncodingsOAEPEncoding_H_
