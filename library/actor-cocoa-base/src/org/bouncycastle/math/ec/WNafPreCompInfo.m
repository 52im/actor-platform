//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/org/bouncycastle/math/ec/WNafPreCompInfo.java
//

#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/org/bouncycastle/math/ec/WNafPreCompInfo.java"

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/math/ec/WNafPreCompInfo.h"


#line 7
@implementation OrgBouncycastleMathEcWNafPreCompInfo


#line 27
- (IOSObjectArray *)getPreComp {
  
#line 29
  return preComp_;
}


#line 32
- (void)setPreCompWithOrgBouncycastleMathEcECPointArray:(IOSObjectArray *)preComp {
  
#line 34
  self->preComp_ = preComp;
}


#line 37
- (IOSObjectArray *)getPreCompNeg {
  
#line 39
  return preCompNeg_;
}


#line 42
- (void)setPreCompNegWithOrgBouncycastleMathEcECPointArray:(IOSObjectArray *)preCompNeg {
  
#line 44
  self->preCompNeg_ = preCompNeg;
}


#line 47
- (OrgBouncycastleMathEcECPoint *)getTwice {
  
#line 49
  return twice_;
}


#line 52
- (void)setTwiceWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)twice {
  
#line 54
  self->twice_ = twice;
}

- (instancetype)init {
  if (self = [super init]) {
    preComp_ =
#line 13
    nil;
    preCompNeg_ =
#line 19
    nil;
    twice_ =
#line 25
    nil;
  }
  return self;
}

- (void)copyAllFieldsTo:(OrgBouncycastleMathEcWNafPreCompInfo *)other {
  [super copyAllFieldsTo:other];
  other->preComp_ = preComp_;
  other->preCompNeg_ = preCompNeg_;
  other->twice_ = twice_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathEcWNafPreCompInfo)
