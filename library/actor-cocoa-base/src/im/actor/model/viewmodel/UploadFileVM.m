//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/viewmodel/UploadFileVM.java
//

#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/viewmodel/UploadFileVM.java"

#include "J2ObjC_source.h"
#include "im/actor/model/modules/Files.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/viewmodel/UploadFileCallback.h"
#include "im/actor/model/viewmodel/UploadFileVM.h"
#include "im/actor/model/viewmodel/UploadFileVMCallback.h"

@interface AMUploadFileVM () {
 @public
  jlong rid_;
  ImActorModelModulesModules *modules_;
  id<AMUploadFileVMCallback> vmCallback_;
  id<AMUploadFileCallback> callback_;
}
@end

J2OBJC_FIELD_SETTER(AMUploadFileVM, modules_, ImActorModelModulesModules *)
J2OBJC_FIELD_SETTER(AMUploadFileVM, vmCallback_, id<AMUploadFileVMCallback>)
J2OBJC_FIELD_SETTER(AMUploadFileVM, callback_, id<AMUploadFileCallback>)

@interface AMUploadFileVM_Uploading () {
 @public
  jfloat progress_;
}
- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$
                             withFloat:(jfloat)progress;
@end

@interface AMUploadFileVM_$1 () {
 @public
  AMUploadFileVM *this$0_;
}
@end

J2OBJC_FIELD_SETTER(AMUploadFileVM_$1, this$0_, AMUploadFileVM *)


#line 11
@implementation AMUploadFileVM


#line 25
- (instancetype)initWithLong:(jlong)rid
  withAMUploadFileVMCallback:(id<AMUploadFileVMCallback>)vmCallback
withImActorModelModulesModules:(ImActorModelModulesModules *)modules {
  if (self = [super init]) {
    
#line 26
    self->rid_ = rid;
    
#line 27
    self->modules_ = modules;
    
#line 28
    self->vmCallback_ = vmCallback;
    
#line 29
    self->callback_ = [[AMUploadFileVM_$1 alloc] initWithAMUploadFileVM:self];
    
#line 45
    [((ImActorModelModulesFiles *) nil_chk([((ImActorModelModulesModules *) nil_chk(modules)) getFilesModule])) bindUploadFileWithLong:rid withAMUploadFileCallback:callback_];
  }
  return self;
}


#line 49
- (void)onObjectReceivedWithId:(id)obj {
  
#line 50
  if ([obj isKindOfClass:[AMUploadFileVM_NotUploading class]]) {
    [((id<AMUploadFileVMCallback>) nil_chk(vmCallback_)) onNotUploaded];
  }
  else
#line 52
  if ([obj isKindOfClass:[AMUploadFileVM_Uploading class]]) {
    [((id<AMUploadFileVMCallback>) nil_chk(vmCallback_)) onUploadingWithFloat:[((AMUploadFileVM_Uploading *) nil_chk(((AMUploadFileVM_Uploading *) check_class_cast(obj, [AMUploadFileVM_Uploading class])))) getProgress]];
  }
  else
#line 54
  if ([obj isKindOfClass:[AMUploadFileVM_Uploaded class]]) {
    [((id<AMUploadFileVMCallback>) nil_chk(vmCallback_)) onUploaded];
  }
}


#line 64
- (void)detach {
  
#line 65
  [super detach];
  [((ImActorModelModulesFiles *) nil_chk([((ImActorModelModulesModules *) nil_chk(modules_)) getFilesModule])) unbindUploadFileWithLong:rid_ withAMUploadFileCallback:callback_];
}

- (void)copyAllFieldsTo:(AMUploadFileVM *)other {
  [super copyAllFieldsTo:other];
  other->rid_ = rid_;
  other->modules_ = modules_;
  other->vmCallback_ = vmCallback_;
  other->callback_ = callback_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUploadFileVM)


#line 69
@implementation AMUploadFileVM_NotUploading

- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$ {
  return [super init];
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUploadFileVM_NotUploading)


#line 73
@implementation AMUploadFileVM_Uploading


#line 76
- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$
                             withFloat:(jfloat)progress {
  if (self = [super init]) {
    
#line 77
    self->progress_ = progress;
  }
  return self;
}


#line 80
- (jfloat)getProgress {
  
#line 81
  return progress_;
}

- (void)copyAllFieldsTo:(AMUploadFileVM_Uploading *)other {
  [super copyAllFieldsTo:other];
  other->progress_ = progress_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUploadFileVM_Uploading)


#line 85
@implementation AMUploadFileVM_Uploaded

- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$ {
  return [super init];
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUploadFileVM_Uploaded)

@implementation AMUploadFileVM_$1


#line 31
- (void)onNotUploading {
  
#line 32
  [this$0_ postWithId:[[AMUploadFileVM_NotUploading alloc] initWithAMUploadFileVM:this$0_]];
}


#line 36
- (void)onUploadingWithFloat:(jfloat)progress {
  [this$0_ postWithId:[[AMUploadFileVM_Uploading alloc] initWithAMUploadFileVM:this$0_ withFloat:progress]];
}


#line 41
- (void)onUploaded {
  
#line 42
  [this$0_ postWithId:[[AMUploadFileVM_Uploaded alloc] initWithAMUploadFileVM:this$0_]];
}

- (instancetype)initWithAMUploadFileVM:(AMUploadFileVM *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(AMUploadFileVM_$1 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMUploadFileVM_$1)
