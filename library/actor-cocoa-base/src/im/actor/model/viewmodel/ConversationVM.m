//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/viewmodel/ConversationVM.java
//

#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/viewmodel/ConversationVM.java"

#include "J2ObjC_source.h"
#include "im/actor/model/entity/Message.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/modules/Auth.h"
#include "im/actor/model/modules/Messages.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/mvvm/BindedDisplayList.h"
#include "im/actor/model/mvvm/DisplayList.h"
#include "im/actor/model/viewmodel/ConversationVM.h"
#include "im/actor/model/viewmodel/ConversationVMCallback.h"

@interface AMConversationVM () {
 @public
  AMBindedDisplayList *displayList_;
  id<AMDisplayList_Listener> listener_;
  jboolean isLoaded_;
}
@end

J2OBJC_FIELD_SETTER(AMConversationVM, displayList_, AMBindedDisplayList *)
J2OBJC_FIELD_SETTER(AMConversationVM, listener_, id<AMDisplayList_Listener>)

@interface AMConversationVM_$1 () {
 @public
  AMConversationVM *this$0_;
  AMBindedDisplayList *val$displayList_;
  ImActorModelModulesModules *val$modules_;
  AMPeer *val$peer_;
  id<AMConversationVMCallback> val$callback_;
}
@end

J2OBJC_FIELD_SETTER(AMConversationVM_$1, this$0_, AMConversationVM *)
J2OBJC_FIELD_SETTER(AMConversationVM_$1, val$displayList_, AMBindedDisplayList *)
J2OBJC_FIELD_SETTER(AMConversationVM_$1, val$modules_, ImActorModelModulesModules *)
J2OBJC_FIELD_SETTER(AMConversationVM_$1, val$peer_, AMPeer *)
J2OBJC_FIELD_SETTER(AMConversationVM_$1, val$callback_, id<AMConversationVMCallback>)


#line 12
@implementation AMConversationVM


#line 17
- (instancetype)initWithAMPeer:(AMPeer *)peer
  withAMConversationVMCallback:(id<AMConversationVMCallback>)callback
withImActorModelModulesModules:(ImActorModelModulesModules *)modules
       withAMBindedDisplayList:(AMBindedDisplayList *)displayList {
  if (self = [super init]) {
    isLoaded_ =
#line 15
    NO;
    
#line 18
    self->displayList_ = displayList;
    
#line 19
    self->listener_ = [[AMConversationVM_$1 alloc] initWithAMConversationVM:self withAMBindedDisplayList:displayList withImActorModelModulesModules:modules withAMPeer:peer withAMConversationVMCallback:callback];
    
#line 59
    [((AMBindedDisplayList *) nil_chk(self->displayList_)) addListenerWithAMDisplayList_Listener:listener_];
    
#line 60
    [listener_ onCollectionChanged];
  }
  return self;
}


#line 63
- (void)release__ {
  
#line 64
  [((AMBindedDisplayList *) nil_chk(displayList_)) removeListenerWithAMDisplayList_Listener:listener_];
}

- (void)copyAllFieldsTo:(AMConversationVM *)other {
  [super copyAllFieldsTo:other];
  other->displayList_ = displayList_;
  other->listener_ = listener_;
  other->isLoaded_ = isLoaded_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMConversationVM)

@implementation AMConversationVM_$1


#line 21
- (void)onCollectionChanged {
  
#line 22
  if (this$0_->isLoaded_) {
    return;
  }
  
#line 26
  if ([((AMBindedDisplayList *) nil_chk(val$displayList_)) getSize] == 0) {
    return;
  }
  
#line 30
  this$0_->isLoaded_ = YES;
  jlong lastRead = [((ImActorModelModulesMessages *) nil_chk([((ImActorModelModulesModules *) nil_chk(val$modules_)) getMessagesModule])) loadReadStateWithAMPeer:val$peer_];
  
#line 33
  if (lastRead == 0) {
    
#line 35
    return;
  }
  
#line 38
  jint index = -1;
  jlong unread = -1;
  for (jint i = [val$displayList_ getSize] - 1; i >= 0; i--) {
    AMMessage *message = [val$displayList_ getItemWithInt:i];
    if ([((AMMessage *) nil_chk(message)) getSenderId] == [((ImActorModelModulesAuth *) nil_chk([val$modules_ getAuthModule])) myUid]) {
      continue;
    }
    if ([message getSortDate] > lastRead) {
      index = i;
      unread = [message getRid];
      break;
    }
  }
  
#line 52
  if (index >= 0) {
    [((id<AMConversationVMCallback>) nil_chk(val$callback_)) onLoadedWithLong:unread withInt:index];
  }
  else {
    
#line 55
    [((id<AMConversationVMCallback>) nil_chk(val$callback_)) onLoadedWithLong:0 withInt:0];
  }
}

- (instancetype)initWithAMConversationVM:(AMConversationVM *)outer$
                 withAMBindedDisplayList:(AMBindedDisplayList *)capture$0
          withImActorModelModulesModules:(ImActorModelModulesModules *)capture$1
                              withAMPeer:(AMPeer *)capture$2
            withAMConversationVMCallback:(id<AMConversationVMCallback>)capture$3 {
  this$0_ = outer$;
  val$displayList_ = capture$0;
  val$modules_ = capture$1;
  val$peer_ = capture$2;
  val$callback_ = capture$3;
  return [super init];
}

- (void)copyAllFieldsTo:(AMConversationVM_$1 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
  other->val$displayList_ = val$displayList_;
  other->val$modules_ = val$modules_;
  other->val$peer_ = val$peer_;
  other->val$callback_ = val$callback_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMConversationVM_$1)
