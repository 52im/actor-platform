//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/WrongKeysErrorData.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/UserKey.h"
#include "im/actor/model/api/WrongKeysErrorData.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "java/io/IOException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ImActorModelApiWrongKeysErrorData () {
 @public
  id<JavaUtilList> newKeys_;
  id<JavaUtilList> removedKeys_;
  id<JavaUtilList> invalidKeys_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelApiWrongKeysErrorData, newKeys_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ImActorModelApiWrongKeysErrorData, removedKeys_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ImActorModelApiWrongKeysErrorData, invalidKeys_, id<JavaUtilList>)

@implementation ImActorModelApiWrongKeysErrorData

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)newKeys
                    withJavaUtilList:(id<JavaUtilList>)removedKeys
                    withJavaUtilList:(id<JavaUtilList>)invalidKeys {
  if (self = [super init]) {
    self->newKeys_ = newKeys;
    self->removedKeys_ = removedKeys;
    self->invalidKeys_ = invalidKeys;
  }
  return self;
}

- (instancetype)init {
  return [super init];
}

- (id<JavaUtilList>)getNewKeys {
  return self->newKeys_;
}

- (id<JavaUtilList>)getRemovedKeys {
  return self->removedKeys_;
}

- (id<JavaUtilList>)getInvalidKeys {
  return self->invalidKeys_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  id<JavaUtilList> _newKeys = [[JavaUtilArrayList alloc] init];
  for (jint i = 0; i < [((BSBserValues *) nil_chk(values)) getRepeatedCountWithInt:1]; i++) {
    [_newKeys addWithId:[[ImActorModelApiUserKey alloc] init]];
  }
  self->newKeys_ = [values getRepeatedObjWithInt:1 withJavaUtilList:_newKeys];
  id<JavaUtilList> _removedKeys = [[JavaUtilArrayList alloc] init];
  for (jint i = 0; i < [values getRepeatedCountWithInt:2]; i++) {
    [_removedKeys addWithId:[[ImActorModelApiUserKey alloc] init]];
  }
  self->removedKeys_ = [values getRepeatedObjWithInt:2 withJavaUtilList:_removedKeys];
  id<JavaUtilList> _invalidKeys = [[JavaUtilArrayList alloc] init];
  for (jint i = 0; i < [values getRepeatedCountWithInt:3]; i++) {
    [_invalidKeys addWithId:[[ImActorModelApiUserKey alloc] init]];
  }
  self->invalidKeys_ = [values getRepeatedObjWithInt:3 withJavaUtilList:_invalidKeys];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeRepeatedObjWithInt:1 withJavaUtilList:self->newKeys_];
  [writer writeRepeatedObjWithInt:2 withJavaUtilList:self->removedKeys_];
  [writer writeRepeatedObjWithInt:3 withJavaUtilList:self->invalidKeys_];
}

- (NSString *)description {
  NSString *res = @"struct WrongKeysErrorData{";
  res = JreStrcat("$$", res, JreStrcat("$@", @"newKeys=", self->newKeys_));
  res = JreStrcat("$$", res, JreStrcat("$@", @", removedKeys=", self->removedKeys_));
  res = JreStrcat("$$", res, JreStrcat("$@", @", invalidKeys=", self->invalidKeys_));
  res = JreStrcat("$C", res, '}');
  return res;
}

- (void)copyAllFieldsTo:(ImActorModelApiWrongKeysErrorData *)other {
  [super copyAllFieldsTo:other];
  other->newKeys_ = newKeys_;
  other->removedKeys_ = removedKeys_;
  other->invalidKeys_ = invalidKeys_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelApiWrongKeysErrorData)
