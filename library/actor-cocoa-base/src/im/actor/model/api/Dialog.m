//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/Dialog.java
//

#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/Dialog.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/Dialog.h"
#include "im/actor/model/api/Message.h"
#include "im/actor/model/api/MessageState.h"
#include "im/actor/model/api/Peer.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "java/io/IOException.h"

@interface ImActorModelApiDialog () {
 @public
  ImActorModelApiPeer *peer_;
  jint unreadCount_;
  jlong sortDate_;
  jint senderUid_;
  jlong rid_;
  jlong date_;
  ImActorModelApiMessage *message_;
  ImActorModelApiMessageStateEnum *state_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelApiDialog, peer_, ImActorModelApiPeer *)
J2OBJC_FIELD_SETTER(ImActorModelApiDialog, message_, ImActorModelApiMessage *)
J2OBJC_FIELD_SETTER(ImActorModelApiDialog, state_, ImActorModelApiMessageStateEnum *)


#line 19
@implementation ImActorModelApiDialog


#line 30
- (instancetype)initWithImActorModelApiPeer:(ImActorModelApiPeer *)peer
                                    withInt:(jint)unreadCount
                                   withLong:(jlong)sortDate
                                    withInt:(jint)senderUid
                                   withLong:(jlong)rid
                                   withLong:(jlong)date
                 withImActorModelApiMessage:(ImActorModelApiMessage *)message
        withImActorModelApiMessageStateEnum:(ImActorModelApiMessageStateEnum *)state {
  if (self = [super init]) {
    
#line 31
    self->peer_ = peer;
    
#line 32
    self->unreadCount_ = unreadCount;
    
#line 33
    self->sortDate_ = sortDate;
    
#line 34
    self->senderUid_ = senderUid;
    
#line 35
    self->rid_ = rid;
    
#line 36
    self->date_ = date;
    
#line 37
    self->message_ = message;
    
#line 38
    self->state_ = state;
  }
  return self;
}


#line 41
- (instancetype)init {
  return [super init];
}

- (ImActorModelApiPeer *)getPeer {
  
#line 46
  return self->peer_;
}


#line 49
- (jint)getUnreadCount {
  
#line 50
  return self->unreadCount_;
}


#line 53
- (jlong)getSortDate {
  
#line 54
  return self->sortDate_;
}


#line 57
- (jint)getSenderUid {
  
#line 58
  return self->senderUid_;
}


#line 61
- (jlong)getRid {
  
#line 62
  return self->rid_;
}


#line 65
- (jlong)getDate {
  
#line 66
  return self->date_;
}


#line 69
- (ImActorModelApiMessage *)getMessage {
  
#line 70
  return self->message_;
}


#line 73
- (ImActorModelApiMessageStateEnum *)getState {
  
#line 74
  return self->state_;
}


#line 78
- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->peer_ = [((BSBserValues *) nil_chk(values)) getObjWithInt:1 withBSBserObject:[[ImActorModelApiPeer alloc] init]];
  self->unreadCount_ = [values getIntWithInt:3];
  self->sortDate_ = [values getLongWithInt:4];
  self->senderUid_ = [values getIntWithInt:5];
  self->rid_ = [values getLongWithInt:6];
  self->date_ = [values getLongWithInt:7];
  self->message_ = ImActorModelApiMessage_fromBytesWithByteArray_([values getBytesWithInt:8]);
  jint val_state = [values getIntWithInt:9 withInt:0];
  if (val_state != 0) {
    self->state_ = ImActorModelApiMessageStateEnum_parseWithInt_(val_state);
  }
}


#line 93
- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  
#line 94
  if (self->peer_ == nil) {
    @throw [[JavaIoIOException alloc] init];
  }
  [((BSBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withBSBserObject:self->peer_];
  [writer writeIntWithInt:3 withInt:self->unreadCount_];
  [writer writeLongWithInt:4 withLong:self->sortDate_];
  [writer writeIntWithInt:5 withInt:self->senderUid_];
  [writer writeLongWithInt:6 withLong:self->rid_];
  [writer writeLongWithInt:7 withLong:self->date_];
  if (self->message_ == nil) {
    @throw [[JavaIoIOException alloc] init];
  }
  
#line 107
  [writer writeBytesWithInt:8 withByteArray:[((ImActorModelApiMessage *) nil_chk(self->message_)) buildContainer]];
  if (self->state_ != nil) {
    [writer writeIntWithInt:9 withInt:[self->state_ getValue]];
  }
}

- (NSString *)description {
  
#line 115
  NSString *res = @"struct Dialog{";
  res = JreStrcat("$$", res, JreStrcat("$@", @"peer=", self->peer_));
  res = JreStrcat("$$", res, JreStrcat("$I", @", unreadCount=", self->unreadCount_));
  res = JreStrcat("$$", res, JreStrcat("$J", @", sortDate=", self->sortDate_));
  res = JreStrcat("$$", res, JreStrcat("$I", @", senderUid=", self->senderUid_));
  res = JreStrcat("$$", res, JreStrcat("$J", @", rid=", self->rid_));
  res = JreStrcat("$$", res, JreStrcat("$J", @", date=", self->date_));
  res = JreStrcat("$$", res, JreStrcat("$@", @", message=", self->message_));
  res = JreStrcat("$C", res, '}');
  return res;
}

- (void)copyAllFieldsTo:(ImActorModelApiDialog *)other {
  [super copyAllFieldsTo:other];
  other->peer_ = peer_;
  other->unreadCount_ = unreadCount_;
  other->sortDate_ = sortDate_;
  other->senderUid_ = senderUid_;
  other->rid_ = rid_;
  other->date_ = date_;
  other->message_ = message_;
  other->state_ = state_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelApiDialog)
