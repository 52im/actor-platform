//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/api/TypingType.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/TypingType.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"

@interface ImActorModelApiTypingTypeEnum () {
 @public
  jint value_;
}
@end

BOOL ImActorModelApiTypingTypeEnum_initialized = NO;

ImActorModelApiTypingTypeEnum *ImActorModelApiTypingTypeEnum_values_[2];

@implementation ImActorModelApiTypingTypeEnum

- (instancetype)initWithInt:(jint)value
               withNSString:(NSString *)__name
                    withInt:(jint)__ordinal {
  if (self = [super initWithNSString:__name withInt:__ordinal]) {
    self->value_ = value;
  }
  return self;
}

- (jint)getValue {
  return value_;
}

+ (ImActorModelApiTypingTypeEnum *)parseWithInt:(jint)value {
  return ImActorModelApiTypingTypeEnum_parseWithInt_(value);
}

IOSObjectArray *ImActorModelApiTypingTypeEnum_values() {
  ImActorModelApiTypingTypeEnum_init();
  return [IOSObjectArray arrayWithObjects:ImActorModelApiTypingTypeEnum_values_ count:2 type:ImActorModelApiTypingTypeEnum_class_()];
}
+ (IOSObjectArray *)values {
  return ImActorModelApiTypingTypeEnum_values();
}

+ (ImActorModelApiTypingTypeEnum *)valueOfWithNSString:(NSString *)name {
  return ImActorModelApiTypingTypeEnum_valueOfWithNSString_(name);
}

ImActorModelApiTypingTypeEnum *ImActorModelApiTypingTypeEnum_valueOfWithNSString_(NSString *name) {
  ImActorModelApiTypingTypeEnum_init();
  for (int i = 0; i < 2; i++) {
    ImActorModelApiTypingTypeEnum *e = ImActorModelApiTypingTypeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [ImActorModelApiTypingTypeEnum class]) {
    ImActorModelApiTypingTypeEnum_TEXT = [[ImActorModelApiTypingTypeEnum alloc] initWithInt:0 withNSString:@"TEXT" withInt:0];
    ImActorModelApiTypingTypeEnum_UNSUPPORTED_VALUE = [[ImActorModelApiTypingTypeEnum alloc] initWithInt:-1 withNSString:@"UNSUPPORTED_VALUE" withInt:1];
    J2OBJC_SET_INITIALIZED(ImActorModelApiTypingTypeEnum)
  }
}

@end

ImActorModelApiTypingTypeEnum *ImActorModelApiTypingTypeEnum_parseWithInt_(jint value) {
  ImActorModelApiTypingTypeEnum_init();
  switch (value) {
    case 0:
    return ImActorModelApiTypingTypeEnum_TEXT;
    default:
    return ImActorModelApiTypingTypeEnum_UNSUPPORTED_VALUE;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelApiTypingTypeEnum)
