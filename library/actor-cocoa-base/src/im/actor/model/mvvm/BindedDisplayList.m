//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/mvvm/BindedDisplayList.java
//

#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/mvvm/BindedDisplayList.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/engine/ListEngineDisplayExt.h"
#include "im/actor/model/droidkit/engine/ListEngineDisplayLoadCallback.h"
#include "im/actor/model/droidkit/engine/ListEngineItem.h"
#include "im/actor/model/mvvm/BindedDisplayList.h"
#include "im/actor/model/mvvm/DisplayList.h"
#include "im/actor/model/mvvm/DisplayModifications.h"
#include "im/actor/model/mvvm/DisplayWindow.h"
#include "im/actor/model/mvvm/MVVMEngine.h"
#include "im/actor/model/mvvm/ValueModel.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"

__attribute__((unused)) static void AMBindedDisplayList_loadMoreForward(AMBindedDisplayList *self);
__attribute__((unused)) static void AMBindedDisplayList_loadMoreBackward(AMBindedDisplayList *self);
__attribute__((unused)) static id<DKListEngineDisplayLoadCallback> AMBindedDisplayList_coverWithDKListEngineDisplayLoadCallback_withInt_(AMBindedDisplayList *self, id<DKListEngineDisplayLoadCallback> callback, jint generation);

@interface AMBindedDisplayList () {
 @public
  id<DKListEngineDisplayExt> listEngine_;
  AMDisplayWindow *window_;
  AMBindedDisplayList_EngineListener *engineListener_;
  jint currentGeneration_;
  jboolean isGlobalList__;
  jint pageSize_;
  jint loadGap_;
  id<AMBindedDisplayList_BindHook> bindHook_;
  AMValueModel *stateModel_;
  AMBindedDisplayList_ListModeEnum *mode_;
  NSString *query_;
  jboolean isLoadMoreForwardRequested_;
  jboolean isLoadMoreBackwardRequested_;
}

- (void)loadMoreForward;

- (void)loadMoreBackward;

- (id<DKListEngineDisplayLoadCallback>)coverWithDKListEngineDisplayLoadCallback:(id<DKListEngineDisplayLoadCallback>)callback
                                                                        withInt:(jint)generation;
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList, listEngine_, id<DKListEngineDisplayExt>)
J2OBJC_FIELD_SETTER(AMBindedDisplayList, window_, AMDisplayWindow *)
J2OBJC_FIELD_SETTER(AMBindedDisplayList, engineListener_, AMBindedDisplayList_EngineListener *)
J2OBJC_FIELD_SETTER(AMBindedDisplayList, bindHook_, id<AMBindedDisplayList_BindHook>)
J2OBJC_FIELD_SETTER(AMBindedDisplayList, stateModel_, AMValueModel *)
J2OBJC_FIELD_SETTER(AMBindedDisplayList, mode_, AMBindedDisplayList_ListModeEnum *)
J2OBJC_FIELD_SETTER(AMBindedDisplayList, query_, NSString *)

@interface AMBindedDisplayList_ListEngineComparator ()
- (instancetype)init;
@end

@interface AMBindedDisplayList_EngineListener () {
 @public
  AMBindedDisplayList *this$0_;
}
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList_EngineListener, this$0_, AMBindedDisplayList *)

@interface AMBindedDisplayList_ListModeEnum ()
- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal;
@end

@interface AMBindedDisplayList_$2 () {
 @public
  AMBindedDisplayList *this$0_;
}
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList_$2, this$0_, AMBindedDisplayList *)

@interface AMBindedDisplayList_$3 () {
 @public
  AMBindedDisplayList *this$0_;
}
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList_$3, this$0_, AMBindedDisplayList *)

@interface AMBindedDisplayList_$4 () {
 @public
  AMBindedDisplayList *this$0_;
}
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList_$4, this$0_, AMBindedDisplayList *)

@interface AMBindedDisplayList_$5 () {
 @public
  AMBindedDisplayList *this$0_;
}
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList_$5, this$0_, AMBindedDisplayList *)

@interface AMBindedDisplayList_$6 () {
 @public
  AMBindedDisplayList *this$0_;
  jint val$gen_;
}
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList_$6, this$0_, AMBindedDisplayList *)

@interface AMBindedDisplayList_$6_$1 () {
 @public
  AMBindedDisplayList_$6 *this$0_;
}
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList_$6_$1, this$0_, AMBindedDisplayList_$6 *)

@interface AMBindedDisplayList_$7 () {
 @public
  AMBindedDisplayList *this$0_;
  jint val$gen_;
}
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList_$7, this$0_, AMBindedDisplayList *)

@interface AMBindedDisplayList_$7_$1 () {
 @public
  AMBindedDisplayList_$7 *this$0_;
}
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList_$7_$1, this$0_, AMBindedDisplayList_$7 *)

@interface AMBindedDisplayList_$8 () {
 @public
  AMBindedDisplayList *this$0_;
  jint val$generation_;
  id<DKListEngineDisplayLoadCallback> val$callback_;
}
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList_$8, this$0_, AMBindedDisplayList *)
J2OBJC_FIELD_SETTER(AMBindedDisplayList_$8, val$callback_, id<DKListEngineDisplayLoadCallback>)

@interface AMBindedDisplayList_$8_$1 () {
 @public
  AMBindedDisplayList_$8 *this$0_;
  id<JavaUtilList> val$items_;
  jlong val$topSortKey_;
  jlong val$bottomSortKey_;
}
@end

J2OBJC_FIELD_SETTER(AMBindedDisplayList_$8_$1, this$0_, AMBindedDisplayList_$8 *)
J2OBJC_FIELD_SETTER(AMBindedDisplayList_$8_$1, val$items_, id<JavaUtilList>)

BOOL AMBindedDisplayList_initialized = NO;


#line 17
@implementation AMBindedDisplayList

NSString * AMBindedDisplayList_TAG_ = @"BindedDisplayList";
id<JavaUtilComparator> AMBindedDisplayList_COMPARATOR_;


#line 42
- (instancetype)initWithDKListEngineDisplayExt:(id<DKListEngineDisplayExt>)listEngine
                                   withBoolean:(jboolean)isGlobalList
                                       withInt:(jint)pageSize
                                       withInt:(jint)loadGap
              withAMBindedDisplayList_BindHook:(id<AMBindedDisplayList_BindHook>)bindHook {
  if (self =
#line 44
  [super initWithAMDisplayList_Hook:[[AMBindedDisplayList_$1 alloc] init]]) {
    engineListener_ =
#line 26
    [[AMBindedDisplayList_EngineListener alloc] initWithAMBindedDisplayList:self];
    currentGeneration_ =
#line 28
    0;
    isLoadMoreForwardRequested_ =
#line 39
    NO;
    isLoadMoreBackwardRequested_ =
#line 40
    NO;
    
#line 51
    self->bindHook_ = bindHook;
    
#line 52
    self->isGlobalList__ = isGlobalList;
    
#line 53
    self->pageSize_ = pageSize;
    
#line 54
    self->loadGap_ = loadGap;
    
#line 56
    self->listEngine_ = listEngine;
    
#line 57
    self->window_ = [[AMDisplayWindow alloc] init];
    
#line 58
    self->stateModel_ = [[AMValueModel alloc] initWithNSString:@"display_list.state" withId:AMBindedDisplayList_StateEnum_get_LOADING_EMPTY()];
    
#line 60
    [((id<DKListEngineDisplayExt>) nil_chk(listEngine)) subscribeWithDKListEngineDisplayListener:engineListener_];
  }
  return self;
}


#line 63
- (jboolean)isGlobalList {
  
#line 64
  return isGlobalList__;
}


#line 68
- (void)touchWithInt:(jint)index {
  AMMVVMEngine_checkMainThread();
  
#line 71
  if (index >= [self getSize] - loadGap_) {
    if ([((AMDisplayWindow *) nil_chk(window_)) isForwardCompleted]) {
      if (bindHook_ != nil) {
        [bindHook_ onScrolledToEnd];
      }
    }
    else {
      
#line 77
      AMBindedDisplayList_loadMoreForward(self);
    }
  }
  
#line 81
  if (index < loadGap_) {
    AMBindedDisplayList_loadMoreBackward(self);
  }
  
#line 85
  if (bindHook_ != nil) {
    [bindHook_ onItemTouchedWithId:[self getItemWithInt:index]];
  }
}


#line 93
- (void)initTopWithBoolean:(jboolean)refresh {
  
#line 94
  AMMVVMEngine_checkMainThread();
  
#line 98
  if (mode_ != nil && mode_ == AMBindedDisplayList_ListModeEnum_get_FORWARD()) {
    
#line 100
    return;
  }
  mode_ = AMBindedDisplayList_ListModeEnum_get_FORWARD();
  query_ = nil;
  
#line 105
  if (refresh) {
    
#line 107
    [self editListWithAMDisplayList_Modification:(id<AMDisplayList_Modification>) check_protocol_cast(AMDisplayModifications_clear(), @protocol(AMDisplayList_Modification))];
  }
  
#line 110
  [((AMValueModel *) nil_chk(stateModel_)) changeWithId:AMBindedDisplayList_StateEnum_get_LOADING_EMPTY()];
  currentGeneration_++;
  [((AMDisplayWindow *) nil_chk(window_)) startInitForward];
  
#line 115
  [((id<DKListEngineDisplayExt>) nil_chk(listEngine_)) loadForwardWithInt:pageSize_ withDKListEngineDisplayLoadCallback:AMBindedDisplayList_coverWithDKListEngineDisplayLoadCallback_withInt_(self, [[AMBindedDisplayList_$2 alloc] initWithAMBindedDisplayList:self],
#line 130
  currentGeneration_)];
}


#line 134
- (void)initBottomWithBoolean:(jboolean)refresh {
  
#line 135
  AMMVVMEngine_checkMainThread();
  
#line 137
  if (isGlobalList__) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Global DisplayList can't grow from bottom"];
  }
  
#line 141
  if (mode_ != nil && mode_ == AMBindedDisplayList_ListModeEnum_get_BACKWARD()) {
    return;
  }
  mode_ = AMBindedDisplayList_ListModeEnum_get_BACKWARD();
  
#line 146
  if (refresh) {
    [self editListWithAMDisplayList_Modification:(id<AMDisplayList_Modification>) check_protocol_cast(AMDisplayModifications_clear(), @protocol(AMDisplayList_Modification))];
  }
  
#line 150
  [((AMValueModel *) nil_chk(stateModel_)) changeWithId:AMBindedDisplayList_StateEnum_get_LOADING_EMPTY()];
  isLoadMoreBackwardRequested_ = NO;
  isLoadMoreBackwardRequested_ = NO;
  currentGeneration_++;
  [((AMDisplayWindow *) nil_chk(window_)) startInitBackward];
  
#line 156
  [((id<DKListEngineDisplayExt>) nil_chk(listEngine_)) loadBackwardWithInt:pageSize_ withDKListEngineDisplayLoadCallback:AMBindedDisplayList_coverWithDKListEngineDisplayLoadCallback_withInt_(self, [[AMBindedDisplayList_$3 alloc] initWithAMBindedDisplayList:self],
#line 169
  currentGeneration_)];
}


#line 173
- (void)initCenterWithLong:(jlong)centerSortKey
               withBoolean:(jboolean)refresh {
  
#line 174
  AMMVVMEngine_checkMainThread();
  
#line 176
  if (mode_ != nil && mode_ == AMBindedDisplayList_ListModeEnum_get_CENTER()) {
    return;
  }
  mode_ = AMBindedDisplayList_ListModeEnum_get_CENTER();
  
#line 181
  if (refresh) {
    [self editListWithAMDisplayList_Modification:(id<AMDisplayList_Modification>) check_protocol_cast(AMDisplayModifications_clear(), @protocol(AMDisplayList_Modification))];
  }
  
#line 185
  [((AMValueModel *) nil_chk(stateModel_)) changeWithId:AMBindedDisplayList_StateEnum_get_LOADING_EMPTY()];
  isLoadMoreBackwardRequested_ = NO;
  isLoadMoreBackwardRequested_ = NO;
  currentGeneration_++;
  [((AMDisplayWindow *) nil_chk(window_)) startInitCenter];
  
#line 191
  [((id<DKListEngineDisplayExt>) nil_chk(listEngine_)) loadCenterWithLong:centerSortKey withInt:pageSize_ withDKListEngineDisplayLoadCallback:AMBindedDisplayList_coverWithDKListEngineDisplayLoadCallback_withInt_(self, [[AMBindedDisplayList_$4 alloc] initWithAMBindedDisplayList:self],
#line 205
  currentGeneration_)];
}


#line 209
- (void)initSearchWithNSString:(NSString *)query
                   withBoolean:(jboolean)refresh {
  
#line 210
  AMMVVMEngine_checkMainThread();
  
#line 212
  if (isGlobalList__) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Global DisplayList can't perform search"];
  }
  
#line 216
  if (query == nil || ((jint) [((NSString *) nil_chk([query trim])) length]) == 0) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Query can't be null or empty"];
  }
  
#line 220
  if (mode_ != nil && mode_ == AMBindedDisplayList_ListModeEnum_get_SEARCH() && [((NSString *) nil_chk(self->query_)) isEqual:query]) {
    return;
  }
  self->mode_ = AMBindedDisplayList_ListModeEnum_get_SEARCH();
  self->query_ = query;
  
#line 226
  if (refresh) {
    [self editListWithAMDisplayList_Modification:(id<AMDisplayList_Modification>) check_protocol_cast(AMDisplayModifications_clear(), @protocol(AMDisplayList_Modification))];
  }
  
#line 230
  [((AMValueModel *) nil_chk(stateModel_)) changeWithId:AMBindedDisplayList_StateEnum_get_LOADING_EMPTY()];
  isLoadMoreBackwardRequested_ = NO;
  isLoadMoreBackwardRequested_ = NO;
  currentGeneration_++;
  [((AMDisplayWindow *) nil_chk(window_)) startInitForward];
  
#line 236
  [((id<DKListEngineDisplayExt>) nil_chk(listEngine_)) loadForwardWithNSString:query withInt:pageSize_ withDKListEngineDisplayLoadCallback:AMBindedDisplayList_coverWithDKListEngineDisplayLoadCallback_withInt_(self, [[AMBindedDisplayList_$5 alloc] initWithAMBindedDisplayList:self],
#line 249
  currentGeneration_)];
}


#line 255
- (void)loadMoreForward {
  AMBindedDisplayList_loadMoreForward(self);
}


#line 310
- (void)loadMoreBackward {
  AMBindedDisplayList_loadMoreBackward(self);
}


#line 356
- (void)dispose {
  
#line 357
  AMMVVMEngine_checkMainThread();
  
#line 359
  if (isGlobalList__) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Global DisplayList can't be disposed"];
  }
  
#line 363
  [((id<DKListEngineDisplayExt>) nil_chk(listEngine_)) unsubscribeWithDKListEngineDisplayListener:engineListener_];
}


#line 366
- (id<DKListEngineDisplayLoadCallback>)coverWithDKListEngineDisplayLoadCallback:(id<DKListEngineDisplayLoadCallback>)callback
                                                                        withInt:(jint)generation {
  return AMBindedDisplayList_coverWithDKListEngineDisplayLoadCallback_withInt_(self, callback, generation);
}

- (void)copyAllFieldsTo:(AMBindedDisplayList *)other {
  [super copyAllFieldsTo:other];
  other->listEngine_ = listEngine_;
  other->window_ = window_;
  other->engineListener_ = engineListener_;
  other->currentGeneration_ = currentGeneration_;
  other->isGlobalList__ = isGlobalList__;
  other->pageSize_ = pageSize_;
  other->loadGap_ = loadGap_;
  other->bindHook_ = bindHook_;
  other->stateModel_ = stateModel_;
  other->mode_ = mode_;
  other->query_ = query_;
  other->isLoadMoreForwardRequested_ = isLoadMoreForwardRequested_;
  other->isLoadMoreBackwardRequested_ = isLoadMoreBackwardRequested_;
}

+ (void)initialize {
  if (self == [AMBindedDisplayList class]) {
    AMBindedDisplayList_COMPARATOR_ =
#line 21
    [[AMBindedDisplayList_ListEngineComparator alloc] init];
    J2OBJC_SET_INITIALIZED(AMBindedDisplayList)
  }
}

@end

void AMBindedDisplayList_loadMoreForward(AMBindedDisplayList *self) {
  
#line 256
  AMMVVMEngine_checkMainThread();
  
#line 260
  if (self->isLoadMoreForwardRequested_) {
    
#line 262
    return;
  }
  
#line 265
  if (![((AMDisplayWindow *) nil_chk(self->window_)) startForwardLoading]) {
    
#line 267
    return;
  }
  
#line 270
  self->isLoadMoreForwardRequested_ = YES;
  jint gen = self->currentGeneration_;
  id<DKListEngineDisplayLoadCallback> callback = AMBindedDisplayList_coverWithDKListEngineDisplayLoadCallback_withInt_(self, [[AMBindedDisplayList_$6 alloc] initWithAMBindedDisplayList:self withInt:gen], self->currentGeneration_);
  
#line 300
  if (self->mode_ != AMBindedDisplayList_ListModeEnum_get_SEARCH()) {
    
#line 302
    [((id<DKListEngineDisplayExt>) nil_chk(self->listEngine_)) loadForwardWithLong:[((JavaLangLong *) nil_chk([self->window_ getCurrentForwardHead])) longLongValue] withInt:self->pageSize_ withDKListEngineDisplayLoadCallback:callback];
  }
  else {
    [((id<DKListEngineDisplayExt>) nil_chk(self->listEngine_)) loadForwardWithNSString:self->query_ withLong:[((JavaLangLong *) nil_chk([self->window_ getCurrentForwardHead])) longLongValue] withInt:self->pageSize_ withDKListEngineDisplayLoadCallback:callback];
  }
}

void AMBindedDisplayList_loadMoreBackward(AMBindedDisplayList *self) {
  
#line 311
  AMMVVMEngine_checkMainThread();
  
#line 313
  if (self->isLoadMoreBackwardRequested_) {
    return;
  }
  
#line 317
  if (![((AMDisplayWindow *) nil_chk(self->window_)) startBackwardLoading]) {
    return;
  }
  
#line 321
  self->isLoadMoreBackwardRequested_ = YES;
  jint gen = self->currentGeneration_;
  id<DKListEngineDisplayLoadCallback> callback = AMBindedDisplayList_coverWithDKListEngineDisplayLoadCallback_withInt_(self, [[AMBindedDisplayList_$7 alloc] initWithAMBindedDisplayList:self withInt:gen], self->currentGeneration_);
  
#line 348
  if (self->mode_ != AMBindedDisplayList_ListModeEnum_get_SEARCH()) {
    [((id<DKListEngineDisplayExt>) nil_chk(self->listEngine_)) loadBackwardWithLong:[((JavaLangLong *) nil_chk([self->window_ getCurrentBackwardHead])) longLongValue] withInt:self->pageSize_ withDKListEngineDisplayLoadCallback:callback];
  }
  else {
    
#line 351
    [((id<DKListEngineDisplayExt>) nil_chk(self->listEngine_)) loadBackwardWithNSString:self->query_ withLong:[((JavaLangLong *) nil_chk([self->window_ getCurrentBackwardHead])) longLongValue] withInt:self->pageSize_ withDKListEngineDisplayLoadCallback:callback];
  }
}

id<DKListEngineDisplayLoadCallback> AMBindedDisplayList_coverWithDKListEngineDisplayLoadCallback_withInt_(AMBindedDisplayList *self, id<DKListEngineDisplayLoadCallback> callback, jint generation) {
  
#line 367
  return [[AMBindedDisplayList_$8 alloc] initWithAMBindedDisplayList:self withInt:generation withDKListEngineDisplayLoadCallback:callback];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList)


#line 383
@implementation AMBindedDisplayList_ListEngineComparator


#line 386
- (jint)compareWithId:(id<DKListEngineItem>)o1
               withId:(id<DKListEngineItem>)o2 {
  
#line 387
  jlong lKey = [((id<DKListEngineItem>) nil_chk(o1)) getEngineSort];
  jlong rKey = [((id<DKListEngineItem>) nil_chk(o2)) getEngineSort];
  
#line 390
  if (lKey > rKey) {
    return -1;
  }
  else
#line 392
  if (lKey < rKey) {
    return 1;
  }
  else {
    
#line 395
    return 0;
  }
}

- (instancetype)init {
  return [super init];
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_ListEngineComparator)


#line 400
@implementation AMBindedDisplayList_EngineListener


#line 403
- (void)onItemRemovedWithLong:(jlong)id_ {
  
#line 405
  [this$0_ editListWithAMDisplayList_Modification:(id<AMDisplayList_Modification>) check_protocol_cast(AMDisplayModifications_removeWithLong_(id_), @protocol(AMDisplayList_Modification))];
}

- (void)onItemsRemovedWithLongArray:(IOSLongArray *)ids {
  
#line 411
  [this$0_ editListWithAMDisplayList_Modification:(id<AMDisplayList_Modification>) check_protocol_cast(AMDisplayModifications_removeWithLongArray_(ids), @protocol(AMDisplayList_Modification))];
}

- (void)addOrUpdateWithId:(BSBserObject<DKListEngineItem> *)item {
  
#line 417
  [this$0_ editListWithAMDisplayList_Modification:AMDisplayModifications_addOrUpdateWithDKListEngineItem_(item)];
}

- (void)addOrUpdateWithJavaUtilList:(id<JavaUtilList>)items {
  
#line 423
  [this$0_ editListWithAMDisplayList_Modification:AMDisplayModifications_addOrUpdateWithJavaUtilList_(items)];
}

- (void)onItemsReplacedWithJavaUtilList:(id<JavaUtilList>)items {
  
#line 429
  [this$0_ editListWithAMDisplayList_Modification:(id<AMDisplayList_Modification>) check_protocol_cast(AMDisplayModifications_clear(), @protocol(AMDisplayList_Modification))];
  [this$0_ editListWithAMDisplayList_Modification:AMDisplayModifications_addOrUpdateWithJavaUtilList_(items)];
}

- (void)onListClear {
  
#line 436
  [this$0_ editListWithAMDisplayList_Modification:(id<AMDisplayList_Modification>) check_protocol_cast(AMDisplayModifications_clear(), @protocol(AMDisplayList_Modification))];
}

- (instancetype)initWithAMBindedDisplayList:(AMBindedDisplayList *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(AMBindedDisplayList_EngineListener *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_EngineListener)

#line 440

BOOL AMBindedDisplayList_ListModeEnum_initialized = NO;

AMBindedDisplayList_ListModeEnum *AMBindedDisplayList_ListModeEnum_values_[4];

@implementation AMBindedDisplayList_ListModeEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

IOSObjectArray *AMBindedDisplayList_ListModeEnum_values() {
  AMBindedDisplayList_ListModeEnum_init();
  return [IOSObjectArray arrayWithObjects:AMBindedDisplayList_ListModeEnum_values_ count:4 type:AMBindedDisplayList_ListModeEnum_class_()];
}
+ (IOSObjectArray *)values {
  return AMBindedDisplayList_ListModeEnum_values();
}

+ (AMBindedDisplayList_ListModeEnum *)valueOfWithNSString:(NSString *)name {
  return AMBindedDisplayList_ListModeEnum_valueOfWithNSString_(name);
}

AMBindedDisplayList_ListModeEnum *AMBindedDisplayList_ListModeEnum_valueOfWithNSString_(NSString *name) {
  AMBindedDisplayList_ListModeEnum_init();
  for (int i = 0; i < 4; i++) {
    AMBindedDisplayList_ListModeEnum *e = AMBindedDisplayList_ListModeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [AMBindedDisplayList_ListModeEnum class]) {
    AMBindedDisplayList_ListModeEnum_FORWARD = [[AMBindedDisplayList_ListModeEnum alloc] initWithNSString:@"FORWARD" withInt:0];
    AMBindedDisplayList_ListModeEnum_BACKWARD = [[AMBindedDisplayList_ListModeEnum alloc] initWithNSString:@"BACKWARD" withInt:1];
    AMBindedDisplayList_ListModeEnum_CENTER = [[AMBindedDisplayList_ListModeEnum alloc] initWithNSString:@"CENTER" withInt:2];
    AMBindedDisplayList_ListModeEnum_SEARCH = [[AMBindedDisplayList_ListModeEnum alloc] initWithNSString:@"SEARCH" withInt:3];
    J2OBJC_SET_INITIALIZED(AMBindedDisplayList_ListModeEnum)
  }
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_ListModeEnum)

#line 444

BOOL AMBindedDisplayList_StateEnum_initialized = NO;

AMBindedDisplayList_StateEnum *AMBindedDisplayList_StateEnum_values_[3];

@implementation AMBindedDisplayList_StateEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

IOSObjectArray *AMBindedDisplayList_StateEnum_values() {
  AMBindedDisplayList_StateEnum_init();
  return [IOSObjectArray arrayWithObjects:AMBindedDisplayList_StateEnum_values_ count:3 type:AMBindedDisplayList_StateEnum_class_()];
}
+ (IOSObjectArray *)values {
  return AMBindedDisplayList_StateEnum_values();
}

+ (AMBindedDisplayList_StateEnum *)valueOfWithNSString:(NSString *)name {
  return AMBindedDisplayList_StateEnum_valueOfWithNSString_(name);
}

AMBindedDisplayList_StateEnum *AMBindedDisplayList_StateEnum_valueOfWithNSString_(NSString *name) {
  AMBindedDisplayList_StateEnum_init();
  for (int i = 0; i < 3; i++) {
    AMBindedDisplayList_StateEnum *e = AMBindedDisplayList_StateEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [AMBindedDisplayList_StateEnum class]) {
    AMBindedDisplayList_StateEnum_LOADING_EMPTY = [[AMBindedDisplayList_StateEnum alloc] initWithNSString:@"LOADING_EMPTY" withInt:0];
    AMBindedDisplayList_StateEnum_LOADED = [[AMBindedDisplayList_StateEnum alloc] initWithNSString:@"LOADED" withInt:1];
    AMBindedDisplayList_StateEnum_LOADED_EMPTY = [[AMBindedDisplayList_StateEnum alloc] initWithNSString:@"LOADED_EMPTY" withInt:2];
    J2OBJC_SET_INITIALIZED(AMBindedDisplayList_StateEnum)
  }
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_StateEnum)

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AMBindedDisplayList_BindHook)

@implementation AMBindedDisplayList_$1


#line 46
- (void)beforeDisplayWithJavaUtilList:(id<JavaUtilList>)list {
  
#line 47
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(list, AMBindedDisplayList_get_COMPARATOR_());
}

- (instancetype)init {
  return [super init];
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_$1)

@implementation AMBindedDisplayList_$2


#line 117
- (void)onLoadedWithJavaUtilList:(id<JavaUtilList>)items
                        withLong:(jlong)topSortKey
                        withLong:(jlong)bottomSortKey {
  
#line 118
  AMMVVMEngine_checkMainThread();
  
#line 122
  [((AMDisplayWindow *) nil_chk(this$0_->window_)) completeInitForwardWithJavaLangLong:JavaLangLong_valueOfWithLong_(bottomSortKey)];
  
#line 124
  if ([((id<JavaUtilList>) nil_chk(items)) size] != 0) {
    [this$0_ editListWithAMDisplayList_Modification:AMDisplayModifications_replaceWithJavaUtilList_(items)];
  }
  else {
    
#line 127
    [this$0_->window_ onForwardCompleted];
  }
}

- (instancetype)initWithAMBindedDisplayList:(AMBindedDisplayList *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(AMBindedDisplayList_$2 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_$2)

@implementation AMBindedDisplayList_$3


#line 158
- (void)onLoadedWithJavaUtilList:(id<JavaUtilList>)items
                        withLong:(jlong)topSortKey
                        withLong:(jlong)bottomSortKey {
  
#line 159
  AMMVVMEngine_checkMainThread();
  
#line 161
  [((AMDisplayWindow *) nil_chk(this$0_->window_)) completeInitBackwardWithJavaLangLong:JavaLangLong_valueOfWithLong_(topSortKey)];
  
#line 163
  if ([((id<JavaUtilList>) nil_chk(items)) size] != 0) {
    [this$0_ editListWithAMDisplayList_Modification:AMDisplayModifications_replaceWithJavaUtilList_(items)];
  }
  else {
    
#line 166
    [this$0_->window_ onBackwardCompleted];
  }
}

- (instancetype)initWithAMBindedDisplayList:(AMBindedDisplayList *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(AMBindedDisplayList_$3 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_$3)

@implementation AMBindedDisplayList_$4


#line 193
- (void)onLoadedWithJavaUtilList:(id<JavaUtilList>)items
                        withLong:(jlong)topSortKey
                        withLong:(jlong)bottomSortKey {
  
#line 194
  AMMVVMEngine_checkMainThread();
  
#line 196
  [((AMDisplayWindow *) nil_chk(this$0_->window_)) completeInitCenterWithJavaLangLong:JavaLangLong_valueOfWithLong_(bottomSortKey) withJavaLangLong:JavaLangLong_valueOfWithLong_(topSortKey)];
  
#line 198
  if ([((id<JavaUtilList>) nil_chk(items)) size] != 0) {
    [this$0_ editListWithAMDisplayList_Modification:AMDisplayModifications_addOrUpdateWithJavaUtilList_(items)];
  }
  else {
    
#line 201
    [this$0_->window_ onForwardCompleted];
    [this$0_->window_ onBackwardCompleted];
  }
}

- (instancetype)initWithAMBindedDisplayList:(AMBindedDisplayList *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(AMBindedDisplayList_$4 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_$4)

@implementation AMBindedDisplayList_$5


#line 238
- (void)onLoadedWithJavaUtilList:(id<JavaUtilList>)items
                        withLong:(jlong)topSortKey
                        withLong:(jlong)bottomSortKey {
  
#line 239
  AMMVVMEngine_checkMainThread();
  
#line 241
  [((AMDisplayWindow *) nil_chk(this$0_->window_)) completeInitForwardWithJavaLangLong:JavaLangLong_valueOfWithLong_(bottomSortKey)];
  
#line 243
  [this$0_ editListWithAMDisplayList_Modification:AMDisplayModifications_replaceWithJavaUtilList_(items)];
  
#line 245
  if ([((id<JavaUtilList>) nil_chk(items)) size] == 0) {
    [this$0_->window_ onForwardCompleted];
  }
}

- (instancetype)initWithAMBindedDisplayList:(AMBindedDisplayList *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(AMBindedDisplayList_$5 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_$5)

@implementation AMBindedDisplayList_$6


#line 274
- (void)onLoadedWithJavaUtilList:(id<JavaUtilList>)items
                        withLong:(jlong)topSortKey
                        withLong:(jlong)bottomSortKey {
  
#line 275
  AMMVVMEngine_checkMainThread();
  
#line 279
  [((AMDisplayWindow *) nil_chk(this$0_->window_)) completeForwardLoading];
  
#line 281
  if ([((id<JavaUtilList>) nil_chk(items)) size] == 0) {
    [this$0_->window_ onForwardCompleted];
    
#line 284
    this$0_->isLoadMoreForwardRequested_ = NO;
  }
  else {
    
#line 286
    [this$0_->window_ onForwardSliceLoadedWithJavaLangLong:JavaLangLong_valueOfWithLong_(bottomSortKey)];
    [this$0_ editListWithAMDisplayList_Modification:AMDisplayModifications_addOnlyWithJavaUtilList_(items) withJavaLangRunnable:[[AMBindedDisplayList_$6_$1 alloc] initWithAMBindedDisplayList_$6:self]];
  }
}

- (instancetype)initWithAMBindedDisplayList:(AMBindedDisplayList *)outer$
                                    withInt:(jint)capture$0 {
  this$0_ = outer$;
  val$gen_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(AMBindedDisplayList_$6 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
  other->val$gen_ = val$gen_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_$6)

@implementation AMBindedDisplayList_$6_$1


#line 289
- (void)run {
  
#line 290
  if (this$0_->val$gen_ == this$0_->this$0_->currentGeneration_) {
    
#line 292
    this$0_->this$0_->isLoadMoreForwardRequested_ = NO;
  }
}

- (instancetype)initWithAMBindedDisplayList_$6:(AMBindedDisplayList_$6 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(AMBindedDisplayList_$6_$1 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_$6_$1)

@implementation AMBindedDisplayList_$7


#line 325
- (void)onLoadedWithJavaUtilList:(id<JavaUtilList>)items
                        withLong:(jlong)topSortKey
                        withLong:(jlong)bottomSortKey {
  
#line 326
  AMMVVMEngine_checkMainThread();
  
#line 328
  [((AMDisplayWindow *) nil_chk(this$0_->window_)) endBackwardLoading];
  
#line 330
  if ([((id<JavaUtilList>) nil_chk(items)) size] == 0) {
    [this$0_->window_ onBackwardCompleted];
    
#line 333
    this$0_->isLoadMoreBackwardRequested_ = NO;
  }
  else {
    
#line 335
    [this$0_->window_ onBackwardSliceLoadedWithJavaLangLong:JavaLangLong_valueOfWithLong_(bottomSortKey)];
    [this$0_ editListWithAMDisplayList_Modification:AMDisplayModifications_addOnlyWithJavaUtilList_(items) withJavaLangRunnable:[[AMBindedDisplayList_$7_$1 alloc] initWithAMBindedDisplayList_$7:self]];
  }
}

- (instancetype)initWithAMBindedDisplayList:(AMBindedDisplayList *)outer$
                                    withInt:(jint)capture$0 {
  this$0_ = outer$;
  val$gen_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(AMBindedDisplayList_$7 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
  other->val$gen_ = val$gen_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_$7)

@implementation AMBindedDisplayList_$7_$1


#line 338
- (void)run {
  
#line 339
  if (this$0_->val$gen_ == this$0_->this$0_->currentGeneration_) {
    this$0_->this$0_->isLoadMoreBackwardRequested_ = NO;
  }
}

- (instancetype)initWithAMBindedDisplayList_$7:(AMBindedDisplayList_$7 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(AMBindedDisplayList_$7_$1 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_$7_$1)

@implementation AMBindedDisplayList_$8


#line 369
- (void)onLoadedWithJavaUtilList:(id<JavaUtilList>)items
                        withLong:(jlong)topSortKey
                        withLong:(jlong)bottomSortKey {
  
#line 370
  AMMVVMEngine_runOnUiThreadWithJavaLangRunnable_([[AMBindedDisplayList_$8_$1 alloc] initWithAMBindedDisplayList_$8:self withJavaUtilList:items withLong:topSortKey withLong:bottomSortKey]);
}

- (instancetype)initWithAMBindedDisplayList:(AMBindedDisplayList *)outer$
                                    withInt:(jint)capture$0
        withDKListEngineDisplayLoadCallback:(id<DKListEngineDisplayLoadCallback>)capture$1 {
  this$0_ = outer$;
  val$generation_ = capture$0;
  val$callback_ = capture$1;
  return [super init];
}

- (void)copyAllFieldsTo:(AMBindedDisplayList_$8 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
  other->val$generation_ = val$generation_;
  other->val$callback_ = val$callback_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_$8)

@implementation AMBindedDisplayList_$8_$1


#line 372
- (void)run {
  
#line 373
  if (this$0_->val$generation_ != this$0_->this$0_->currentGeneration_) {
    return;
  }
  [((id<DKListEngineDisplayLoadCallback>) nil_chk(this$0_->val$callback_)) onLoadedWithJavaUtilList:val$items_ withLong:val$topSortKey_ withLong:val$bottomSortKey_];
}

- (instancetype)initWithAMBindedDisplayList_$8:(AMBindedDisplayList_$8 *)outer$
                              withJavaUtilList:(id<JavaUtilList>)capture$0
                                      withLong:(jlong)capture$1
                                      withLong:(jlong)capture$2 {
  this$0_ = outer$;
  val$items_ = capture$0;
  val$topSortKey_ = capture$1;
  val$bottomSortKey_ = capture$2;
  return [super init];
}

- (void)copyAllFieldsTo:(AMBindedDisplayList_$8_$1 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
  other->val$items_ = val$items_;
  other->val$topSortKey_ = val$topSortKey_;
  other->val$bottomSortKey_ = val$bottomSortKey_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMBindedDisplayList_$8_$1)
