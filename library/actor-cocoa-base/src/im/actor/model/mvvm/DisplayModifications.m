//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/mvvm/DisplayModifications.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/engine/ListEngineItem.h"
#include "im/actor/model/mvvm/DisplayList.h"
#include "im/actor/model/mvvm/DisplayModifications.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface AMDisplayModifications_$1 () {
 @public
  id<DKListEngineItem> val$item_;
}
@end

J2OBJC_FIELD_SETTER(AMDisplayModifications_$1, val$item_, id)

@interface AMDisplayModifications_$2 () {
 @public
  id<JavaUtilList> val$items_;
}
@end

J2OBJC_FIELD_SETTER(AMDisplayModifications_$2, val$items_, id<JavaUtilList>)

@interface AMDisplayModifications_$3 () {
 @public
  id<JavaUtilList> val$items_;
}
@end

J2OBJC_FIELD_SETTER(AMDisplayModifications_$3, val$items_, id<JavaUtilList>)

@interface AMDisplayModifications_$4 () {
 @public
  id<JavaUtilList> val$items_;
}
@end

J2OBJC_FIELD_SETTER(AMDisplayModifications_$4, val$items_, id<JavaUtilList>)

@interface AMDisplayModifications_$5 () {
 @public
  jlong val$dstId_;
}
@end

@interface AMDisplayModifications_$6 () {
 @public
  IOSLongArray *val$dstIds_;
}
@end

J2OBJC_FIELD_SETTER(AMDisplayModifications_$6, val$dstIds_, IOSLongArray *)

@implementation AMDisplayModifications

+ (id<AMDisplayList_Modification>)addOrUpdateWithDKListEngineItem:(id<DKListEngineItem>)item {
  return AMDisplayModifications_addOrUpdateWithDKListEngineItem_(item);
}

+ (id<AMDisplayList_Modification>)addOrUpdateWithJavaUtilList:(id<JavaUtilList>)items {
  return AMDisplayModifications_addOrUpdateWithJavaUtilList_(items);
}

+ (id<AMDisplayList_Modification>)addOnlyWithJavaUtilList:(id<JavaUtilList>)items {
  return AMDisplayModifications_addOnlyWithJavaUtilList_(items);
}

+ (id<AMDisplayList_Modification>)replaceWithJavaUtilList:(id<JavaUtilList>)items {
  return AMDisplayModifications_replaceWithJavaUtilList_(items);
}

+ (id<AMDisplayList_Modification>)removeWithLong:(jlong)dstId {
  return AMDisplayModifications_removeWithLong_(dstId);
}

+ (id<AMDisplayList_Modification>)removeWithLongArray:(IOSLongArray *)dstIds {
  return AMDisplayModifications_removeWithLongArray_(dstIds);
}

+ (id<AMDisplayList_Modification>)clear {
  return AMDisplayModifications_clear();
}

- (instancetype)init {
  return [super init];
}

@end

id<AMDisplayList_Modification> AMDisplayModifications_addOrUpdateWithDKListEngineItem_(id<DKListEngineItem> item) {
  AMDisplayModifications_init();
  return [[AMDisplayModifications_$1 alloc] initWithDKListEngineItem:item];
}

id<AMDisplayList_Modification> AMDisplayModifications_addOrUpdateWithJavaUtilList_(id<JavaUtilList> items) {
  AMDisplayModifications_init();
  return [[AMDisplayModifications_$2 alloc] initWithJavaUtilList:items];
}

id<AMDisplayList_Modification> AMDisplayModifications_addOnlyWithJavaUtilList_(id<JavaUtilList> items) {
  AMDisplayModifications_init();
  return [[AMDisplayModifications_$3 alloc] initWithJavaUtilList:items];
}

id<AMDisplayList_Modification> AMDisplayModifications_replaceWithJavaUtilList_(id<JavaUtilList> items) {
  AMDisplayModifications_init();
  return [[AMDisplayModifications_$4 alloc] initWithJavaUtilList:items];
}

id<AMDisplayList_Modification> AMDisplayModifications_removeWithLong_(jlong dstId) {
  AMDisplayModifications_init();
  return [[AMDisplayModifications_$5 alloc] initWithLong:dstId];
}

id<AMDisplayList_Modification> AMDisplayModifications_removeWithLongArray_(IOSLongArray *dstIds) {
  AMDisplayModifications_init();
  return [[AMDisplayModifications_$6 alloc] initWithLongArray:dstIds];
}

id<AMDisplayList_Modification> AMDisplayModifications_clear() {
  AMDisplayModifications_init();
  return [[AMDisplayModifications_$7 alloc] init];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMDisplayModifications)

@implementation AMDisplayModifications_$1

- (void)modifyWithJavaUtilList:(id<JavaUtilList>)sourceList {
  jlong dstId = [((id<DKListEngineItem>) nil_chk(val$item_)) getEngineId];
  id<JavaUtilIterator> iterator = [((id<JavaUtilList>) nil_chk(sourceList)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
    id<DKListEngineItem> src = [iterator next];
    if ([((id<DKListEngineItem>) nil_chk(src)) getEngineId] == dstId) {
      [iterator remove];
    }
  }
  [sourceList addWithId:val$item_];
}

- (instancetype)initWithDKListEngineItem:(id<DKListEngineItem>)capture$0 {
  val$item_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(AMDisplayModifications_$1 *)other {
  [super copyAllFieldsTo:other];
  other->val$item_ = val$item_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMDisplayModifications_$1)

@implementation AMDisplayModifications_$2

- (void)modifyWithJavaUtilList:(id<JavaUtilList>)sourceList {
  JavaUtilHashSet *keys = [[JavaUtilHashSet alloc] init];
  for (id<DKListEngineItem> __strong i in nil_chk(val$items_)) {
    [keys addWithId:JavaLangLong_valueOfWithLong_([((id<DKListEngineItem>) nil_chk(i)) getEngineId])];
  }
  id<JavaUtilIterator> iterator = [((id<JavaUtilList>) nil_chk(sourceList)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
    id<DKListEngineItem> src = [iterator next];
    if ([keys containsWithId:JavaLangLong_valueOfWithLong_([((id<DKListEngineItem>) nil_chk(src)) getEngineId])]) {
      [iterator remove];
    }
  }
  [sourceList addAllWithJavaUtilCollection:val$items_];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  val$items_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(AMDisplayModifications_$2 *)other {
  [super copyAllFieldsTo:other];
  other->val$items_ = val$items_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMDisplayModifications_$2)

@implementation AMDisplayModifications_$3

- (void)modifyWithJavaUtilList:(id<JavaUtilList>)sourceList {
  JavaUtilArrayList *toAdd = [[JavaUtilArrayList alloc] init];
  for (id<DKListEngineItem> __strong t in nil_chk(val$items_)) {
    {
      for (id<DKListEngineItem> __strong srcT in nil_chk(sourceList)) {
        if ([((id<DKListEngineItem>) nil_chk(srcT)) getEngineId] == [((id<DKListEngineItem>) nil_chk(t)) getEngineId]) {
          goto continue_outer;
        }
      }
      [toAdd addWithId:t];
    }
    continue_outer: ;
  }
  [((id<JavaUtilList>) nil_chk(sourceList)) addAllWithJavaUtilCollection:toAdd];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  val$items_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(AMDisplayModifications_$3 *)other {
  [super copyAllFieldsTo:other];
  other->val$items_ = val$items_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMDisplayModifications_$3)

@implementation AMDisplayModifications_$4

- (void)modifyWithJavaUtilList:(id<JavaUtilList>)sourceList {
  [((id<JavaUtilList>) nil_chk(sourceList)) clear];
  [sourceList addAllWithJavaUtilCollection:val$items_];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  val$items_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(AMDisplayModifications_$4 *)other {
  [super copyAllFieldsTo:other];
  other->val$items_ = val$items_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMDisplayModifications_$4)

@implementation AMDisplayModifications_$5

- (void)modifyWithJavaUtilList:(id<JavaUtilList>)sourceList {
  id<JavaUtilIterator> iterator = [((id<JavaUtilList>) nil_chk(sourceList)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
    id<DKListEngineItem> src = [iterator next];
    if ([((id<DKListEngineItem>) nil_chk(src)) getEngineId] == val$dstId_) {
      [iterator remove];
    }
  }
}

- (instancetype)initWithLong:(jlong)capture$0 {
  val$dstId_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(AMDisplayModifications_$5 *)other {
  [super copyAllFieldsTo:other];
  other->val$dstId_ = val$dstId_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMDisplayModifications_$5)

@implementation AMDisplayModifications_$6

- (void)modifyWithJavaUtilList:(id<JavaUtilList>)sourceList {
  id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(sourceList)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id<DKListEngineItem> value = [it next];
    jlong srcId = [((id<DKListEngineItem>) nil_chk(value)) getEngineId];
    {
      IOSLongArray *a__ = val$dstIds_;
      jlong const *b__ = ((IOSLongArray *) nil_chk(a__))->buffer_;
      jlong const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        jlong dstId = *b__++;
        if (dstId == srcId) {
          [it remove];
          break;
        }
      }
    }
  }
}

- (instancetype)initWithLongArray:(IOSLongArray *)capture$0 {
  val$dstIds_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(AMDisplayModifications_$6 *)other {
  [super copyAllFieldsTo:other];
  other->val$dstIds_ = val$dstIds_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMDisplayModifications_$6)

@implementation AMDisplayModifications_$7

- (void)modifyWithJavaUtilList:(id<JavaUtilList>)sourceList {
  [((id<JavaUtilList>) nil_chk(sourceList)) clear];
}

- (instancetype)init {
  return [super init];
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMDisplayModifications_$7)
