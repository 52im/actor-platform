//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/entity/ReadState.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/entity/ReadState.h"
#include "java/io/IOException.h"

@interface AMReadState () {
 @public
  AMPeer *peer_;
  jlong lastReadSortingDate_;
}
- (instancetype)init;
@end

J2OBJC_FIELD_SETTER(AMReadState, peer_, AMPeer *)

@implementation AMReadState

+ (AMReadState *)fromBytesWithByteArray:(IOSByteArray *)data {
  return AMReadState_fromBytesWithByteArray_(data);
}

- (instancetype)initWithAMPeer:(AMPeer *)peer
                      withLong:(jlong)lastReadSortingDate {
  if (self = [super init]) {
    self->peer_ = peer;
    self->lastReadSortingDate_ = lastReadSortingDate;
  }
  return self;
}

- (instancetype)init {
  return [super init];
}

- (AMPeer *)getPeer {
  return peer_;
}

- (jlong)getLastReadSortingDate {
  return lastReadSortingDate_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  peer_ = AMPeer_fromUniqueIdWithLong_([((BSBserValues *) nil_chk(values)) getLongWithInt:1]);
  lastReadSortingDate_ = [values getLongWithInt:2];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  [((BSBserWriter *) nil_chk(writer)) writeLongWithInt:1 withLong:[((AMPeer *) nil_chk(peer_)) getUnuqueId]];
  [writer writeLongWithInt:2 withLong:lastReadSortingDate_];
}

- (jlong)getEngineId {
  return [((AMPeer *) nil_chk(peer_)) getUnuqueId];
}

- (void)copyAllFieldsTo:(AMReadState *)other {
  [super copyAllFieldsTo:other];
  other->peer_ = peer_;
  other->lastReadSortingDate_ = lastReadSortingDate_;
}

@end

AMReadState *AMReadState_fromBytesWithByteArray_(IOSByteArray *data) {
  AMReadState_init();
  return ((AMReadState *) BSBser_parseWithBSBserObject_withByteArray_([[AMReadState alloc] init], data));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMReadState)
