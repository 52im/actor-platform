//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/entity/DialogBuilder.java
//

#include "J2ObjC_source.h"
#include "im/actor/model/entity/Avatar.h"
#include "im/actor/model/entity/ContentType.h"
#include "im/actor/model/entity/Dialog.h"
#include "im/actor/model/entity/DialogBuilder.h"
#include "im/actor/model/entity/MessageState.h"
#include "im/actor/model/entity/Peer.h"

@interface AMDialogBuilder () {
 @public
  AMPeer *peer_;
  jlong sortKey_;
  NSString *dialogTitle_;
  AMAvatar *dialogAvatar_;
  jint unreadCount_;
  jlong rid_;
  AMContentTypeEnum *messageType_;
  NSString *text_;
  AMMessageStateEnum *status_;
  jint senderId_;
  jlong time_;
  jint relatedUid_;
}
@end

J2OBJC_FIELD_SETTER(AMDialogBuilder, peer_, AMPeer *)
J2OBJC_FIELD_SETTER(AMDialogBuilder, dialogTitle_, NSString *)
J2OBJC_FIELD_SETTER(AMDialogBuilder, dialogAvatar_, AMAvatar *)
J2OBJC_FIELD_SETTER(AMDialogBuilder, messageType_, AMContentTypeEnum *)
J2OBJC_FIELD_SETTER(AMDialogBuilder, text_, NSString *)
J2OBJC_FIELD_SETTER(AMDialogBuilder, status_, AMMessageStateEnum *)

@implementation AMDialogBuilder

- (instancetype)init {
  if (self = [super init]) {
    relatedUid_ = 0;
  }
  return self;
}

- (instancetype)initWithAMDialog:(AMDialog *)dialog {
  if (self = [super init]) {
    relatedUid_ = 0;
    peer_ = [((AMDialog *) nil_chk(dialog)) getPeer];
    sortKey_ = [dialog getSortDate];
    dialogTitle_ = [dialog getDialogTitle];
    dialogAvatar_ = [dialog getDialogAvatar];
    unreadCount_ = [dialog getUnreadCount];
    rid_ = [dialog getRid];
    messageType_ = [dialog getMessageType];
    text_ = [dialog getText];
    status_ = [dialog getStatus];
    senderId_ = [dialog getSenderId];
    time_ = [dialog getDate];
    relatedUid_ = [dialog getRelatedUid];
  }
  return self;
}

- (AMDialogBuilder *)setPeerWithAMPeer:(AMPeer *)peer {
  self->peer_ = peer;
  return self;
}

- (AMDialogBuilder *)setSortKeyWithLong:(jlong)sortKey {
  self->sortKey_ = sortKey;
  return self;
}

- (AMDialogBuilder *)setDialogTitleWithNSString:(NSString *)dialogTitle {
  self->dialogTitle_ = dialogTitle;
  return self;
}

- (AMDialogBuilder *)setUnreadCountWithInt:(jint)unreadCount {
  self->unreadCount_ = unreadCount;
  return self;
}

- (AMDialogBuilder *)setRidWithLong:(jlong)rid {
  self->rid_ = rid;
  return self;
}

- (AMDialogBuilder *)setMessageTypeWithAMContentTypeEnum:(AMContentTypeEnum *)messageType {
  self->messageType_ = messageType;
  return self;
}

- (AMDialogBuilder *)setTextWithNSString:(NSString *)text {
  self->text_ = text;
  return self;
}

- (AMDialogBuilder *)setStatusWithAMMessageStateEnum:(AMMessageStateEnum *)status {
  self->status_ = status;
  return self;
}

- (AMDialogBuilder *)setSenderIdWithInt:(jint)senderId {
  self->senderId_ = senderId;
  return self;
}

- (AMDialogBuilder *)setTimeWithLong:(jlong)time {
  self->time_ = time;
  return self;
}

- (AMDialogBuilder *)setRelatedUidWithInt:(jint)relatedUid {
  self->relatedUid_ = relatedUid;
  return self;
}

- (AMDialogBuilder *)setDialogAvatarWithAMAvatar:(AMAvatar *)avatar {
  self->dialogAvatar_ = avatar;
  return self;
}

- (AMDialog *)createDialog {
  return [[AMDialog alloc] initWithAMPeer:peer_ withLong:sortKey_ withNSString:dialogTitle_ withAMAvatar:dialogAvatar_ withInt:unreadCount_ withLong:rid_ withAMContentTypeEnum:messageType_ withNSString:text_ withAMMessageStateEnum:status_ withInt:senderId_ withLong:time_ withInt:relatedUid_];
}

- (void)copyAllFieldsTo:(AMDialogBuilder *)other {
  [super copyAllFieldsTo:other];
  other->peer_ = peer_;
  other->sortKey_ = sortKey_;
  other->dialogTitle_ = dialogTitle_;
  other->dialogAvatar_ = dialogAvatar_;
  other->unreadCount_ = unreadCount_;
  other->rid_ = rid_;
  other->messageType_ = messageType_;
  other->text_ = text_;
  other->status_ = status_;
  other->senderId_ = senderId_;
  other->time_ = time_;
  other->relatedUid_ = relatedUid_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMDialogBuilder)
