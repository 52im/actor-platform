//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/network/ActorApi.java
//

#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/network/ActorApi.java"

#include "J2ObjC_source.h"
#include "im/actor/model/NetworkProvider.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/network/ActorApi.h"
#include "im/actor/model/network/ActorApiCallback.h"
#include "im/actor/model/network/AuthKeyStorage.h"
#include "im/actor/model/network/Endpoints.h"
#include "im/actor/model/network/RpcCallback.h"
#include "im/actor/model/network/api/ApiBroker.h"
#include "im/actor/model/network/parser/Request.h"
#include "java/lang/RuntimeException.h"

@interface AMActorApi () {
 @public
  DKActorRef *apiBroker_;
}
@end

J2OBJC_FIELD_SETTER(AMActorApi, apiBroker_, DKActorRef *)


#line 12
@implementation AMActorApi


#line 15
- (instancetype)initWithAMEndpoints:(AMEndpoints *)endpoints
               withAMAuthKeyStorage:(id<AMAuthKeyStorage>)keyStorage
             withAMActorApiCallback:(id<AMActorApiCallback>)callback
              withAMNetworkProvider:(id<AMNetworkProvider>)networkProvider {
  if (self = [super init]) {
    
#line 17
    self->apiBroker_ = ImActorModelNetworkApiApiBroker_getWithAMEndpoints_withAMAuthKeyStorage_withAMActorApiCallback_withAMNetworkProvider_(endpoints, keyStorage, callback, networkProvider);
  }
  return self;
}


#line 20
- (void)requestWithImActorModelNetworkParserRequest:(ImActorModelNetworkParserRequest *)request
                                  withAMRpcCallback:(id<AMRpcCallback>)callback {
  
#line 21
  if (request == nil) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Request can't be null"];
  }
  [((DKActorRef *) nil_chk(self->apiBroker_)) sendWithId:[[ImActorModelNetworkApiApiBroker_PerformRequest alloc] initWithImActorModelNetworkParserRequest:request withAMRpcCallback:callback]];
}

- (void)copyAllFieldsTo:(AMActorApi *)other {
  [super copyAllFieldsTo:other];
  other->apiBroker_ = apiBroker_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMActorApi)
