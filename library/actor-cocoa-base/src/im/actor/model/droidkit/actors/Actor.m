//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/droidkit/actors/Actor.java
//

#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/droidkit/actors/Actor.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/actors/Actor.h"
#include "im/actor/model/droidkit/actors/ActorContext.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/droidkit/actors/ActorSelection.h"
#include "im/actor/model/droidkit/actors/ActorSystem.h"
#include "im/actor/model/droidkit/actors/debug/TraceInterface.h"
#include "im/actor/model/droidkit/actors/extensions/RunnableExtension.h"
#include "im/actor/model/droidkit/actors/mailbox/Mailbox.h"
#include "im/actor/model/droidkit/actors/messages/DeadLetter.h"
#include "im/actor/model/droidkit/actors/tasks/ActorAskImpl.h"
#include "im/actor/model/droidkit/actors/tasks/AskCallback.h"
#include "im/actor/model/droidkit/actors/tasks/AskFuture.h"
#include "java/util/ArrayList.h"

__attribute__((unused)) static DKActorSystem *DKActor_system(DKActor *self);
__attribute__((unused)) static DKActorRef *DKActor_self__(DKActor *self);
__attribute__((unused)) static DKActorRef *DKActor_sender(DKActor *self);

@interface DKActor () {
 @public
  NSString *path_;
  DKActorContext *context__;
  DKMailbox *mailbox_;
  ImActorModelDroidkitActorsTasksActorAskImpl *askPattern_;
  JavaUtilArrayList *extensions_;
}
@end

J2OBJC_FIELD_SETTER(DKActor, path_, NSString *)
J2OBJC_FIELD_SETTER(DKActor, context__, DKActorContext *)
J2OBJC_FIELD_SETTER(DKActor, mailbox_, DKMailbox *)
J2OBJC_FIELD_SETTER(DKActor, askPattern_, ImActorModelDroidkitActorsTasksActorAskImpl *)
J2OBJC_FIELD_SETTER(DKActor, extensions_, JavaUtilArrayList *)


#line 18
@implementation DKActor


#line 28
- (instancetype)init {
  if (self = [super init]) {
    extensions_ =
#line 26
    [[JavaUtilArrayList alloc] init];
  }
  return self;
}


#line 40
- (void)initActorWithNSString:(NSString *)path
           withDKActorContext:(DKActorContext *)context
                withDKMailbox:(DKMailbox *)mailbox {
  
#line 41
  self->path_ = path;
  self->context__ = context;
  self->mailbox_ = mailbox;
  self->askPattern_ = [[ImActorModelDroidkitActorsTasksActorAskImpl alloc] initWithDKActorRef:DKActor_self__(self)];
  [((JavaUtilArrayList *) nil_chk(self->extensions_)) addWithId:askPattern_];
  [self->extensions_ addWithId:[[ImActorModelDroidkitActorsExtensionsRunnableExtension alloc] init]];
}


#line 54
- (JavaUtilArrayList *)getExtensions {
  
#line 55
  return extensions_;
}


#line 63
- (DKActorSystem *)system {
  return DKActor_system(self);
}


#line 72
- (DKActorRef *)self__ {
  return DKActor_self__(self);
}


#line 81
- (DKActorContext *)context {
  
#line 82
  return context__;
}


#line 90
- (DKActorRef *)sender {
  return DKActor_sender(self);
}


#line 99
- (NSString *)getPath {
  
#line 100
  return path_;
}


#line 108
- (DKMailbox *)getMailbox {
  
#line 109
  return mailbox_;
}


#line 115
- (void)preStart {
}


#line 124
- (void)onReceiveWithId:(id)message {
  
#line 125
  [self dropWithId:message];
}


#line 131
- (void)postStop {
}


#line 138
- (void)finallyStop {
}


#line 147
- (void)replyWithId:(id)message {
  
#line 148
  if ([((DKActorContext *) nil_chk(context__)) sender] != nil) {
    [((DKActorRef *) nil_chk([context__ sender])) sendWithId:message withDKActorRef:DKActor_self__(self)];
  }
}


#line 158
- (void)dropWithId:(id)message {
  
#line 159
  if ([((DKActorSystem *) nil_chk(DKActor_system(self))) getTraceInterface] != nil) {
    [((id<ImActorModelDroidkitActorsDebugTraceInterface>) nil_chk([((DKActorSystem *) nil_chk(DKActor_system(self))) getTraceInterface])) onDropWithDKActorRef:DKActor_sender(self) withId:message withDKActor:self];
  }
  [self replyWithId:[[ImActorModelDroidkitActorsMessagesDeadLetter alloc] initWithId:message]];
}


#line 171
- (ImActorModelDroidkitActorsTasksAskFuture *)combineWithImActorModelDroidkitActorsTasksAskFutureArray:(IOSObjectArray *)futures {
  
#line 172
  return [((ImActorModelDroidkitActorsTasksActorAskImpl *) nil_chk(askPattern_)) combineWithImActorModelDroidkitActorsTasksAskFutureArray:futures];
}


#line 182
- (ImActorModelDroidkitActorsTasksAskFuture *)combineWithImActorModelDroidkitActorsTasksAskCallback:(id<ImActorModelDroidkitActorsTasksAskCallback>)callback
                                                  withImActorModelDroidkitActorsTasksAskFutureArray:(IOSObjectArray *)futures {
  
#line 183
  ImActorModelDroidkitActorsTasksAskFuture *future = [self combineWithImActorModelDroidkitActorsTasksAskFutureArray:futures];
  [((ImActorModelDroidkitActorsTasksAskFuture *) nil_chk(future)) addListenerWithImActorModelDroidkitActorsTasksAskCallback:callback];
  return future;
}


#line 194
- (ImActorModelDroidkitActorsTasksAskFuture *)askWithDKActorSelection:(DKActorSelection *)selection {
  
#line 195
  return [((ImActorModelDroidkitActorsTasksActorAskImpl *) nil_chk(askPattern_)) askWithDKActorRef:[((DKActorSystem *) nil_chk(DKActor_system(self))) actorOfWithDKActorSelection:selection] withLong:0 withImActorModelDroidkitActorsTasksAskCallback:nil];
}


#line 205
- (ImActorModelDroidkitActorsTasksAskFuture *)askWithDKActorSelection:(DKActorSelection *)selection
                                                             withLong:(jlong)timeout {
  
#line 206
  return [((ImActorModelDroidkitActorsTasksActorAskImpl *) nil_chk(askPattern_)) askWithDKActorRef:[((DKActorSystem *) nil_chk(DKActor_system(self))) actorOfWithDKActorSelection:selection] withLong:timeout withImActorModelDroidkitActorsTasksAskCallback:nil];
}


#line 216
- (ImActorModelDroidkitActorsTasksAskFuture *)askWithDKActorSelection:(DKActorSelection *)selection
                       withImActorModelDroidkitActorsTasksAskCallback:(id<ImActorModelDroidkitActorsTasksAskCallback>)callback {
  
#line 217
  return [((ImActorModelDroidkitActorsTasksActorAskImpl *) nil_chk(askPattern_)) askWithDKActorRef:[((DKActorSystem *) nil_chk(DKActor_system(self))) actorOfWithDKActorSelection:selection] withLong:0 withImActorModelDroidkitActorsTasksAskCallback:callback];
}


#line 228
- (ImActorModelDroidkitActorsTasksAskFuture *)askWithDKActorSelection:(DKActorSelection *)selection
                                                             withLong:(jlong)timeout
                       withImActorModelDroidkitActorsTasksAskCallback:(id<ImActorModelDroidkitActorsTasksAskCallback>)callback {
  
#line 229
  return [((ImActorModelDroidkitActorsTasksActorAskImpl *) nil_chk(askPattern_)) askWithDKActorRef:[((DKActorSystem *) nil_chk(DKActor_system(self))) actorOfWithDKActorSelection:selection] withLong:timeout withImActorModelDroidkitActorsTasksAskCallback:callback];
}


#line 238
- (ImActorModelDroidkitActorsTasksAskFuture *)askWithDKActorRef:(DKActorRef *)ref {
  
#line 239
  return [((ImActorModelDroidkitActorsTasksActorAskImpl *) nil_chk(askPattern_)) askWithDKActorRef:ref withLong:0 withImActorModelDroidkitActorsTasksAskCallback:nil];
}


#line 249
- (ImActorModelDroidkitActorsTasksAskFuture *)askWithDKActorRef:(DKActorRef *)ref
                                                       withLong:(jlong)timeout {
  
#line 250
  return [((ImActorModelDroidkitActorsTasksActorAskImpl *) nil_chk(askPattern_)) askWithDKActorRef:ref withLong:timeout withImActorModelDroidkitActorsTasksAskCallback:nil];
}


#line 260
- (ImActorModelDroidkitActorsTasksAskFuture *)askWithDKActorRef:(DKActorRef *)ref
                 withImActorModelDroidkitActorsTasksAskCallback:(id<ImActorModelDroidkitActorsTasksAskCallback>)callback {
  
#line 261
  return [((ImActorModelDroidkitActorsTasksActorAskImpl *) nil_chk(askPattern_)) askWithDKActorRef:ref withLong:0 withImActorModelDroidkitActorsTasksAskCallback:callback];
}


#line 272
- (ImActorModelDroidkitActorsTasksAskFuture *)askWithDKActorRef:(DKActorRef *)ref
                                                       withLong:(jlong)timeout
                 withImActorModelDroidkitActorsTasksAskCallback:(id<ImActorModelDroidkitActorsTasksAskCallback>)callback {
  
#line 273
  return [((ImActorModelDroidkitActorsTasksActorAskImpl *) nil_chk(askPattern_)) askWithDKActorRef:ref withLong:timeout withImActorModelDroidkitActorsTasksAskCallback:callback];
}

- (void)copyAllFieldsTo:(DKActor *)other {
  [super copyAllFieldsTo:other];
  other->path_ = path_;
  other->context__ = context__;
  other->mailbox_ = mailbox_;
  other->askPattern_ = askPattern_;
  other->extensions_ = extensions_;
}

@end

DKActorSystem *DKActor_system(DKActor *self) {
  
#line 64
  return [((DKActorContext *) nil_chk(self->context__)) getSystem];
}

DKActorRef *DKActor_self__(DKActor *self) {
  
#line 73
  return [((DKActorContext *) nil_chk(self->context__)) getSelf];
}

DKActorRef *DKActor_sender(DKActor *self) {
  
#line 91
  return [((DKActorContext *) nil_chk(self->context__)) sender];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DKActor)
