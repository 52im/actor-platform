//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/modules/Files.java
//

#line 1 "/Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/modules/Files.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/Configuration.h"
#include "im/actor/model/StorageProvider.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/droidkit/actors/ActorSystem.h"
#include "im/actor/model/droidkit/actors/Props.h"
#include "im/actor/model/droidkit/engine/KeyValueEngine.h"
#include "im/actor/model/droidkit/engine/KeyValueStorage.h"
#include "im/actor/model/entity/FileReference.h"
#include "im/actor/model/files/FileSystemReference.h"
#include "im/actor/model/modules/BaseModule.h"
#include "im/actor/model/modules/Files.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/file/DownloadManager.h"
#include "im/actor/model/modules/file/UploadManager.h"
#include "im/actor/model/modules/file/entity/Downloaded.h"
#include "im/actor/model/viewmodel/FileCallback.h"
#include "im/actor/model/viewmodel/UploadFileCallback.h"
#include "java/io/IOException.h"

@interface ImActorModelModulesFiles () {
 @public
  id<DKKeyValueEngine> downloadedEngine_;
  DKActorRef *downloadManager_;
  DKActorRef *uploadManager_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFiles, downloadedEngine_, id<DKKeyValueEngine>)
J2OBJC_FIELD_SETTER(ImActorModelModulesFiles, downloadManager_, DKActorRef *)
J2OBJC_FIELD_SETTER(ImActorModelModulesFiles, uploadManager_, DKActorRef *)

@interface ImActorModelModulesFiles_$2 () {
 @public
  ImActorModelModulesFiles *this$0_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFiles_$2, this$0_, ImActorModelModulesFiles *)

@interface ImActorModelModulesFiles_$3 () {
 @public
  ImActorModelModulesFiles *this$0_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFiles_$3, this$0_, ImActorModelModulesFiles *)

@interface ImActorModelModulesFiles_$4 () {
 @public
  ImActorModelModulesFiles *this$0_;
  id<AMFileCallback> val$callback_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFiles_$4, this$0_, ImActorModelModulesFiles *)
J2OBJC_FIELD_SETTER(ImActorModelModulesFiles_$4, val$callback_, id<AMFileCallback>)

@interface ImActorModelModulesFiles_$4_$1 () {
 @public
  ImActorModelModulesFiles_$4 *this$0_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFiles_$4_$1, this$0_, ImActorModelModulesFiles_$4 *)

@interface ImActorModelModulesFiles_$4_$2 () {
 @public
  ImActorModelModulesFiles_$4 *this$0_;
  jfloat val$progress_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFiles_$4_$2, this$0_, ImActorModelModulesFiles_$4 *)

@interface ImActorModelModulesFiles_$4_$3 () {
 @public
  ImActorModelModulesFiles_$4 *this$0_;
  id<AMFileSystemReference> val$reference_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesFiles_$4_$3, this$0_, ImActorModelModulesFiles_$4 *)
J2OBJC_FIELD_SETTER(ImActorModelModulesFiles_$4_$3, val$reference_, id<AMFileSystemReference>)


#line 23
@implementation ImActorModelModulesFiles


#line 29
- (instancetype)initWithImActorModelModulesModules:(ImActorModelModulesModules *)modules {
  if (self =
#line 30
  [super initWithImActorModelModulesModules:modules]) {
    
#line 32
    downloadedEngine_ = [[ImActorModelModulesFiles_$1 alloc] initWithDKKeyValueStorage:
#line 33
    [((id<AMStorageProvider>) nil_chk([((AMConfiguration *) nil_chk([((ImActorModelModulesModules *) nil_chk(modules)) getConfiguration])) getStorageProvider])) createKeyValue:ImActorModelModulesBaseModule_get_STORAGE_DOWNLOADS_()]];
  }
  return self;
}


#line 51
- (void)run {
  
#line 52
  downloadManager_ = [((DKActorSystem *) nil_chk(DKActorSystem_system())) actorOfWithDKProps:DKProps_createWithIOSClass_withDKActorCreator_(ImActorModelModulesFileDownloadManager_class_(), [[ImActorModelModulesFiles_$2 alloc] initWithImActorModelModulesFiles:self]) withNSString:
#line 57
  @"actor/download/manager"];
  uploadManager_ = [((DKActorSystem *) nil_chk(DKActorSystem_system())) actorOfWithDKProps:DKProps_createWithIOSClass_withDKActorCreator_(ImActorModelModulesFileUploadManager_class_(), [[ImActorModelModulesFiles_$3 alloc] initWithImActorModelModulesFiles:self]) withNSString:
#line 63
  @"actor/upload/manager"];
}


#line 66
- (id<DKKeyValueEngine>)getDownloadedEngine {
  
#line 67
  return downloadedEngine_;
}


#line 70
- (void)bindFileWithAMFileReference:(AMFileReference *)fileReference
                        withBoolean:(jboolean)isAutostart
                 withAMFileCallback:(id<AMFileCallback>)callback {
  
#line 71
  [((DKActorRef *) nil_chk(downloadManager_)) sendWithId:[[ImActorModelModulesFileDownloadManager_BindDownload alloc] initWithAMFileReference:fileReference withBoolean:isAutostart withAMFileCallback:callback]];
}


#line 74
- (void)unbindFileWithLong:(jlong)fileId
        withAMFileCallback:(id<AMFileCallback>)callback
               withBoolean:(jboolean)cancel {
  
#line 75
  [((DKActorRef *) nil_chk(downloadManager_)) sendWithId:[[ImActorModelModulesFileDownloadManager_UnbindDownload alloc] initWithLong:fileId withBoolean:cancel withAMFileCallback:callback]];
}


#line 78
- (void)requestStateWithLong:(jlong)fileId
          withAMFileCallback:(id<AMFileCallback>)callback {
  
#line 79
  [((DKActorRef *) nil_chk(downloadManager_)) sendWithId:[[ImActorModelModulesFileDownloadManager_RequestState alloc] initWithLong:fileId withAMFileCallback:[[ImActorModelModulesFiles_$4 alloc] initWithImActorModelModulesFiles:self withAMFileCallback:callback]]];
}


#line 112
- (void)startDownloadingWithAMFileReference:(AMFileReference *)location {
  
#line 113
  [((DKActorRef *) nil_chk(downloadManager_)) sendWithId:[[ImActorModelModulesFileDownloadManager_StartDownload alloc] initWithAMFileReference:location]];
}


#line 116
- (void)cancelDownloadingWithLong:(jlong)fileId {
  
#line 117
  [((DKActorRef *) nil_chk(downloadManager_)) sendWithId:[[ImActorModelModulesFileDownloadManager_CancelDownload alloc] initWithLong:fileId]];
}

- (void)bindUploadFileWithLong:(jlong)rid
      withAMUploadFileCallback:(id<AMUploadFileCallback>)uploadFileCallback {
  
#line 123
  [((DKActorRef *) nil_chk(uploadManager_)) sendWithId:[[ImActorModelModulesFileUploadManager_BindUpload alloc] initWithLong:rid withAMUploadFileCallback:uploadFileCallback]];
}


#line 126
- (void)unbindUploadFileWithLong:(jlong)rid
        withAMUploadFileCallback:(id<AMUploadFileCallback>)callback {
  
#line 127
  [((DKActorRef *) nil_chk(uploadManager_)) sendWithId:[[ImActorModelModulesFileUploadManager_UnbindUpload alloc] initWithLong:rid withAMUploadFileCallback:callback]];
}


#line 130
- (void)requestUploadWithLong:(jlong)rid
                 withNSString:(NSString *)descriptor
                 withNSString:(NSString *)fileName
               withDKActorRef:(DKActorRef *)requester {
  
#line 131
  [((DKActorRef *) nil_chk(uploadManager_)) sendWithId:[[ImActorModelModulesFileUploadManager_StartUpload alloc] initWithLong:rid withNSString:descriptor withNSString:fileName] withDKActorRef:requester];
}


#line 134
- (void)cancelUploadWithLong:(jlong)rid {
  
#line 135
  [((DKActorRef *) nil_chk(uploadManager_)) sendWithId:[[ImActorModelModulesFileUploadManager_StopUpload alloc] initWithLong:rid]];
}


#line 138
- (void)requestUploadStateWithLong:(jlong)rid
          withAMUploadFileCallback:(id<AMUploadFileCallback>)callback {
  
#line 139
  [((DKActorRef *) nil_chk(uploadManager_)) sendWithId:[[ImActorModelModulesFileUploadManager_RequestState alloc] initWithLong:rid withAMUploadFileCallback:callback]];
}


#line 142
- (void)resumeUploadWithLong:(jlong)rid {
  
#line 143
  [((DKActorRef *) nil_chk(uploadManager_)) sendWithId:[[ImActorModelModulesFileUploadManager_ResumeUpload alloc] initWithLong:rid]];
}


#line 146
- (void)pauseUploadWithLong:(jlong)rid {
  
#line 147
  [((DKActorRef *) nil_chk(uploadManager_)) sendWithId:[[ImActorModelModulesFileUploadManager_PauseUpload alloc] initWithLong:rid]];
}


#line 150
- (NSString *)getDownloadedDescriptorWithLong:(jlong)fileId {
  
#line 151
  ImActorModelModulesFileEntityDownloaded *downloaded = [((id<DKKeyValueEngine>) nil_chk(downloadedEngine_)) getValueWithLong:fileId];
  if (downloaded == nil) {
    return nil;
  }
  else {
    
#line 155
    return [downloaded getDescriptor];
  }
}

- (void)copyAllFieldsTo:(ImActorModelModulesFiles *)other {
  [super copyAllFieldsTo:other];
  other->downloadedEngine_ = downloadedEngine_;
  other->downloadManager_ = downloadManager_;
  other->uploadManager_ = uploadManager_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFiles)

@implementation ImActorModelModulesFiles_$1


#line 35
- (IOSByteArray *)serializeWithDKKeyValueItem:(ImActorModelModulesFileEntityDownloaded *)value {
  
#line 36
  return [((ImActorModelModulesFileEntityDownloaded *) nil_chk(value)) toByteArray];
}


#line 40
- (ImActorModelModulesFileEntityDownloaded *)deserializeWithByteArray:(IOSByteArray *)data {
  @try {
    return ImActorModelModulesFileEntityDownloaded_fromBytesWithByteArray_(data);
  }
  @catch (
#line 43
  JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    return nil;
  }
}

- (instancetype)initWithDKKeyValueStorage:(id<DKKeyValueStorage>)arg$0 {
  return [super initWithDKKeyValueStorage:arg$0];
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFiles_$1)

@implementation ImActorModelModulesFiles_$2


#line 54
- (ImActorModelModulesFileDownloadManager *)create {
  
#line 55
  return [[ImActorModelModulesFileDownloadManager alloc] initWithImActorModelModulesModules:[this$0_ modules]];
}

- (instancetype)initWithImActorModelModulesFiles:(ImActorModelModulesFiles *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(ImActorModelModulesFiles_$2 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFiles_$2)

@implementation ImActorModelModulesFiles_$3


#line 60
- (ImActorModelModulesFileUploadManager *)create {
  
#line 61
  return [[ImActorModelModulesFileUploadManager alloc] initWithImActorModelModulesModules:[this$0_ modules]];
}

- (instancetype)initWithImActorModelModulesFiles:(ImActorModelModulesFiles *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(ImActorModelModulesFiles_$3 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFiles_$3)

@implementation ImActorModelModulesFiles_$4


#line 81
- (void)onNotDownloaded {
  [this$0_ runOnUiThreadWithJavaLangRunnable:[[ImActorModelModulesFiles_$4_$1 alloc] initWithImActorModelModulesFiles_$4:self]];
}


#line 91
- (void)onDownloadingWithFloat:(jfloat)progress {
  
#line 92
  [this$0_ runOnUiThreadWithJavaLangRunnable:[[ImActorModelModulesFiles_$4_$2 alloc] initWithImActorModelModulesFiles_$4:self withFloat:progress]];
}


#line 101
- (void)onDownloadedWithAMFileSystemReference:(id<AMFileSystemReference>)reference {
  
#line 102
  [this$0_ runOnUiThreadWithJavaLangRunnable:[[ImActorModelModulesFiles_$4_$3 alloc] initWithImActorModelModulesFiles_$4:self withAMFileSystemReference:reference]];
}

- (instancetype)initWithImActorModelModulesFiles:(ImActorModelModulesFiles *)outer$
                              withAMFileCallback:(id<AMFileCallback>)capture$0 {
  this$0_ = outer$;
  val$callback_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(ImActorModelModulesFiles_$4 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
  other->val$callback_ = val$callback_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFiles_$4)

@implementation ImActorModelModulesFiles_$4_$1


#line 84
- (void)run {
  
#line 85
  [((id<AMFileCallback>) nil_chk(this$0_->val$callback_)) onNotDownloaded];
}

- (instancetype)initWithImActorModelModulesFiles_$4:(ImActorModelModulesFiles_$4 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(ImActorModelModulesFiles_$4_$1 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFiles_$4_$1)

@implementation ImActorModelModulesFiles_$4_$2


#line 94
- (void)run {
  
#line 95
  [((id<AMFileCallback>) nil_chk(this$0_->val$callback_)) onDownloadingWithFloat:val$progress_];
}

- (instancetype)initWithImActorModelModulesFiles_$4:(ImActorModelModulesFiles_$4 *)outer$
                                          withFloat:(jfloat)capture$0 {
  this$0_ = outer$;
  val$progress_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(ImActorModelModulesFiles_$4_$2 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
  other->val$progress_ = val$progress_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFiles_$4_$2)

@implementation ImActorModelModulesFiles_$4_$3


#line 104
- (void)run {
  
#line 105
  [((id<AMFileCallback>) nil_chk(this$0_->val$callback_)) onDownloadedWithAMFileSystemReference:val$reference_];
}

- (instancetype)initWithImActorModelModulesFiles_$4:(ImActorModelModulesFiles_$4 *)outer$
                          withAMFileSystemReference:(id<AMFileSystemReference>)capture$0 {
  this$0_ = outer$;
  val$reference_ = capture$0;
  return [super init];
}

- (void)copyAllFieldsTo:(ImActorModelModulesFiles_$4_$3 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
  other->val$reference_ = val$reference_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesFiles_$4_$3)
