//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/library/actor-cocoa-base/build/java/im/actor/model/modules/avatar/GroupAvatarChangeActor.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/Avatar.h"
#include "im/actor/model/api/FileLocation.h"
#include "im/actor/model/api/GroupOutPeer.h"
#include "im/actor/model/api/base/SeqUpdate.h"
#include "im/actor/model/api/rpc/RequestEditGroupAvatar.h"
#include "im/actor/model/api/rpc/ResponseEditGroupAvatar.h"
#include "im/actor/model/api/updates/UpdateGroupAvatarChanged.h"
#include "im/actor/model/droidkit/actors/Actor.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/entity/FileReference.h"
#include "im/actor/model/entity/Group.h"
#include "im/actor/model/modules/Files.h"
#include "im/actor/model/modules/Groups.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/Updates.h"
#include "im/actor/model/modules/avatar/GroupAvatarChangeActor.h"
#include "im/actor/model/modules/file/UploadManager.h"
#include "im/actor/model/modules/updates/internal/ExecuteAfter.h"
#include "im/actor/model/modules/utils/ModuleActor.h"
#include "im/actor/model/modules/utils/RandomUtils.h"
#include "im/actor/model/mvvm/ValueModel.h"
#include "im/actor/model/network/RpcException.h"
#include "im/actor/model/viewmodel/AvatarUploadState.h"
#include "im/actor/model/viewmodel/GroupAvatarVM.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/HashMap.h"

@interface ImActorModelModulesAvatarGroupAvatarChangeActor () {
 @public
  JavaUtilHashMap *currentTasks_;
  JavaUtilHashMap *tasksMap_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesAvatarGroupAvatarChangeActor, currentTasks_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ImActorModelModulesAvatarGroupAvatarChangeActor, tasksMap_, JavaUtilHashMap *)

@interface ImActorModelModulesAvatarGroupAvatarChangeActor_AvatarChanged () {
 @public
  jint gid_;
  jlong rid_;
}
@end

@interface ImActorModelModulesAvatarGroupAvatarChangeActor_ChangeAvatar () {
 @public
  jint gid_;
  NSString *descriptor_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesAvatarGroupAvatarChangeActor_ChangeAvatar, descriptor_, NSString *)

@interface ImActorModelModulesAvatarGroupAvatarChangeActor_$1 () {
 @public
  ImActorModelModulesAvatarGroupAvatarChangeActor *this$0_;
  jint val$gid_;
  jlong val$rid_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesAvatarGroupAvatarChangeActor_$1, this$0_, ImActorModelModulesAvatarGroupAvatarChangeActor *)

@interface ImActorModelModulesAvatarGroupAvatarChangeActor_$1_$1 () {
 @public
  ImActorModelModulesAvatarGroupAvatarChangeActor_$1 *this$0_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesAvatarGroupAvatarChangeActor_$1_$1, this$0_, ImActorModelModulesAvatarGroupAvatarChangeActor_$1 *)

@implementation ImActorModelModulesAvatarGroupAvatarChangeActor

- (instancetype)initWithImActorModelModulesModules:(ImActorModelModulesModules *)modules {
  if (self = [super initWithImActorModelModulesModules:modules]) {
    currentTasks_ = [[JavaUtilHashMap alloc] init];
    tasksMap_ = [[JavaUtilHashMap alloc] init];
  }
  return self;
}

- (void)changeAvatarWithInt:(jint)gid
               withNSString:(NSString *)descriptor {
  if ([((JavaUtilHashMap *) nil_chk(currentTasks_)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(gid)]) {
    [((ImActorModelModulesFiles *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getFilesModule])) cancelUploadWithLong:[((JavaLangLong *) nil_chk([currentTasks_ getWithId:JavaLangInteger_valueOfWithInt_(gid)])) longLongValue]];
    (void) [currentTasks_ removeWithId:JavaLangInteger_valueOfWithInt_(gid)];
  }
  jlong rid = ImActorModelModulesUtilsRandomUtils_nextRid();
  (void) [currentTasks_ putWithId:JavaLangInteger_valueOfWithInt_(gid) withId:JavaLangLong_valueOfWithLong_(rid)];
  (void) [((JavaUtilHashMap *) nil_chk(tasksMap_)) putWithId:JavaLangLong_valueOfWithLong_(rid) withId:JavaLangInteger_valueOfWithInt_(gid)];
  [((AMValueModel *) nil_chk([((AMGroupAvatarVM *) nil_chk([((ImActorModelModulesGroups *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getGroupsModule])) getAvatarVMWithInt:gid])) getUploadState])) changeWithId:[[AMAvatarUploadState alloc] initWithNSString:descriptor withBoolean:YES]];
  [((ImActorModelModulesFiles *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getFilesModule])) requestUploadWithLong:rid withNSString:descriptor withNSString:@"avatar.jpg" withDKActorRef:[self self__]];
}

- (void)uploadCompletedWithLong:(jlong)rid
            withAMFileReference:(AMFileReference *)fileReference {
  if (![((JavaUtilHashMap *) nil_chk(tasksMap_)) containsKeyWithId:JavaLangLong_valueOfWithLong_(rid)]) {
    return;
  }
  jint gid = [((JavaLangInteger *) nil_chk([tasksMap_ getWithId:JavaLangLong_valueOfWithLong_(rid)])) intValue];
  jlong accessHash = [((AMGroup *) nil_chk([self getGroupWithInt:gid])) getAccessHash];
  if ([((JavaLangLong *) nil_chk([((JavaUtilHashMap *) nil_chk(currentTasks_)) getWithId:JavaLangInteger_valueOfWithInt_(gid)])) longLongValue] != rid) {
    return;
  }
  [self requestWithImActorModelNetworkParserRequest:[[ImActorModelApiRpcRequestEditGroupAvatar alloc] initWithImActorModelApiGroupOutPeer:[[ImActorModelApiGroupOutPeer alloc] initWithInt:gid withLong:accessHash] withLong:rid withImActorModelApiFileLocation:[[ImActorModelApiFileLocation alloc] initWithLong:[((AMFileReference *) nil_chk(fileReference)) getFileId] withLong:[fileReference getAccessHash]]] withAMRpcCallback:[[ImActorModelModulesAvatarGroupAvatarChangeActor_$1 alloc] initWithImActorModelModulesAvatarGroupAvatarChangeActor:self withInt:gid withLong:rid]];
}

- (void)avatarChangedWithInt:(jint)gid
                    withLong:(jlong)rid {
  if (![((JavaUtilHashMap *) nil_chk(currentTasks_)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(gid)]) {
    return;
  }
  if ([((JavaLangLong *) nil_chk([currentTasks_ getWithId:JavaLangInteger_valueOfWithInt_(gid)])) longLongValue] != rid) {
    return;
  }
  (void) [currentTasks_ removeWithId:JavaLangInteger_valueOfWithInt_(gid)];
  [((AMValueModel *) nil_chk([((AMGroupAvatarVM *) nil_chk([((ImActorModelModulesGroups *) nil_chk([((ImActorModelModulesModules *) nil_chk([self modules])) getGroupsModule])) getAvatarVMWithInt:gid])) getUploadState])) changeWithId:[[AMAvatarUploadState alloc] initWithNSString:nil withBoolean:NO]];
}

- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ImActorModelModulesAvatarGroupAvatarChangeActor_ChangeAvatar class]]) {
    ImActorModelModulesAvatarGroupAvatarChangeActor_ChangeAvatar *changeAvatar = (ImActorModelModulesAvatarGroupAvatarChangeActor_ChangeAvatar *) check_class_cast(message, [ImActorModelModulesAvatarGroupAvatarChangeActor_ChangeAvatar class]);
    [self changeAvatarWithInt:[((ImActorModelModulesAvatarGroupAvatarChangeActor_ChangeAvatar *) nil_chk(changeAvatar)) getGid] withNSString:[changeAvatar getDescriptor]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesFileUploadManager_UploadCompleted class]]) {
    ImActorModelModulesFileUploadManager_UploadCompleted *uploadCompleted = (ImActorModelModulesFileUploadManager_UploadCompleted *) check_class_cast(message, [ImActorModelModulesFileUploadManager_UploadCompleted class]);
    [self uploadCompletedWithLong:[((ImActorModelModulesFileUploadManager_UploadCompleted *) nil_chk(uploadCompleted)) getRid] withAMFileReference:[uploadCompleted getFileReference]];
  }
  else if ([message isKindOfClass:[ImActorModelModulesAvatarGroupAvatarChangeActor_AvatarChanged class]]) {
    ImActorModelModulesAvatarGroupAvatarChangeActor_AvatarChanged *avatarChanged = (ImActorModelModulesAvatarGroupAvatarChangeActor_AvatarChanged *) check_class_cast(message, [ImActorModelModulesAvatarGroupAvatarChangeActor_AvatarChanged class]);
    [self avatarChangedWithInt:[((ImActorModelModulesAvatarGroupAvatarChangeActor_AvatarChanged *) nil_chk(avatarChanged)) getGid] withLong:[avatarChanged getRid]];
  }
  else {
    [self dropWithId:message];
  }
}

- (void)copyAllFieldsTo:(ImActorModelModulesAvatarGroupAvatarChangeActor *)other {
  [super copyAllFieldsTo:other];
  other->currentTasks_ = currentTasks_;
  other->tasksMap_ = tasksMap_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesAvatarGroupAvatarChangeActor)

@implementation ImActorModelModulesAvatarGroupAvatarChangeActor_AvatarChanged

- (instancetype)initWithInt:(jint)gid
                   withLong:(jlong)rid {
  if (self = [super init]) {
    self->gid_ = gid;
    self->rid_ = rid;
  }
  return self;
}

- (jint)getGid {
  return gid_;
}

- (jlong)getRid {
  return rid_;
}

- (void)copyAllFieldsTo:(ImActorModelModulesAvatarGroupAvatarChangeActor_AvatarChanged *)other {
  [super copyAllFieldsTo:other];
  other->gid_ = gid_;
  other->rid_ = rid_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesAvatarGroupAvatarChangeActor_AvatarChanged)

@implementation ImActorModelModulesAvatarGroupAvatarChangeActor_ChangeAvatar

- (instancetype)initWithInt:(jint)gid
               withNSString:(NSString *)descriptor {
  if (self = [super init]) {
    self->gid_ = gid;
    self->descriptor_ = descriptor;
  }
  return self;
}

- (jint)getGid {
  return gid_;
}

- (NSString *)getDescriptor {
  return descriptor_;
}

- (void)copyAllFieldsTo:(ImActorModelModulesAvatarGroupAvatarChangeActor_ChangeAvatar *)other {
  [super copyAllFieldsTo:other];
  other->gid_ = gid_;
  other->descriptor_ = descriptor_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesAvatarGroupAvatarChangeActor_ChangeAvatar)

@implementation ImActorModelModulesAvatarGroupAvatarChangeActor_$1

- (void)onResultWithImActorModelNetworkParserResponse:(ImActorModelApiRpcResponseEditGroupAvatar *)response {
  [((ImActorModelModulesUpdates *) nil_chk([this$0_ updates])) onUpdateReceivedWithId:[[ImActorModelApiBaseSeqUpdate alloc] initWithInt:[((ImActorModelApiRpcResponseEditGroupAvatar *) nil_chk(response)) getSeq] withByteArray:[response getState] withInt:ImActorModelApiUpdatesUpdateGroupAvatarChanged_HEADER withByteArray:[((ImActorModelApiUpdatesUpdateGroupAvatarChanged *) [[ImActorModelApiUpdatesUpdateGroupAvatarChanged alloc] initWithInt:val$gid_ withLong:val$rid_ withInt:[this$0_ myUid] withImActorModelApiAvatar:[response getAvatar] withLong:[response getDate]]) toByteArray]]];
  [((ImActorModelModulesUpdates *) nil_chk([this$0_ updates])) onUpdateReceivedWithId:[[ImActorModelModulesUpdatesInternalExecuteAfter alloc] initWithInt:[response getSeq] withJavaLangRunnable:[[ImActorModelModulesAvatarGroupAvatarChangeActor_$1_$1 alloc] initWithImActorModelModulesAvatarGroupAvatarChangeActor_$1:self]]];
}

- (void)onErrorWithAMRpcException:(AMRpcException *)e {
  [((AMValueModel *) nil_chk([((AMGroupAvatarVM *) nil_chk([((ImActorModelModulesGroups *) nil_chk([((ImActorModelModulesModules *) nil_chk([this$0_ modules])) getGroupsModule])) getAvatarVMWithInt:val$gid_])) getUploadState])) changeWithId:[[AMAvatarUploadState alloc] initWithNSString:nil withBoolean:NO]];
}

- (instancetype)initWithImActorModelModulesAvatarGroupAvatarChangeActor:(ImActorModelModulesAvatarGroupAvatarChangeActor *)outer$
                                                                withInt:(jint)capture$0
                                                               withLong:(jlong)capture$1 {
  this$0_ = outer$;
  val$gid_ = capture$0;
  val$rid_ = capture$1;
  return [super init];
}

- (void)copyAllFieldsTo:(ImActorModelModulesAvatarGroupAvatarChangeActor_$1 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
  other->val$gid_ = val$gid_;
  other->val$rid_ = val$rid_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesAvatarGroupAvatarChangeActor_$1)

@implementation ImActorModelModulesAvatarGroupAvatarChangeActor_$1_$1

- (void)run {
  [((DKActorRef *) nil_chk([this$0_->this$0_ self__])) sendWithId:[[ImActorModelModulesAvatarGroupAvatarChangeActor_AvatarChanged alloc] initWithInt:this$0_->val$gid_ withLong:this$0_->val$rid_]];
}

- (instancetype)initWithImActorModelModulesAvatarGroupAvatarChangeActor_$1:(ImActorModelModulesAvatarGroupAvatarChangeActor_$1 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

- (void)copyAllFieldsTo:(ImActorModelModulesAvatarGroupAvatarChangeActor_$1_$1 *)other {
  [super copyAllFieldsTo:other];
  other->this$0_ = this$0_;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesAvatarGroupAvatarChangeActor_$1_$1)
